{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"NLP_py/","text":"","title":"\u81ea\u7136\u8bed\u8a00\u5904\u7406"},{"location":"NLP_pyspark/","text":"CountVectorDPy3 \u5c06\u8bcd\u6c47\u751f\u6210\u6587\u6863\u7684\u7a00\u758f\u8868\u793a Tag: \u81ea\u7136\u8bed\u8a00\u5904\u7406_\u5206\u5e03\u5f0f Param: inputCol (string) : outputCol (string) : minDF (double) : \u8bcd\u6c47\u8868\u4e2d\u7684\u6587\u6863\u7684\u6700\u5c0f\u6570\u91cf minTF (double) : \u6700\u5c0ftf\u503c vocabSize (int) : binary (string) : \u662f\u5426\u4e8c\u8fdb\u5236\u7f16\u7801 Input: in1 (any) Output: out1 (any) HashingTFDPy3 \u5c06\u539f\u59cb\u7279\u5f81\u901a\u8fc7\u5e94\u7528\u54c8\u5e0c\u51fd\u6570\u6620\u5c04\u5230\u7d22\u5f15\u4e2d Tag: \u81ea\u7136\u8bed\u8a00\u5904\u7406_\u5206\u5e03\u5f0f Param: inputCol (string) : outputCol (string) : numFeatures (int) : \u529f\u80fd\u7ef4\u5ea6 binary (string) : \u662f\u5426\u4e8c\u8fdb\u5236\u7f16\u7801 Input: in1 (any) Output: out1 (any) IDFDPy3_copy \u5229\u7528IDFModel\u83b7\u53d6\u7279\u5f81\u5411\u91cf\uff08\u901a\u5e38\u7531HashingTF\u6216CountVectorizer\u521b\u5efa\uff09\u5e76\u7f29\u653e\u6bcf\u5217 Tag: \u81ea\u7136\u8bed\u8a00\u5904\u7406_\u5206\u5e03\u5f0f Param: inputCol (string) : outputCol (string) : minDocFreq (int) : \u6700\u4f4e\u6587\u6863\u8bcd\u9891 Input: in1 (any) Output: out1 (any) NGramDPy3 NGram Tag: \u81ea\u7136\u8bed\u8a00\u5904\u7406_\u5206\u5e03\u5f0f Param: inputCol (string) : outputCol (string) : n (int) : ngram\u7684n\u503c Input: in1 (any) Output: out1 (any) RegexTokenizerDPy3 \u81ea\u5b9a\u4e49\u5206\u9694\u7b26\u5206\u8bcd\uff0c\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f Tag: \u81ea\u7136\u8bed\u8a00\u5904\u7406_\u5206\u5e03\u5f0f Param: inputCol (string) : outputCol (string) : toLowercase (string) : \u662f\u5426\u5c06\u5927\u5199\u8f6c\u6210\u5c0f\u5199 minTokenLength (int) : \u6700\u5c0f\u5206\u5272\u957f\u5ea6 gaps (string) : pattern (string) : \u5206\u9694\u7b26\uff0c\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f Input: in1 (any) Output: out1 (any) StopWordsRemoverDPy3 \u53bb\u505c\u7528\u8bcd Tag: \u81ea\u7136\u8bed\u8a00\u5904\u7406_\u5206\u5e03\u5f0f Param: inputCol (string) : outputCol (string) : stopWords (string) : \u505c\u7528\u8bcd\u9017\u53f7\u9694\u5f00 caseSensitive (string) : Input: in1 (any) Output: out1 (any) TokenizerDPy3 \u7a7a\u683c\u5206\u8bcd Tag: \u81ea\u7136\u8bed\u8a00\u5904\u7406_\u5206\u5e03\u5f0f Param: inputCol (string) : outputCol (string) : Input: in1 (any) Output: out1 (any) Word2VecDPy3 \u5c06\u6bcf\u4e2a\u5355\u8bcd\u6620\u5c04\u5230\u4e00\u4e2a\u552f\u4e00\u7684\u56fa\u5b9a\u5927\u5c0f\u5411\u91cf Tag: \u81ea\u7136\u8bed\u8a00\u5904\u7406_\u5206\u5e03\u5f0f Param: inputCol (string) : outputCol (string) : vectorSize (int) : \u5411\u91cf\u7ef4\u5ea6\u5927\u5c0f minCount (int) : \u8bcd\u6700\u5c0f\u603b\u91cf numPartitions (int) : \u8bbe\u7f6e\u5206\u533a\u6570 stepSize (double) : maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 seed (int) : \u79cd\u5b50\u6570 windowSize (int) : \u7a97\u53e3\u5927\u5c0f maxSentenceLength (int) : \u6700\u5927\u53e5\u5b50\u957f\u5ea6 Input: in1 (any) Output: out1 (any)","title":"\u81ea\u7136\u8bed\u8a00\u5904\u7406"},{"location":"NLP_pyspark/#countvectordpy3","text":"\u5c06\u8bcd\u6c47\u751f\u6210\u6587\u6863\u7684\u7a00\u758f\u8868\u793a","title":"CountVectorDPy3"},{"location":"NLP_pyspark/#tag","text":"\u81ea\u7136\u8bed\u8a00\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"NLP_pyspark/#param","text":"inputCol (string) : outputCol (string) : minDF (double) : \u8bcd\u6c47\u8868\u4e2d\u7684\u6587\u6863\u7684\u6700\u5c0f\u6570\u91cf minTF (double) : \u6700\u5c0ftf\u503c vocabSize (int) : binary (string) : \u662f\u5426\u4e8c\u8fdb\u5236\u7f16\u7801","title":"Param:"},{"location":"NLP_pyspark/#input","text":"in1 (any)","title":"Input:"},{"location":"NLP_pyspark/#output","text":"out1 (any)","title":"Output:"},{"location":"NLP_pyspark/#hashingtfdpy3","text":"\u5c06\u539f\u59cb\u7279\u5f81\u901a\u8fc7\u5e94\u7528\u54c8\u5e0c\u51fd\u6570\u6620\u5c04\u5230\u7d22\u5f15\u4e2d","title":"HashingTFDPy3"},{"location":"NLP_pyspark/#tag_1","text":"\u81ea\u7136\u8bed\u8a00\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"NLP_pyspark/#param_1","text":"inputCol (string) : outputCol (string) : numFeatures (int) : \u529f\u80fd\u7ef4\u5ea6 binary (string) : \u662f\u5426\u4e8c\u8fdb\u5236\u7f16\u7801","title":"Param:"},{"location":"NLP_pyspark/#input_1","text":"in1 (any)","title":"Input:"},{"location":"NLP_pyspark/#output_1","text":"out1 (any)","title":"Output:"},{"location":"NLP_pyspark/#idfdpy3_copy","text":"\u5229\u7528IDFModel\u83b7\u53d6\u7279\u5f81\u5411\u91cf\uff08\u901a\u5e38\u7531HashingTF\u6216CountVectorizer\u521b\u5efa\uff09\u5e76\u7f29\u653e\u6bcf\u5217","title":"IDFDPy3_copy"},{"location":"NLP_pyspark/#tag_2","text":"\u81ea\u7136\u8bed\u8a00\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"NLP_pyspark/#param_2","text":"inputCol (string) : outputCol (string) : minDocFreq (int) : \u6700\u4f4e\u6587\u6863\u8bcd\u9891","title":"Param:"},{"location":"NLP_pyspark/#input_2","text":"in1 (any)","title":"Input:"},{"location":"NLP_pyspark/#output_2","text":"out1 (any)","title":"Output:"},{"location":"NLP_pyspark/#ngramdpy3","text":"NGram","title":"NGramDPy3"},{"location":"NLP_pyspark/#tag_3","text":"\u81ea\u7136\u8bed\u8a00\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"NLP_pyspark/#param_3","text":"inputCol (string) : outputCol (string) : n (int) : ngram\u7684n\u503c","title":"Param:"},{"location":"NLP_pyspark/#input_3","text":"in1 (any)","title":"Input:"},{"location":"NLP_pyspark/#output_3","text":"out1 (any)","title":"Output:"},{"location":"NLP_pyspark/#regextokenizerdpy3","text":"\u81ea\u5b9a\u4e49\u5206\u9694\u7b26\u5206\u8bcd\uff0c\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f","title":"RegexTokenizerDPy3"},{"location":"NLP_pyspark/#tag_4","text":"\u81ea\u7136\u8bed\u8a00\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"NLP_pyspark/#param_4","text":"inputCol (string) : outputCol (string) : toLowercase (string) : \u662f\u5426\u5c06\u5927\u5199\u8f6c\u6210\u5c0f\u5199 minTokenLength (int) : \u6700\u5c0f\u5206\u5272\u957f\u5ea6 gaps (string) : pattern (string) : \u5206\u9694\u7b26\uff0c\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f","title":"Param:"},{"location":"NLP_pyspark/#input_4","text":"in1 (any)","title":"Input:"},{"location":"NLP_pyspark/#output_4","text":"out1 (any)","title":"Output:"},{"location":"NLP_pyspark/#stopwordsremoverdpy3","text":"\u53bb\u505c\u7528\u8bcd","title":"StopWordsRemoverDPy3"},{"location":"NLP_pyspark/#tag_5","text":"\u81ea\u7136\u8bed\u8a00\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"NLP_pyspark/#param_5","text":"inputCol (string) : outputCol (string) : stopWords (string) : \u505c\u7528\u8bcd\u9017\u53f7\u9694\u5f00 caseSensitive (string) :","title":"Param:"},{"location":"NLP_pyspark/#input_5","text":"in1 (any)","title":"Input:"},{"location":"NLP_pyspark/#output_5","text":"out1 (any)","title":"Output:"},{"location":"NLP_pyspark/#tokenizerdpy3","text":"\u7a7a\u683c\u5206\u8bcd","title":"TokenizerDPy3"},{"location":"NLP_pyspark/#tag_6","text":"\u81ea\u7136\u8bed\u8a00\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"NLP_pyspark/#param_6","text":"inputCol (string) : outputCol (string) :","title":"Param:"},{"location":"NLP_pyspark/#input_6","text":"in1 (any)","title":"Input:"},{"location":"NLP_pyspark/#output_6","text":"out1 (any)","title":"Output:"},{"location":"NLP_pyspark/#word2vecdpy3","text":"\u5c06\u6bcf\u4e2a\u5355\u8bcd\u6620\u5c04\u5230\u4e00\u4e2a\u552f\u4e00\u7684\u56fa\u5b9a\u5927\u5c0f\u5411\u91cf","title":"Word2VecDPy3"},{"location":"NLP_pyspark/#tag_7","text":"\u81ea\u7136\u8bed\u8a00\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"NLP_pyspark/#param_7","text":"inputCol (string) : outputCol (string) : vectorSize (int) : \u5411\u91cf\u7ef4\u5ea6\u5927\u5c0f minCount (int) : \u8bcd\u6700\u5c0f\u603b\u91cf numPartitions (int) : \u8bbe\u7f6e\u5206\u533a\u6570 stepSize (double) : maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 seed (int) : \u79cd\u5b50\u6570 windowSize (int) : \u7a97\u53e3\u5927\u5c0f maxSentenceLength (int) : \u6700\u5927\u53e5\u5b50\u957f\u5ea6","title":"Param:"},{"location":"NLP_pyspark/#input_7","text":"in1 (any)","title":"Input:"},{"location":"NLP_pyspark/#output_7","text":"out1 (any)","title":"Output:"},{"location":"R/","text":"NormalVisuSR_all \u62a5\u8868\u5c55\u793a\u53ef\u89c6\u5316\u6a21\u5757-\u9759\u6001\u56fe\u7247 Tag: R Param: x_data_factor_flag (string) : \u662f\u5426\u8f6c\u5316\u6210\u7ef4\u5ea6\u56e0\u5b50,\u8f93\u5165\"y\"/\"Y\"\u6267\u884c\u3002\u4f8b:x_data_fsctor_flag<-\"y\" reorder_flag (string) : \u662f\u5426\u6309y\u8f74\u6392\u5e8f,\"order\"\u5347\u5e8f\uff0c\"desc\"\u964d\u5e8f,\u5176\u4ed6\u4e0d\u6392\u5e8f\u3002\u4f8b:reorder_flag<-\"order\" lab_title (string) : \u56fe\u8868\u6807\u9898\u5185\u5bb9\u3002 x_lab_title (string) : x\u8f74\u6807\u9898\u5185\u5bb9 y_lab_title (string) : y\u8f74\u6807\u9898\u5185\u5bb9\u3002 Input: df (csv) Output: pp1 (pdf) NormalVisuSR_read_data \u6570\u636e\u5904\u7406\u6a21\u5757-1 Tag: R Param: model_data_test_val (string) : \u6570\u636e\u9009\u62e9 Input: df (csv) Output: df_select (csv) plotly_ggplot2_pie_2dim \u52a8\u6001-\u997c\u56fe Tag: R Param: lab_title (string) : \u62a5\u8868\u6807\u9898 tooltip_text_val_up (string) : \u63d0\u793a\u6807\u7b7e\u524d\u7f00 tooltip_text_val_down (string) : \u63d0\u793a\u6807\u7b7e\u540e\u7f00 Input: df (csv) Output: ppg (html)","title":"R\u8bed\u8a00\u6a21\u5757"},{"location":"R/#normalvisusr_all","text":"\u62a5\u8868\u5c55\u793a\u53ef\u89c6\u5316\u6a21\u5757-\u9759\u6001\u56fe\u7247","title":"NormalVisuSR_all"},{"location":"R/#tag","text":"R","title":"Tag:"},{"location":"R/#param","text":"x_data_factor_flag (string) : \u662f\u5426\u8f6c\u5316\u6210\u7ef4\u5ea6\u56e0\u5b50,\u8f93\u5165\"y\"/\"Y\"\u6267\u884c\u3002\u4f8b:x_data_fsctor_flag<-\"y\" reorder_flag (string) : \u662f\u5426\u6309y\u8f74\u6392\u5e8f,\"order\"\u5347\u5e8f\uff0c\"desc\"\u964d\u5e8f,\u5176\u4ed6\u4e0d\u6392\u5e8f\u3002\u4f8b:reorder_flag<-\"order\" lab_title (string) : \u56fe\u8868\u6807\u9898\u5185\u5bb9\u3002 x_lab_title (string) : x\u8f74\u6807\u9898\u5185\u5bb9 y_lab_title (string) : y\u8f74\u6807\u9898\u5185\u5bb9\u3002","title":"Param:"},{"location":"R/#input","text":"df (csv)","title":"Input:"},{"location":"R/#output","text":"pp1 (pdf)","title":"Output:"},{"location":"R/#normalvisusr_read_data","text":"\u6570\u636e\u5904\u7406\u6a21\u5757-1","title":"NormalVisuSR_read_data"},{"location":"R/#tag_1","text":"R","title":"Tag:"},{"location":"R/#param_1","text":"model_data_test_val (string) : \u6570\u636e\u9009\u62e9","title":"Param:"},{"location":"R/#input_1","text":"df (csv)","title":"Input:"},{"location":"R/#output_1","text":"df_select (csv)","title":"Output:"},{"location":"R/#plotly_ggplot2_pie_2dim","text":"\u52a8\u6001-\u997c\u56fe","title":"plotly_ggplot2_pie_2dim"},{"location":"R/#tag_2","text":"R","title":"Tag:"},{"location":"R/#param_2","text":"lab_title (string) : \u62a5\u8868\u6807\u9898 tooltip_text_val_up (string) : \u63d0\u793a\u6807\u7b7e\u524d\u7f00 tooltip_text_val_down (string) : \u63d0\u793a\u6807\u7b7e\u540e\u7f00","title":"Param:"},{"location":"R/#input_2","text":"df (csv)","title":"Input:"},{"location":"R/#output_2","text":"ppg (html)","title":"Output:"},{"location":"SQL_py/","text":"SQLUnivSPy3 \u53ef\u901a\u8fc7sql\u811a\u672c\u7f16\u8f91\u5668\u7f16\u5199sql\u8bed\u53e5 Tag: SQL Param: Script (string) : Input: d_data1 (csv) Output: d_data2 (csv)","title":"SQL"},{"location":"SQL_py/#sqlunivspy3","text":"\u53ef\u901a\u8fc7sql\u811a\u672c\u7f16\u8f91\u5668\u7f16\u5199sql\u8bed\u53e5","title":"SQLUnivSPy3"},{"location":"SQL_py/#tag","text":"SQL","title":"Tag:"},{"location":"SQL_py/#param","text":"Script (string) :","title":"Param:"},{"location":"SQL_py/#input","text":"d_data1 (csv)","title":"Input:"},{"location":"SQL_py/#output","text":"d_data2 (csv)","title":"Output:"},{"location":"about/","text":"About","title":"Home"},{"location":"about/#about","text":"","title":"About"},{"location":"auto_ML_py/","text":"ML_BinaryClassModelEval_churn \u81ea\u52a8\u5efa\u6a21 - \u4e8c\u5206\u7c7b\u8bc4\u4f30\u6a21\u5757 Tag: \u81ea\u52a8\u5efa\u6a21 Param: None Input: blockId (py3pkl) model (model.pkl) X_test (csv) y_test (csv) Output: modelScores (txt) ML_BinaryClassModelEval \u81ea\u52a8\u5efa\u6a21 - \u4e8c\u5206\u7c7b\u8bc4\u4f30\u6a21\u5757 Tag: \u81ea\u52a8\u5efa\u6a21 Param: None Input: model (model.pkl) X_test (csv) y_test (csv) Output: modelScores (py3pkl) ML_CategoryFeatureHandle \u81ea\u52a8\u5efa\u6a21-\u7c7b\u522b\u7279\u5f81\u5904\u7406 Tag: \u81ea\u52a8\u5efa\u6a21 Param: cols (string) : \u7c7b\u522b\u5217\u540d\uff0c\u591a\u5217\u7528\u9017\u53f7\u5206\u5272 handling (string) : \u7279\u5f81\u5904\u7406\u7b56\u7565 targetCol (string) : \u76ee\u6807\u5217\uff0c\u4ec5\u652f\u6301\u4e00\u5217 Input: sampleData (csv) Output: categoryFeatureHandleData (csv) ML_HyperparamsCV \u81ea\u52a8\u5efa\u6a21 \u8d85\u53c2\u6570\u8c03\u4f18\u6a21\u5757 Tag: \u81ea\u52a8\u5efa\u6a21 Param: hyperparams (string) : \u8d85\u53c2\u6570\u914d\u7f6e param_dist (string) : \u7b97\u6cd5\u53c2\u6570\u4fe1\u606f evalStr (string) : \u7b97\u6cd5\u540d\u79f0 Input: X_train (csv) y_train (csv) Output: model (model.pkl) blockId (py3pkl) ML_MultiClassModelEval \u81ea\u52a8\u5efa\u6a21 - \u591a\u5206\u7c7b\u8bc4\u4f30\u6a21\u5757 Tag: \u81ea\u52a8\u5efa\u6a21 Param: None Input: model (model.pkl) X_test (csv) y_test (csv) Output: modelScores (py3pkl) ML_NumFeatureHandle \u81ea\u52a8\u5efa\u6a21-\u6570\u503c\u7279\u5f81\u5904\u7406 Tag: \u81ea\u52a8\u5efa\u6a21 Param: targetCol (string) : \u76ee\u6807\u5217 cols (string) : \u6570\u503c\u5217\uff0c\u591a\u5217\u4f7f\u7528\u9017\u53f7\u5206\u5272 handling (string) : \u6570\u503c\u7279\u5f81\u5904\u7406\u7b56\u7565 rescaling (string) : handling\u4e3aASREGULARFEATURE\u5fc5\u586b binarizeThreshold (string) : handling\u4e3aBINARIZETHRESHOLD\u5fc5\u586b constantValue (double) : \u56fa\u5b9a\u503c\uff0cbinarizeThreshold\u4e3aCONSTANT\u5fc5\u586b quantizeNum (int) : handling\u4e3aQUANTIZE\u5fc5\u586b Input: sampleData (csv) Output: numFeatureHandleData (csv) ML_PreHandle \u81ea\u52a8\u5efa\u6a21-\u7279\u5f81\u5de5\u7a0b-\u6570\u636e\u9884\u5904\u7406 Tag: \u81ea\u52a8\u5efa\u6a21 Param: cols (string) : \u5217\u540d\uff0c\u591a\u5217\u7528\u9017\u53f7\u5206\u5272 variableType (string) : \u5217\u7684\u7c7b\u578b handling (string) : \u7f3a\u5931\u503c\u5904\u7406\u7b56\u7565 ASREGULAR - \u4f5c\u4e3a\u5e38\u89c4\u503c IMPUTE - \u586b\u5145 DROPROWS - \u5220\u9664\u8be5\u884c impute (string) : \u7f3a\u5931\u503c\u586b\u5145\u7b56\u7565 MOSTFREQUENT-\u4f17\u6570, MEAN-\u5e73\u5747\u6570 MEDIAN-\u4e2d\u4f4d\u6570 CONSTANT-\u56fa\u5b9a\u503c constantValue (string) : \u7f3a\u5931\u503c\u586b\u5145\u56fa\u5b9a\u503c targetCol (string) : \u76ee\u6807\u5217 Input: originalData (csv) Output: handleData (csv) ML_RegModelEval \u81ea\u52a8\u5efa\u6a21 - \u56de\u5f52\u6a21\u578b\u8bc4\u4f30 Tag: \u81ea\u52a8\u5efa\u6a21 Param: None Input: model (model.pkl) X_test (csv) y_test (csv) Output: modelScores (py3pkl) ML_SampleData \u81ea\u52a8\u5efa\u6a21 - \u6570\u636e\u91c7\u6837 Tag: \u81ea\u52a8\u5efa\u6a21 Param: method (string) : \u91c7\u6837\u65b9\u6cd5 recordsNum (int) : \u91c7\u6837\u884c\u6570 recordsRatio (double) : \u91c7\u6837\u6bd4\u4f8b column (string) : \u4fdd\u6301\u7c7b\u5e73\u8861\u91c7\u6837\u7684\u7279\u5f81\u5217 cols (string) : \u8981\u91c7\u6837\u7684\u5217\uff0c\u591a\u5217\u4f7f\u7528\u9017\u53f7\u5206\u5272 Input: handleData (csv) Output: sampleData (csv) Ml_SplitSet \u81ea\u52a8\u5efa\u6a21-\u6570\u636e\u62c6\u5206 Tag: \u81ea\u52a8\u5efa\u6a21 Param: targetCol (string) : \u76ee\u6807\u5217 split (string) : \u62c6\u5206\u7b56\u7565 kFoldCrossTest (string) : \u662f\u5426\u542f\u7528K-\u6298\u4ea4\u53c9 foldNum (int) : K-\u6298\uff0ckFoldCrossTest=True trainRatio (double) : \u8bad\u7ec3\u96c6\u7684\u6837\u672c\u6bd4\u4f8b\uff0ckFoldCrossTest=FALSE Input: featureHandleData (csv) Output: X_train (csv) y_train (csv) X_test (csv) y_test (csv) TPOTSPy3 \u57fa\u4e8ePython\u7684\u81ea\u52a8\u5f0f\u673a\u5668\u5b66\u4e60\u5de5\u5177\uff0c\u4f7f\u7528\u57fa\u56e0\u7b97\u6cd5\u4f18\u5316\u673a\u5668\u5b66\u4e60\u7ba1\u9053\u3002 Tag: \u81ea\u52a8\u5efa\u6a21 Param: split_radio (double) : \u8bad\u7ec3\u6570\u636e\u5206\u5272\u6bd4 generations (int) : \u5bf9\u8fd0\u884c\u7ba1\u9053\u4f18\u5316\u8fc7\u7a0b\u7684\u8fed\u4ee3\u6b21\u6570 population_size (int) : \u6bcf\u6b21\u8fed\u4ee3\u4e2a\u4f53\u4fdd\u7559\u6570\u76ee tpop_mode (string) : \u786e\u5b9e\u6a21\u578b\u662f\u76d1\u7763\u5206\u7c7b\u6216\u56de\u5f52\u95ee\u9898 cv (int) : \u5728\u8bc4\u4f30\u7ba1\u9053\u65f6\u4f7f\u7528\u7684\u4ea4\u53c9\u9a8c\u8bc1\u7b56\u7565 verbosity (int) : TPOT\u663e\u793a\u4fe1\u606f\u7b49\u7ea7 scoring (string) : \u6a21\u578b\u8bc4\u4f30\u9009\u62e9\u6307\u6807 n_jobs (int) : \u5728TPOT\u4f18\u5316\u8fc7\u7a0b\u4e2d\uff0c\u5e76\u884c\u7528\u4e8e\u8bc4\u4f30\u7ba1\u9053\u7684\u8fc7\u7a0b\u7684\u6570\u91cf Input: in_1 (csv) Output: out_1 (file)","title":"\u81ea\u52a8\u5efa\u6a21\u6a21\u5757"},{"location":"auto_ML_py/#ml_binaryclassmodeleval_churn","text":"\u81ea\u52a8\u5efa\u6a21 - \u4e8c\u5206\u7c7b\u8bc4\u4f30\u6a21\u5757","title":"ML_BinaryClassModelEval_churn"},{"location":"auto_ML_py/#tag","text":"\u81ea\u52a8\u5efa\u6a21","title":"Tag:"},{"location":"auto_ML_py/#param","text":"None","title":"Param:"},{"location":"auto_ML_py/#input","text":"blockId (py3pkl) model (model.pkl) X_test (csv) y_test (csv)","title":"Input:"},{"location":"auto_ML_py/#output","text":"modelScores (txt)","title":"Output:"},{"location":"auto_ML_py/#ml_binaryclassmodeleval","text":"\u81ea\u52a8\u5efa\u6a21 - \u4e8c\u5206\u7c7b\u8bc4\u4f30\u6a21\u5757","title":"ML_BinaryClassModelEval"},{"location":"auto_ML_py/#tag_1","text":"\u81ea\u52a8\u5efa\u6a21","title":"Tag:"},{"location":"auto_ML_py/#param_1","text":"None","title":"Param:"},{"location":"auto_ML_py/#input_1","text":"model (model.pkl) X_test (csv) y_test (csv)","title":"Input:"},{"location":"auto_ML_py/#output_1","text":"modelScores (py3pkl)","title":"Output:"},{"location":"auto_ML_py/#ml_categoryfeaturehandle","text":"\u81ea\u52a8\u5efa\u6a21-\u7c7b\u522b\u7279\u5f81\u5904\u7406","title":"ML_CategoryFeatureHandle"},{"location":"auto_ML_py/#tag_2","text":"\u81ea\u52a8\u5efa\u6a21","title":"Tag:"},{"location":"auto_ML_py/#param_2","text":"cols (string) : \u7c7b\u522b\u5217\u540d\uff0c\u591a\u5217\u7528\u9017\u53f7\u5206\u5272 handling (string) : \u7279\u5f81\u5904\u7406\u7b56\u7565 targetCol (string) : \u76ee\u6807\u5217\uff0c\u4ec5\u652f\u6301\u4e00\u5217","title":"Param:"},{"location":"auto_ML_py/#input_2","text":"sampleData (csv)","title":"Input:"},{"location":"auto_ML_py/#output_2","text":"categoryFeatureHandleData (csv)","title":"Output:"},{"location":"auto_ML_py/#ml_hyperparamscv","text":"\u81ea\u52a8\u5efa\u6a21 \u8d85\u53c2\u6570\u8c03\u4f18\u6a21\u5757","title":"ML_HyperparamsCV"},{"location":"auto_ML_py/#tag_3","text":"\u81ea\u52a8\u5efa\u6a21","title":"Tag:"},{"location":"auto_ML_py/#param_3","text":"hyperparams (string) : \u8d85\u53c2\u6570\u914d\u7f6e param_dist (string) : \u7b97\u6cd5\u53c2\u6570\u4fe1\u606f evalStr (string) : \u7b97\u6cd5\u540d\u79f0","title":"Param:"},{"location":"auto_ML_py/#input_3","text":"X_train (csv) y_train (csv)","title":"Input:"},{"location":"auto_ML_py/#output_3","text":"model (model.pkl) blockId (py3pkl)","title":"Output:"},{"location":"auto_ML_py/#ml_multiclassmodeleval","text":"\u81ea\u52a8\u5efa\u6a21 - \u591a\u5206\u7c7b\u8bc4\u4f30\u6a21\u5757","title":"ML_MultiClassModelEval"},{"location":"auto_ML_py/#tag_4","text":"\u81ea\u52a8\u5efa\u6a21","title":"Tag:"},{"location":"auto_ML_py/#param_4","text":"None","title":"Param:"},{"location":"auto_ML_py/#input_4","text":"model (model.pkl) X_test (csv) y_test (csv)","title":"Input:"},{"location":"auto_ML_py/#output_4","text":"modelScores (py3pkl)","title":"Output:"},{"location":"auto_ML_py/#ml_numfeaturehandle","text":"\u81ea\u52a8\u5efa\u6a21-\u6570\u503c\u7279\u5f81\u5904\u7406","title":"ML_NumFeatureHandle"},{"location":"auto_ML_py/#tag_5","text":"\u81ea\u52a8\u5efa\u6a21","title":"Tag:"},{"location":"auto_ML_py/#param_5","text":"targetCol (string) : \u76ee\u6807\u5217 cols (string) : \u6570\u503c\u5217\uff0c\u591a\u5217\u4f7f\u7528\u9017\u53f7\u5206\u5272 handling (string) : \u6570\u503c\u7279\u5f81\u5904\u7406\u7b56\u7565 rescaling (string) : handling\u4e3aASREGULARFEATURE\u5fc5\u586b binarizeThreshold (string) : handling\u4e3aBINARIZETHRESHOLD\u5fc5\u586b constantValue (double) : \u56fa\u5b9a\u503c\uff0cbinarizeThreshold\u4e3aCONSTANT\u5fc5\u586b quantizeNum (int) : handling\u4e3aQUANTIZE\u5fc5\u586b","title":"Param:"},{"location":"auto_ML_py/#input_5","text":"sampleData (csv)","title":"Input:"},{"location":"auto_ML_py/#output_5","text":"numFeatureHandleData (csv)","title":"Output:"},{"location":"auto_ML_py/#ml_prehandle","text":"\u81ea\u52a8\u5efa\u6a21-\u7279\u5f81\u5de5\u7a0b-\u6570\u636e\u9884\u5904\u7406","title":"ML_PreHandle"},{"location":"auto_ML_py/#tag_6","text":"\u81ea\u52a8\u5efa\u6a21","title":"Tag:"},{"location":"auto_ML_py/#param_6","text":"cols (string) : \u5217\u540d\uff0c\u591a\u5217\u7528\u9017\u53f7\u5206\u5272 variableType (string) : \u5217\u7684\u7c7b\u578b handling (string) : \u7f3a\u5931\u503c\u5904\u7406\u7b56\u7565 ASREGULAR - \u4f5c\u4e3a\u5e38\u89c4\u503c IMPUTE - \u586b\u5145 DROPROWS - \u5220\u9664\u8be5\u884c impute (string) : \u7f3a\u5931\u503c\u586b\u5145\u7b56\u7565 MOSTFREQUENT-\u4f17\u6570, MEAN-\u5e73\u5747\u6570 MEDIAN-\u4e2d\u4f4d\u6570 CONSTANT-\u56fa\u5b9a\u503c constantValue (string) : \u7f3a\u5931\u503c\u586b\u5145\u56fa\u5b9a\u503c targetCol (string) : \u76ee\u6807\u5217","title":"Param:"},{"location":"auto_ML_py/#input_6","text":"originalData (csv)","title":"Input:"},{"location":"auto_ML_py/#output_6","text":"handleData (csv)","title":"Output:"},{"location":"auto_ML_py/#ml_regmodeleval","text":"\u81ea\u52a8\u5efa\u6a21 - \u56de\u5f52\u6a21\u578b\u8bc4\u4f30","title":"ML_RegModelEval"},{"location":"auto_ML_py/#tag_7","text":"\u81ea\u52a8\u5efa\u6a21","title":"Tag:"},{"location":"auto_ML_py/#param_7","text":"None","title":"Param:"},{"location":"auto_ML_py/#input_7","text":"model (model.pkl) X_test (csv) y_test (csv)","title":"Input:"},{"location":"auto_ML_py/#output_7","text":"modelScores (py3pkl)","title":"Output:"},{"location":"auto_ML_py/#ml_sampledata","text":"\u81ea\u52a8\u5efa\u6a21 - \u6570\u636e\u91c7\u6837","title":"ML_SampleData"},{"location":"auto_ML_py/#tag_8","text":"\u81ea\u52a8\u5efa\u6a21","title":"Tag:"},{"location":"auto_ML_py/#param_8","text":"method (string) : \u91c7\u6837\u65b9\u6cd5 recordsNum (int) : \u91c7\u6837\u884c\u6570 recordsRatio (double) : \u91c7\u6837\u6bd4\u4f8b column (string) : \u4fdd\u6301\u7c7b\u5e73\u8861\u91c7\u6837\u7684\u7279\u5f81\u5217 cols (string) : \u8981\u91c7\u6837\u7684\u5217\uff0c\u591a\u5217\u4f7f\u7528\u9017\u53f7\u5206\u5272","title":"Param:"},{"location":"auto_ML_py/#input_8","text":"handleData (csv)","title":"Input:"},{"location":"auto_ML_py/#output_8","text":"sampleData (csv)","title":"Output:"},{"location":"auto_ML_py/#ml_splitset","text":"\u81ea\u52a8\u5efa\u6a21-\u6570\u636e\u62c6\u5206","title":"Ml_SplitSet"},{"location":"auto_ML_py/#tag_9","text":"\u81ea\u52a8\u5efa\u6a21","title":"Tag:"},{"location":"auto_ML_py/#param_9","text":"targetCol (string) : \u76ee\u6807\u5217 split (string) : \u62c6\u5206\u7b56\u7565 kFoldCrossTest (string) : \u662f\u5426\u542f\u7528K-\u6298\u4ea4\u53c9 foldNum (int) : K-\u6298\uff0ckFoldCrossTest=True trainRatio (double) : \u8bad\u7ec3\u96c6\u7684\u6837\u672c\u6bd4\u4f8b\uff0ckFoldCrossTest=FALSE","title":"Param:"},{"location":"auto_ML_py/#input_9","text":"featureHandleData (csv)","title":"Input:"},{"location":"auto_ML_py/#output_9","text":"X_train (csv) y_train (csv) X_test (csv) y_test (csv)","title":"Output:"},{"location":"auto_ML_py/#tpotspy3","text":"\u57fa\u4e8ePython\u7684\u81ea\u52a8\u5f0f\u673a\u5668\u5b66\u4e60\u5de5\u5177\uff0c\u4f7f\u7528\u57fa\u56e0\u7b97\u6cd5\u4f18\u5316\u673a\u5668\u5b66\u4e60\u7ba1\u9053\u3002","title":"TPOTSPy3"},{"location":"auto_ML_py/#tag_10","text":"\u81ea\u52a8\u5efa\u6a21","title":"Tag:"},{"location":"auto_ML_py/#param_10","text":"split_radio (double) : \u8bad\u7ec3\u6570\u636e\u5206\u5272\u6bd4 generations (int) : \u5bf9\u8fd0\u884c\u7ba1\u9053\u4f18\u5316\u8fc7\u7a0b\u7684\u8fed\u4ee3\u6b21\u6570 population_size (int) : \u6bcf\u6b21\u8fed\u4ee3\u4e2a\u4f53\u4fdd\u7559\u6570\u76ee tpop_mode (string) : \u786e\u5b9e\u6a21\u578b\u662f\u76d1\u7763\u5206\u7c7b\u6216\u56de\u5f52\u95ee\u9898 cv (int) : \u5728\u8bc4\u4f30\u7ba1\u9053\u65f6\u4f7f\u7528\u7684\u4ea4\u53c9\u9a8c\u8bc1\u7b56\u7565 verbosity (int) : TPOT\u663e\u793a\u4fe1\u606f\u7b49\u7ea7 scoring (string) : \u6a21\u578b\u8bc4\u4f30\u9009\u62e9\u6307\u6807 n_jobs (int) : \u5728TPOT\u4f18\u5316\u8fc7\u7a0b\u4e2d\uff0c\u5e76\u884c\u7528\u4e8e\u8bc4\u4f30\u7ba1\u9053\u7684\u8fc7\u7a0b\u7684\u6570\u91cf","title":"Param:"},{"location":"auto_ML_py/#input_10","text":"in_1 (csv)","title":"Input:"},{"location":"auto_ML_py/#output_10","text":"out_1 (file)","title":"Output:"},{"location":"classifier_py/","text":"AdaboostClasSPy3 \u4e00\u79cd\u5bf9\u540c\u4e00\u4e2a\u8bad\u7ec3\u96c6\u8bad\u7ec3\u4e0d\u540c\u7684\u5206\u7c7b\u5668(\u5f31\u5206\u7c7b\u5668)\uff0c\u7136\u540e\u628a\u8fd9\u4e9b\u5f31\u5206\u7c7b\u5668\u96c6\u5408\u8d77\u6765\u6784\u6210\u4e00\u4e2a\u66f4\u5f3a\u7684\u6700\u7ec8\u5206\u7c7b\u5668(\u5f3a\u5206\u7c7b\u5668)\u7684\u8fed\u4ee3\u7b97\u6cd5\u3002\u5176\u7b97\u6cd5\u672c\u8eab\u662f\u901a\u8fc7\u6539\u53d8\u6570\u636e\u5206\u5e03\u6765\u5b9e\u73b0\u7684\uff0c\u5b83\u6839\u636e\u6bcf\u6b21\u8bad\u7ec3\u96c6\u4e4b\u4e2d\u6bcf\u4e2a\u6837\u672c\u7684\u5206\u7c7b\u662f\u5426\u6b63\u786e\uff0c\u4ee5\u53ca\u4e0a\u6b21\u7684\u603b\u4f53\u5206\u7c7b\u7684\u51c6\u786e\u7387\uff0c\u6765\u786e\u5b9a\u6bcf\u4e2a\u6837\u672c\u7684\u6743\u503c\u3002\u5c06\u4fee\u6539\u8fc7\u6743\u503c\u7684\u65b0\u6570\u636e\u96c6\u9001\u7ed9\u4e0b\u5c42\u5206\u7c7b\u5668\u8fdb\u884c\u8bad\u7ec3\uff0c\u6700\u540e\u5c06\u6bcf\u6b21\u8bad\u7ec3\u5f97\u5230\u7684\u5206\u7c7b\u5668\u6700\u540e\u878d\u5408\u8d77\u6765\uff0c\u4f5c\u4e3a\u6700\u540e\u7684\u51b3\u7b56\u5206\u7c7b\u5668\u3002\u4f7f\u7528adaboost\u5206\u7c7b\u5668\u53ef\u4ee5\u6392\u9664\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u8bad\u7ec3\u6570\u636e\u7279\u5f81\uff0c\u5e76\u653e\u5728\u5173\u952e\u7684\u8bad\u7ec3\u6570\u636e\u4e0a\u9762\u3002 Tag: \u5206\u7c7b\u6a21\u578b Param: n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf learning_rate (double) : \u6536\u655b\u901f\u5ea6 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) d_prob (csv) m_fitted_model (py3pkl) AssembleBaseLeanersSPy3 \u5c06\u591a\u4e2a\u6a21\u578b\u7ec4\u6210\u4e00\u4e2alist\u4ee5\u4fbf\u4f20\u5165Stacking\u6a21\u578b\u4e2d Tag: \u5206\u7c7b\u6a21\u578b Param: None Input: model1 (model.pkl) model2 (model.pkl) model3 (model.pkl) model4 (model.pkl) model5 (model.pkl) Output: m_base_learners (py3pkl) BaggingClasSPy3 bagging\u662f\u4e00\u79cd\u7528\u6765\u63d0\u9ad8\u5b66\u4e60\u7b97\u6cd5\u51c6\u786e\u5ea6\u7684\u65b9\u6cd5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u901a\u8fc7\u6784\u9020\u4e00\u4e2a\u9884\u6d4b\u51fd\u6570\u7cfb\u5217\uff0c\u7136\u540e\u4ee5\u4e00\u5b9a\u7684\u65b9\u5f0f\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u4e00\u4e2a\u9884\u6d4b\u51fd\u6570\u3002Bagging\u8981\u6c42\u201c\u4e0d\u7a33\u5b9a\u201d\uff08\u4e0d\u7a33\u5b9a\u662f\u6307\u6570\u636e\u96c6\u7684\u5c0f\u7684\u53d8\u52a8\u80fd\u591f\u4f7f\u5f97\u5206\u7c7b\u7ed3\u679c\u7684\u663e\u8457\u7684\u53d8\u52a8\uff09\u7684\u5206\u7c7b\u65b9\u6cd5\u3002\u6bd4\u5982\uff1a\u51b3\u7b56\u6811\uff0c\u795e\u7ecf\u7f51\u7edc\u7b97\u6cd5\u3002 Tag: \u5206\u7c7b\u6a21\u578b Param: n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf max_samples (double) : \u6700\u5927\u91c7\u6837\u6bd4\u7387 max_features (double) : \u6700\u5927\u7279\u5f81\u6bd4\u7387 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) d_prob (csv) m_fitted_model (py3pkl) DecisionTreeClasSPy3 \u51b3\u7b56\u6811(decision tree)\u662f\u4e00\u79cd\u57fa\u672c\u7684\u5206\u7c7b\u4e0e\u56de\u5f52\u65b9\u6cd5\u3002\u51b3\u7b56\u6811\u6a21\u578b\u5448\u6811\u5f62\u7ed3\u6784\uff0c\u5728\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u8868\u793a\u57fa\u4e8e\u7279\u5f81\u5bf9\u5b9e\u4f8b\u8fdb\u884c\u5206\u7c7b\u7684\u8fc7\u7a0b\u3002\u5b83\u53ef\u4ee5\u8ba4\u4e3a\u662fif-then\u89c4\u5219\u7684\u96c6\u5408\uff0c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5b9a\u4e49\u5728\u7279\u5f81\u7a7a\u95f4\u4e0e\u7c7b\u7a7a\u95f4\u4e0a\u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\u3002\u5176\u4e3b\u8981\u4f18\u70b9\u662f\u6a21\u578b\u5177\u6709\u53ef\u8bfb\u6027\uff0c\u5206\u7c7b\u901f\u5ea6\u5feb\u3002\u5b66\u4e60\u65f6\uff0c\u5229\u7528\u8bad\u7ec3\u6570\u636e\uff0c\u6839\u636e\u635f\u5931\u51fd\u6570\u6700\u5c0f\u5316\u7684\u539f\u5219\u5efa\u7acb\u51b3\u7b56\u6811\u6a21\u578b\u3002\u9884\u6d4b\u65f6\uff0c\u5bf9\u65b0\u7684\u6570\u636e\uff0c\u5229\u7528\u51b3\u7b56\u6811\u6a21\u578b\u8fdb\u884c\u5206\u7c7b\u3002 \u51b3\u7b56\u6811\u5b66\u4e60\u901a\u5e38\u5305\u62ec3\u4e2a\u6b65\u9aa4\uff1a\u7279\u5f81\u9009\u62e9\u3001\u51b3\u7b56\u6811\u7684\u751f\u6210\u548c\u51b3\u7b56\u6811\u7684\u4fee\u526a\u3002 Tag: \u5206\u7c7b\u6a21\u578b Param: min_impurity_split (double) : \u9884\u526a\u679d\u65f6\u8282\u70b9\u7684\u4e0d\u7eaf\u5ea6(gini\u6216\u8005entropy)\u4f4e\u4e8e\u6b64\u9608\u503c\u5c31\u4e0d\u518d\u5206\u88c2; \u6ce8\uff1a9999.0\u8868\u793a\u9ed8\u8ba4\u503cNone criterion (string) : \u8282\u70b9\u6700\u4f73\u5206\u88c2\u7684\u5224\u65ad\u6807\u51c6\uff0c\u53ef\u9009\u503c'gini'\u548c'entropy'\uff0c\u9ed8\u8ba4\u503c'gini' max_depth (int) : \u6811\u7684\u6700\u5927\u6df1\u5ea6\u3002\u9ed8\u8ba4\u503c\u4e0d\u9650\u5236\uff0c\u5f53\u4e0d\u8bbe\u7f6e\u7684\u65f6\u5019\uff0c\u6811\u4e0d\u80fd\u65e0\u9650\u751f\u957f\uff0c\u5b83\u4f1a\u7531\u5176\u4ed6\u53c2\u6570\u6765\u63a7\u5236\u5b83\u7684\u751f\u957f\uff1b9999.0\u8868\u793a\u9ed8\u8ba4\u503cNone min_samples_split (int) : \u8282\u70b9\u7ee7\u7eed\u5f80\u4e0b\u5206\u88c2\u7684\u6700\u5c0f\u6837\u672c\u6570\u8981\u6c42 min_samples_leaf (int) : \u53f6\u5b50\u8282\u70b9\u7684\u6700\u5c0f\u6837\u672c\u6570\u8981\u6c42 max_features (double) : \u8282\u70b9\u5206\u88c2\u65f6\u4f7f\u7528\u7684\u6700\u5927\u7279\u5f81\u6570\uff0c\u6570\u636e\u96c6\u6bd4\u8f83\u5927\u7684\u65f6\u5019\uff0c\u5bf9\u7279\u5f81\u8fdb\u884c\u62bd\u6837\uff0c\u63d0\u9ad8\u901f\u5ea6\uff1b\u6ce8\uff1a\u6ce8\uff1a9999.0\u8868\u793a\u9ed8\u8ba4\u503cNone Input: d_feature_test (csv) d_label_test (csv) Output: dtc_model (py3pkl) ExtratreesClasSPy3 \u8fd9\u4e2a\u7c7b\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5143\u4f30\u8ba1\u5668\uff0c\u8be5\u4f30\u8ba1\u5668\u9002\u5408\u4e8e\u6570\u636e\u96c6\u7684\u5404\u4e2a\u5b50\u6837\u672c\u4e0a\u7684\u591a\u4e2a\u968f\u673a\u51b3\u7b56\u6811\uff08\u53c8\u540dextra-trees\uff09\uff0c\u5e76\u4f7f\u7528\u5e73\u5747\u503c\u6765\u63d0\u9ad8\u9884\u6d4b\u51c6\u786e\u5ea6\u548c\u63a7\u5236\u8fc7\u5ea6\u62df\u5408\u3002 Tag: \u5206\u7c7b\u6a21\u578b Param: n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf learning_rate (double) : \u6536\u655b\u901f\u5ea6 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) d_prob (csv) m_fitted_model (py3pkl) GradientboostingClasSPy3 \u548cAdaboost\u4e0d\u540c\uff0cGradient Boosting \u5728\u8fed\u4ee3\u7684\u65f6\u5019\u9009\u62e9\u68af\u5ea6\u4e0b\u964d\u7684\u65b9\u5411\u6765\u4fdd\u8bc1\u6700\u540e\u7684\u7ed3\u679c\u6700\u597d\u3002 \u635f\u5931\u51fd\u6570\u7528\u6765\u63cf\u8ff0\u6a21\u578b\u7684\u201c\u9760\u8c31\u201d\u7a0b\u5ea6\uff0c\u5047\u8bbe\u6a21\u578b\u6ca1\u6709\u8fc7\u62df\u5408\uff0c\u635f\u5931\u51fd\u6570\u8d8a\u5927\uff0c\u6a21\u578b\u7684\u9519\u8bef\u7387\u8d8a\u9ad8 \u5982\u679c\u6211\u4eec\u7684\u6a21\u578b\u80fd\u591f\u8ba9\u635f\u5931\u51fd\u6570\u6301\u7eed\u7684\u4e0b\u964d\uff0c\u5219\u8bf4\u660e\u6211\u4eec\u7684\u6a21\u578b\u5728\u4e0d\u505c\u7684\u6539\u8fdb\uff0c\u800c\u6700\u597d\u7684\u65b9\u5f0f\u5c31\u662f\u8ba9\u635f\u5931\u51fd\u6570\u5728\u5176\u68af\u5ea6\u65b9\u5411\u4e0a\u4e0b\u964d\u3002 Tag: \u5206\u7c7b\u6a21\u578b Param: n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf loss (string) : \u635f\u5931\u51fd\u6570 learning_rate (double) : \u6536\u655b\u901f\u5ea6 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) d_prob (csv) m_fitted_model (py3pkl) LinearSVCSPy3 \u652f\u6301\u5411\u91cf\u673a\u7684\u4f18\u52bf\u5728\u4e8e: 1. \u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u975e\u5e38\u9ad8\u6548 2. \u5373\u4f7f\u5728\u6570\u636e\u7ef4\u5ea6\u6bd4\u6837\u672c\u6570\u91cf\u5927\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u6709\u6548 3. \u5728\u51b3\u7b56\u51fd\u6570\uff08\u79f0\u4e3a\u652f\u6301\u5411\u91cf\uff09\u4e2d\u4f7f\u7528\u8bad\u7ec3\u96c6\u7684\u5b50\u96c6,\u56e0\u6b64\u5b83\u4e5f\u662f\u9ad8\u6548\u5229\u7528\u5185\u5b58\u7684 4. \u901a\u7528\u6027: \u4e0d\u540c\u7684\u6838\u51fd\u6570\u4e0e\u7279\u5b9a\u7684\u51b3\u7b56\u51fd\u6570\u4e00\u4e00\u5bf9\u5e94 \u652f\u6301\u5411\u91cf\u673a\u7684\u7f3a\u70b9\u5305\u62ec: \u5982\u679c\u7279\u5f81\u6570\u91cf\u6bd4\u6837\u672c\u6570\u91cf\u5927\u5f97\u591a,\u5728\u9009\u62e9\u6838\u51fd\u6570\u65f6\u8981\u907f\u514d\u8fc7\u62df\u5408,\u800c\u4e14\u6b63\u5219\u5316\u9879\u662f\u975e\u5e38\u91cd\u8981\u7684 Tag: \u5206\u7c7b\u6a21\u578b Param: kernel (string) : \u6838\u51fd\u6570 C (double) : \u60e9\u7f5a\u56e0\u5b50 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) d_prob (csv) m_fitted_model (py3pkl) LogisticRegr_WOE_ClasSPy3 \u5bf9WOE\u540e\u7684\u6570\u636e\u653e\u5165\u903b\u8f91\u56de\u5f52\u6a21\u578b\u8fdb\u884c\u8bad\u7ec3\u548c\u7279\u5f81\u7b5b\u9009 Tag: \u5206\u7c7b\u6a21\u578b Param: method (string) : \u9009\u62e9\u7b5b\u9009\u53d8\u91cf\u7684\u65b9\u6cd5 features_to_keep (int) : Input: d_feature (csv) d_label (csv) Output: m_fitted_model (py3pkl) o_summary (txt) o_cols (py3pkl) o_feature_importances (pdf) LogisticRegrSPy3 logistic\u56de\u5f52\u662f\u4e00\u79cd\u5e7f\u4e49\u7ebf\u6027\u56de\u5f52\uff08generalized linear model\uff09\uff0c\u56e0\u6b64\u4e0e\u591a\u91cd\u7ebf\u6027\u56de\u5f52\u5206\u6790\u6709\u5f88\u591a\u76f8\u540c\u4e4b\u5904\u3002\u5b83\u4eec\u7684\u6a21\u578b\u5f62\u5f0f\u57fa\u672c\u4e0a\u76f8\u540c\uff0c\u90fd\u5177\u6709 w\u2018x+b\uff0c\u5176\u4e2dw\u548cb\u662f\u5f85\u6c42\u53c2\u6570\uff0c\u5176\u533a\u522b\u5728\u4e8e\u4ed6\u4eec\u7684\u56e0\u53d8\u91cf\u4e0d\u540c\uff0c\u591a\u91cd\u7ebf\u6027\u56de\u5f52\u76f4\u63a5\u5c06w\u2018x+b\u4f5c\u4e3a\u56e0\u53d8\u91cf\uff0c\u5373y =w\u2018x+b\uff0c\u800clogistic\u56de\u5f52\u5219\u901a\u8fc7\u51fd\u6570L\u5c06w\u2018x+b\u5bf9\u5e94\u4e00\u4e2a\u9690\u72b6\u6001p\uff0cp =L(w\u2018x+b),\u7136\u540e\u6839\u636ep \u4e0e1-p\u7684\u5927\u5c0f\u51b3\u5b9a\u56e0\u53d8\u91cf\u7684\u503c\u3002\u5982\u679cL\u662flogistic\u51fd\u6570\uff0c\u5c31\u662flogistic\u56de\u5f52\uff0c\u5982\u679cL\u662f\u591a\u9879\u5f0f\u51fd\u6570\u5c31\u662f\u591a\u9879\u5f0f\u56de\u5f52\u3002 Tag: \u5206\u7c7b\u6a21\u578b Param: penalty (string) : \u6b63\u5219\u5316\uff08\u6cdb\u5316\uff09\u65b9\u6cd5 C (double) : \u6b63\u5219\u5316\u5f3a\u5ea6 solver (string) : \u6700\u4f18\u5316\u65b9\u6cd5 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) d_prob (csv) m_fitted_model (py3pkl) RandomforestClasSPy3 \u968f\u673a\u68ee\u6797\u662f\u5229\u7528\u591a\u68f5\u6811\u5bf9\u6837\u672c\u8fdb\u884c\u8bad\u7ec3\u5e76\u9884\u6d4b\u7684\u4e00\u79cd\u5206\u7c7b\u5668\uff0c\u5b83\u662f\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u51b3\u7b56\u6811\u7684\u5206\u7c7b\u5668\uff0c \u5e76\u4e14\u5176\u8f93\u51fa\u7684\u7c7b\u522b\u662f\u7531\u4e2a\u522b\u6811\u8f93\u51fa\u7684\u7c7b\u522b\u7684\u4f17\u6570\u800c\u5b9a\u3002 Tag: \u5206\u7c7b\u6a21\u578b Param: n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf criterion (string) : \u7279\u5f81\u9009\u62e9\u65b9\u6cd5 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) d_prob (csv) m_fitted_model (model.pkl) StackingClasSPy3 \u5806\u6808\u6a21\u578b\uff1a\u5206\u4e3a\u4e24\u5c42\uff0c\u7b2c\u4e00\u5c42\u662f\u51e0\u4e2a\u6a21\u578b\u7684\u96c6\u5408\uff0c\u7b2c\u4e8c\u5c42\u662f\u5355\u72ec\u7684\u4e00\u4e2a\u6a21\u578b\uff0c\u7528\u7b2c\u4e00\u5c42\u51e0\u4e2a\u6a21\u578b\u7684\u8f93\u51fa\u4f5c\u4e3a\u7b2c\u4e8c\u5c42\u7684\u8f93\u5165\u6765\u8bad\u7ec3\u5143\u6a21\u578b\u3002 Tag: \u5206\u7c7b\u6a21\u578b Param: folds (int) : \u5728\u62df\u5408\u65f6\u4f7f\u7528\u7684\u6298\u6570 shuffle (string) : \u662f\u5426\u5728\u5206\u6298\u4e4b\u524d\u6d17\u724c\u6570\u636e random_state (int) : \u968f\u673a\u79cd\u5b50\u6570 verbose (int) : \u6253\u5370\u65e5\u5fd7\u4fe1\u606f\u8be6\u7ec6\u7a0b\u5ea6 n_jobs (int) : \u5728\u6a21\u578b\u8bad\u7ec3\u548c\u9884\u6d4b\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u6838\u6570 Input: d_feature (csv) d_label (csv) m_base_learners (py3pkl) m_meta_learner (py3pkl) Output: d_pred (csv) d_prob (csv) m_fitted_model (py3pkl) VotingClassifierSPy3 \u4e09\u79cd\u6a21\u578b\u7684\u6295\u7968\u6a21\u578b\uff0c\u53ef\u4ee5\u9009\u62e9\u8f6f\u6295\u7968\u6216\u8005\u786c\u6295\u7968 Tag: \u5206\u7c7b\u6a21\u578b Param: voting (string) : n_jobs (int) : Input: d_feature (csv) d_label (csv) model1 (model.pkl) model2 (model.pkl) model3 (model.pkl) Output: pred (csv) prob (csv) model (py3pkl) XGboostClasSPy3 \u5728\u8fc7\u6ee4\u6570\u636e\u6837\u4f8b\u5bfb\u627e\u5206\u5272\u503c\u65f6\uff0cXGBoost \u901a\u8fc7\u9884\u5206\u7c7b\u7b97\u6cd5\u548c\u76f4\u65b9\u56fe\u7b97\u6cd5\u6765\u786e\u5b9a\u6700\u4f18\u5206\u5272\u3002XGBoost\u672c\u8eab\u65e0\u6cd5\u5904\u7406\u5206\u7c7b\u53d8\u91cf\uff0c\u800c\u662f\u50cf\u968f\u673a\u68ee\u6797\u4e00\u6837\uff0c\u53ea\u63a5\u53d7\u6570\u503c\u6570\u636e\u3002\u56e0\u6b64\u5728\u5c06\u5206\u7c7b\u6570\u636e\u4f20\u5165 XGBoost \u4e4b\u524d\uff0c\u5fc5\u987b\u901a\u8fc7\u5404\u79cd\u7f16\u7801\u65b9\u5f0f\uff1a\u4f8b\u5982\u6807\u8bb0\u7f16\u7801\u3001\u5747\u503c\u7f16\u7801\u6216\u72ec\u70ed\u7f16\u7801\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406\u3002 Tag: \u5206\u7c7b\u6a21\u578b Param: learning_rate (double) : n_estimators (int) : max_depth (int) : min_child_weight (double) : gamma (double) : subsample (double) : colsample_bytree (double) : objective (string) : Input: d_feature (csv) d_label (csv) Output: d_pred (csv) d_prob (csv) m_fitted_model (py3pkl)","title":"\u5206\u7c7b\u6a21\u578b"},{"location":"classifier_py/#adaboostclasspy3","text":"\u4e00\u79cd\u5bf9\u540c\u4e00\u4e2a\u8bad\u7ec3\u96c6\u8bad\u7ec3\u4e0d\u540c\u7684\u5206\u7c7b\u5668(\u5f31\u5206\u7c7b\u5668)\uff0c\u7136\u540e\u628a\u8fd9\u4e9b\u5f31\u5206\u7c7b\u5668\u96c6\u5408\u8d77\u6765\u6784\u6210\u4e00\u4e2a\u66f4\u5f3a\u7684\u6700\u7ec8\u5206\u7c7b\u5668(\u5f3a\u5206\u7c7b\u5668)\u7684\u8fed\u4ee3\u7b97\u6cd5\u3002\u5176\u7b97\u6cd5\u672c\u8eab\u662f\u901a\u8fc7\u6539\u53d8\u6570\u636e\u5206\u5e03\u6765\u5b9e\u73b0\u7684\uff0c\u5b83\u6839\u636e\u6bcf\u6b21\u8bad\u7ec3\u96c6\u4e4b\u4e2d\u6bcf\u4e2a\u6837\u672c\u7684\u5206\u7c7b\u662f\u5426\u6b63\u786e\uff0c\u4ee5\u53ca\u4e0a\u6b21\u7684\u603b\u4f53\u5206\u7c7b\u7684\u51c6\u786e\u7387\uff0c\u6765\u786e\u5b9a\u6bcf\u4e2a\u6837\u672c\u7684\u6743\u503c\u3002\u5c06\u4fee\u6539\u8fc7\u6743\u503c\u7684\u65b0\u6570\u636e\u96c6\u9001\u7ed9\u4e0b\u5c42\u5206\u7c7b\u5668\u8fdb\u884c\u8bad\u7ec3\uff0c\u6700\u540e\u5c06\u6bcf\u6b21\u8bad\u7ec3\u5f97\u5230\u7684\u5206\u7c7b\u5668\u6700\u540e\u878d\u5408\u8d77\u6765\uff0c\u4f5c\u4e3a\u6700\u540e\u7684\u51b3\u7b56\u5206\u7c7b\u5668\u3002\u4f7f\u7528adaboost\u5206\u7c7b\u5668\u53ef\u4ee5\u6392\u9664\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u8bad\u7ec3\u6570\u636e\u7279\u5f81\uff0c\u5e76\u653e\u5728\u5173\u952e\u7684\u8bad\u7ec3\u6570\u636e\u4e0a\u9762\u3002","title":"AdaboostClasSPy3"},{"location":"classifier_py/#tag","text":"\u5206\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"classifier_py/#param","text":"n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf learning_rate (double) : \u6536\u655b\u901f\u5ea6","title":"Param:"},{"location":"classifier_py/#input","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"classifier_py/#output","text":"d_pred (csv) d_prob (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"classifier_py/#assemblebaseleanersspy3","text":"\u5c06\u591a\u4e2a\u6a21\u578b\u7ec4\u6210\u4e00\u4e2alist\u4ee5\u4fbf\u4f20\u5165Stacking\u6a21\u578b\u4e2d","title":"AssembleBaseLeanersSPy3"},{"location":"classifier_py/#tag_1","text":"\u5206\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"classifier_py/#param_1","text":"None","title":"Param:"},{"location":"classifier_py/#input_1","text":"model1 (model.pkl) model2 (model.pkl) model3 (model.pkl) model4 (model.pkl) model5 (model.pkl)","title":"Input:"},{"location":"classifier_py/#output_1","text":"m_base_learners (py3pkl)","title":"Output:"},{"location":"classifier_py/#baggingclasspy3","text":"bagging\u662f\u4e00\u79cd\u7528\u6765\u63d0\u9ad8\u5b66\u4e60\u7b97\u6cd5\u51c6\u786e\u5ea6\u7684\u65b9\u6cd5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u901a\u8fc7\u6784\u9020\u4e00\u4e2a\u9884\u6d4b\u51fd\u6570\u7cfb\u5217\uff0c\u7136\u540e\u4ee5\u4e00\u5b9a\u7684\u65b9\u5f0f\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u4e00\u4e2a\u9884\u6d4b\u51fd\u6570\u3002Bagging\u8981\u6c42\u201c\u4e0d\u7a33\u5b9a\u201d\uff08\u4e0d\u7a33\u5b9a\u662f\u6307\u6570\u636e\u96c6\u7684\u5c0f\u7684\u53d8\u52a8\u80fd\u591f\u4f7f\u5f97\u5206\u7c7b\u7ed3\u679c\u7684\u663e\u8457\u7684\u53d8\u52a8\uff09\u7684\u5206\u7c7b\u65b9\u6cd5\u3002\u6bd4\u5982\uff1a\u51b3\u7b56\u6811\uff0c\u795e\u7ecf\u7f51\u7edc\u7b97\u6cd5\u3002","title":"BaggingClasSPy3"},{"location":"classifier_py/#tag_2","text":"\u5206\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"classifier_py/#param_2","text":"n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf max_samples (double) : \u6700\u5927\u91c7\u6837\u6bd4\u7387 max_features (double) : \u6700\u5927\u7279\u5f81\u6bd4\u7387","title":"Param:"},{"location":"classifier_py/#input_2","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"classifier_py/#output_2","text":"d_pred (csv) d_prob (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"classifier_py/#decisiontreeclasspy3","text":"\u51b3\u7b56\u6811(decision tree)\u662f\u4e00\u79cd\u57fa\u672c\u7684\u5206\u7c7b\u4e0e\u56de\u5f52\u65b9\u6cd5\u3002\u51b3\u7b56\u6811\u6a21\u578b\u5448\u6811\u5f62\u7ed3\u6784\uff0c\u5728\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u8868\u793a\u57fa\u4e8e\u7279\u5f81\u5bf9\u5b9e\u4f8b\u8fdb\u884c\u5206\u7c7b\u7684\u8fc7\u7a0b\u3002\u5b83\u53ef\u4ee5\u8ba4\u4e3a\u662fif-then\u89c4\u5219\u7684\u96c6\u5408\uff0c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5b9a\u4e49\u5728\u7279\u5f81\u7a7a\u95f4\u4e0e\u7c7b\u7a7a\u95f4\u4e0a\u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\u3002\u5176\u4e3b\u8981\u4f18\u70b9\u662f\u6a21\u578b\u5177\u6709\u53ef\u8bfb\u6027\uff0c\u5206\u7c7b\u901f\u5ea6\u5feb\u3002\u5b66\u4e60\u65f6\uff0c\u5229\u7528\u8bad\u7ec3\u6570\u636e\uff0c\u6839\u636e\u635f\u5931\u51fd\u6570\u6700\u5c0f\u5316\u7684\u539f\u5219\u5efa\u7acb\u51b3\u7b56\u6811\u6a21\u578b\u3002\u9884\u6d4b\u65f6\uff0c\u5bf9\u65b0\u7684\u6570\u636e\uff0c\u5229\u7528\u51b3\u7b56\u6811\u6a21\u578b\u8fdb\u884c\u5206\u7c7b\u3002 \u51b3\u7b56\u6811\u5b66\u4e60\u901a\u5e38\u5305\u62ec3\u4e2a\u6b65\u9aa4\uff1a\u7279\u5f81\u9009\u62e9\u3001\u51b3\u7b56\u6811\u7684\u751f\u6210\u548c\u51b3\u7b56\u6811\u7684\u4fee\u526a\u3002","title":"DecisionTreeClasSPy3"},{"location":"classifier_py/#tag_3","text":"\u5206\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"classifier_py/#param_3","text":"min_impurity_split (double) : \u9884\u526a\u679d\u65f6\u8282\u70b9\u7684\u4e0d\u7eaf\u5ea6(gini\u6216\u8005entropy)\u4f4e\u4e8e\u6b64\u9608\u503c\u5c31\u4e0d\u518d\u5206\u88c2; \u6ce8\uff1a9999.0\u8868\u793a\u9ed8\u8ba4\u503cNone criterion (string) : \u8282\u70b9\u6700\u4f73\u5206\u88c2\u7684\u5224\u65ad\u6807\u51c6\uff0c\u53ef\u9009\u503c'gini'\u548c'entropy'\uff0c\u9ed8\u8ba4\u503c'gini' max_depth (int) : \u6811\u7684\u6700\u5927\u6df1\u5ea6\u3002\u9ed8\u8ba4\u503c\u4e0d\u9650\u5236\uff0c\u5f53\u4e0d\u8bbe\u7f6e\u7684\u65f6\u5019\uff0c\u6811\u4e0d\u80fd\u65e0\u9650\u751f\u957f\uff0c\u5b83\u4f1a\u7531\u5176\u4ed6\u53c2\u6570\u6765\u63a7\u5236\u5b83\u7684\u751f\u957f\uff1b9999.0\u8868\u793a\u9ed8\u8ba4\u503cNone min_samples_split (int) : \u8282\u70b9\u7ee7\u7eed\u5f80\u4e0b\u5206\u88c2\u7684\u6700\u5c0f\u6837\u672c\u6570\u8981\u6c42 min_samples_leaf (int) : \u53f6\u5b50\u8282\u70b9\u7684\u6700\u5c0f\u6837\u672c\u6570\u8981\u6c42 max_features (double) : \u8282\u70b9\u5206\u88c2\u65f6\u4f7f\u7528\u7684\u6700\u5927\u7279\u5f81\u6570\uff0c\u6570\u636e\u96c6\u6bd4\u8f83\u5927\u7684\u65f6\u5019\uff0c\u5bf9\u7279\u5f81\u8fdb\u884c\u62bd\u6837\uff0c\u63d0\u9ad8\u901f\u5ea6\uff1b\u6ce8\uff1a\u6ce8\uff1a9999.0\u8868\u793a\u9ed8\u8ba4\u503cNone","title":"Param:"},{"location":"classifier_py/#input_3","text":"d_feature_test (csv) d_label_test (csv)","title":"Input:"},{"location":"classifier_py/#output_3","text":"dtc_model (py3pkl)","title":"Output:"},{"location":"classifier_py/#extratreesclasspy3","text":"\u8fd9\u4e2a\u7c7b\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5143\u4f30\u8ba1\u5668\uff0c\u8be5\u4f30\u8ba1\u5668\u9002\u5408\u4e8e\u6570\u636e\u96c6\u7684\u5404\u4e2a\u5b50\u6837\u672c\u4e0a\u7684\u591a\u4e2a\u968f\u673a\u51b3\u7b56\u6811\uff08\u53c8\u540dextra-trees\uff09\uff0c\u5e76\u4f7f\u7528\u5e73\u5747\u503c\u6765\u63d0\u9ad8\u9884\u6d4b\u51c6\u786e\u5ea6\u548c\u63a7\u5236\u8fc7\u5ea6\u62df\u5408\u3002","title":"ExtratreesClasSPy3"},{"location":"classifier_py/#tag_4","text":"\u5206\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"classifier_py/#param_4","text":"n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf learning_rate (double) : \u6536\u655b\u901f\u5ea6","title":"Param:"},{"location":"classifier_py/#input_4","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"classifier_py/#output_4","text":"d_pred (csv) d_prob (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"classifier_py/#gradientboostingclasspy3","text":"\u548cAdaboost\u4e0d\u540c\uff0cGradient Boosting \u5728\u8fed\u4ee3\u7684\u65f6\u5019\u9009\u62e9\u68af\u5ea6\u4e0b\u964d\u7684\u65b9\u5411\u6765\u4fdd\u8bc1\u6700\u540e\u7684\u7ed3\u679c\u6700\u597d\u3002 \u635f\u5931\u51fd\u6570\u7528\u6765\u63cf\u8ff0\u6a21\u578b\u7684\u201c\u9760\u8c31\u201d\u7a0b\u5ea6\uff0c\u5047\u8bbe\u6a21\u578b\u6ca1\u6709\u8fc7\u62df\u5408\uff0c\u635f\u5931\u51fd\u6570\u8d8a\u5927\uff0c\u6a21\u578b\u7684\u9519\u8bef\u7387\u8d8a\u9ad8 \u5982\u679c\u6211\u4eec\u7684\u6a21\u578b\u80fd\u591f\u8ba9\u635f\u5931\u51fd\u6570\u6301\u7eed\u7684\u4e0b\u964d\uff0c\u5219\u8bf4\u660e\u6211\u4eec\u7684\u6a21\u578b\u5728\u4e0d\u505c\u7684\u6539\u8fdb\uff0c\u800c\u6700\u597d\u7684\u65b9\u5f0f\u5c31\u662f\u8ba9\u635f\u5931\u51fd\u6570\u5728\u5176\u68af\u5ea6\u65b9\u5411\u4e0a\u4e0b\u964d\u3002","title":"GradientboostingClasSPy3"},{"location":"classifier_py/#tag_5","text":"\u5206\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"classifier_py/#param_5","text":"n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf loss (string) : \u635f\u5931\u51fd\u6570 learning_rate (double) : \u6536\u655b\u901f\u5ea6","title":"Param:"},{"location":"classifier_py/#input_5","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"classifier_py/#output_5","text":"d_pred (csv) d_prob (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"classifier_py/#linearsvcspy3","text":"\u652f\u6301\u5411\u91cf\u673a\u7684\u4f18\u52bf\u5728\u4e8e: 1. \u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u975e\u5e38\u9ad8\u6548 2. \u5373\u4f7f\u5728\u6570\u636e\u7ef4\u5ea6\u6bd4\u6837\u672c\u6570\u91cf\u5927\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u6709\u6548 3. \u5728\u51b3\u7b56\u51fd\u6570\uff08\u79f0\u4e3a\u652f\u6301\u5411\u91cf\uff09\u4e2d\u4f7f\u7528\u8bad\u7ec3\u96c6\u7684\u5b50\u96c6,\u56e0\u6b64\u5b83\u4e5f\u662f\u9ad8\u6548\u5229\u7528\u5185\u5b58\u7684 4. \u901a\u7528\u6027: \u4e0d\u540c\u7684\u6838\u51fd\u6570\u4e0e\u7279\u5b9a\u7684\u51b3\u7b56\u51fd\u6570\u4e00\u4e00\u5bf9\u5e94 \u652f\u6301\u5411\u91cf\u673a\u7684\u7f3a\u70b9\u5305\u62ec: \u5982\u679c\u7279\u5f81\u6570\u91cf\u6bd4\u6837\u672c\u6570\u91cf\u5927\u5f97\u591a,\u5728\u9009\u62e9\u6838\u51fd\u6570\u65f6\u8981\u907f\u514d\u8fc7\u62df\u5408,\u800c\u4e14\u6b63\u5219\u5316\u9879\u662f\u975e\u5e38\u91cd\u8981\u7684","title":"LinearSVCSPy3"},{"location":"classifier_py/#tag_6","text":"\u5206\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"classifier_py/#param_6","text":"kernel (string) : \u6838\u51fd\u6570 C (double) : \u60e9\u7f5a\u56e0\u5b50","title":"Param:"},{"location":"classifier_py/#input_6","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"classifier_py/#output_6","text":"d_pred (csv) d_prob (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"classifier_py/#logisticregr_woe_classpy3","text":"\u5bf9WOE\u540e\u7684\u6570\u636e\u653e\u5165\u903b\u8f91\u56de\u5f52\u6a21\u578b\u8fdb\u884c\u8bad\u7ec3\u548c\u7279\u5f81\u7b5b\u9009","title":"LogisticRegr_WOE_ClasSPy3"},{"location":"classifier_py/#tag_7","text":"\u5206\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"classifier_py/#param_7","text":"method (string) : \u9009\u62e9\u7b5b\u9009\u53d8\u91cf\u7684\u65b9\u6cd5 features_to_keep (int) :","title":"Param:"},{"location":"classifier_py/#input_7","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"classifier_py/#output_7","text":"m_fitted_model (py3pkl) o_summary (txt) o_cols (py3pkl) o_feature_importances (pdf)","title":"Output:"},{"location":"classifier_py/#logisticregrspy3","text":"logistic\u56de\u5f52\u662f\u4e00\u79cd\u5e7f\u4e49\u7ebf\u6027\u56de\u5f52\uff08generalized linear model\uff09\uff0c\u56e0\u6b64\u4e0e\u591a\u91cd\u7ebf\u6027\u56de\u5f52\u5206\u6790\u6709\u5f88\u591a\u76f8\u540c\u4e4b\u5904\u3002\u5b83\u4eec\u7684\u6a21\u578b\u5f62\u5f0f\u57fa\u672c\u4e0a\u76f8\u540c\uff0c\u90fd\u5177\u6709 w\u2018x+b\uff0c\u5176\u4e2dw\u548cb\u662f\u5f85\u6c42\u53c2\u6570\uff0c\u5176\u533a\u522b\u5728\u4e8e\u4ed6\u4eec\u7684\u56e0\u53d8\u91cf\u4e0d\u540c\uff0c\u591a\u91cd\u7ebf\u6027\u56de\u5f52\u76f4\u63a5\u5c06w\u2018x+b\u4f5c\u4e3a\u56e0\u53d8\u91cf\uff0c\u5373y =w\u2018x+b\uff0c\u800clogistic\u56de\u5f52\u5219\u901a\u8fc7\u51fd\u6570L\u5c06w\u2018x+b\u5bf9\u5e94\u4e00\u4e2a\u9690\u72b6\u6001p\uff0cp =L(w\u2018x+b),\u7136\u540e\u6839\u636ep \u4e0e1-p\u7684\u5927\u5c0f\u51b3\u5b9a\u56e0\u53d8\u91cf\u7684\u503c\u3002\u5982\u679cL\u662flogistic\u51fd\u6570\uff0c\u5c31\u662flogistic\u56de\u5f52\uff0c\u5982\u679cL\u662f\u591a\u9879\u5f0f\u51fd\u6570\u5c31\u662f\u591a\u9879\u5f0f\u56de\u5f52\u3002","title":"LogisticRegrSPy3"},{"location":"classifier_py/#tag_8","text":"\u5206\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"classifier_py/#param_8","text":"penalty (string) : \u6b63\u5219\u5316\uff08\u6cdb\u5316\uff09\u65b9\u6cd5 C (double) : \u6b63\u5219\u5316\u5f3a\u5ea6 solver (string) : \u6700\u4f18\u5316\u65b9\u6cd5","title":"Param:"},{"location":"classifier_py/#input_8","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"classifier_py/#output_8","text":"d_pred (csv) d_prob (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"classifier_py/#randomforestclasspy3","text":"\u968f\u673a\u68ee\u6797\u662f\u5229\u7528\u591a\u68f5\u6811\u5bf9\u6837\u672c\u8fdb\u884c\u8bad\u7ec3\u5e76\u9884\u6d4b\u7684\u4e00\u79cd\u5206\u7c7b\u5668\uff0c\u5b83\u662f\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u51b3\u7b56\u6811\u7684\u5206\u7c7b\u5668\uff0c \u5e76\u4e14\u5176\u8f93\u51fa\u7684\u7c7b\u522b\u662f\u7531\u4e2a\u522b\u6811\u8f93\u51fa\u7684\u7c7b\u522b\u7684\u4f17\u6570\u800c\u5b9a\u3002","title":"RandomforestClasSPy3"},{"location":"classifier_py/#tag_9","text":"\u5206\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"classifier_py/#param_9","text":"n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf criterion (string) : \u7279\u5f81\u9009\u62e9\u65b9\u6cd5","title":"Param:"},{"location":"classifier_py/#input_9","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"classifier_py/#output_9","text":"d_pred (csv) d_prob (csv) m_fitted_model (model.pkl)","title":"Output:"},{"location":"classifier_py/#stackingclasspy3","text":"\u5806\u6808\u6a21\u578b\uff1a\u5206\u4e3a\u4e24\u5c42\uff0c\u7b2c\u4e00\u5c42\u662f\u51e0\u4e2a\u6a21\u578b\u7684\u96c6\u5408\uff0c\u7b2c\u4e8c\u5c42\u662f\u5355\u72ec\u7684\u4e00\u4e2a\u6a21\u578b\uff0c\u7528\u7b2c\u4e00\u5c42\u51e0\u4e2a\u6a21\u578b\u7684\u8f93\u51fa\u4f5c\u4e3a\u7b2c\u4e8c\u5c42\u7684\u8f93\u5165\u6765\u8bad\u7ec3\u5143\u6a21\u578b\u3002","title":"StackingClasSPy3"},{"location":"classifier_py/#tag_10","text":"\u5206\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"classifier_py/#param_10","text":"folds (int) : \u5728\u62df\u5408\u65f6\u4f7f\u7528\u7684\u6298\u6570 shuffle (string) : \u662f\u5426\u5728\u5206\u6298\u4e4b\u524d\u6d17\u724c\u6570\u636e random_state (int) : \u968f\u673a\u79cd\u5b50\u6570 verbose (int) : \u6253\u5370\u65e5\u5fd7\u4fe1\u606f\u8be6\u7ec6\u7a0b\u5ea6 n_jobs (int) : \u5728\u6a21\u578b\u8bad\u7ec3\u548c\u9884\u6d4b\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u6838\u6570","title":"Param:"},{"location":"classifier_py/#input_10","text":"d_feature (csv) d_label (csv) m_base_learners (py3pkl) m_meta_learner (py3pkl)","title":"Input:"},{"location":"classifier_py/#output_10","text":"d_pred (csv) d_prob (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"classifier_py/#votingclassifierspy3","text":"\u4e09\u79cd\u6a21\u578b\u7684\u6295\u7968\u6a21\u578b\uff0c\u53ef\u4ee5\u9009\u62e9\u8f6f\u6295\u7968\u6216\u8005\u786c\u6295\u7968","title":"VotingClassifierSPy3"},{"location":"classifier_py/#tag_11","text":"\u5206\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"classifier_py/#param_11","text":"voting (string) : n_jobs (int) :","title":"Param:"},{"location":"classifier_py/#input_11","text":"d_feature (csv) d_label (csv) model1 (model.pkl) model2 (model.pkl) model3 (model.pkl)","title":"Input:"},{"location":"classifier_py/#output_11","text":"pred (csv) prob (csv) model (py3pkl)","title":"Output:"},{"location":"classifier_py/#xgboostclasspy3","text":"\u5728\u8fc7\u6ee4\u6570\u636e\u6837\u4f8b\u5bfb\u627e\u5206\u5272\u503c\u65f6\uff0cXGBoost \u901a\u8fc7\u9884\u5206\u7c7b\u7b97\u6cd5\u548c\u76f4\u65b9\u56fe\u7b97\u6cd5\u6765\u786e\u5b9a\u6700\u4f18\u5206\u5272\u3002XGBoost\u672c\u8eab\u65e0\u6cd5\u5904\u7406\u5206\u7c7b\u53d8\u91cf\uff0c\u800c\u662f\u50cf\u968f\u673a\u68ee\u6797\u4e00\u6837\uff0c\u53ea\u63a5\u53d7\u6570\u503c\u6570\u636e\u3002\u56e0\u6b64\u5728\u5c06\u5206\u7c7b\u6570\u636e\u4f20\u5165 XGBoost \u4e4b\u524d\uff0c\u5fc5\u987b\u901a\u8fc7\u5404\u79cd\u7f16\u7801\u65b9\u5f0f\uff1a\u4f8b\u5982\u6807\u8bb0\u7f16\u7801\u3001\u5747\u503c\u7f16\u7801\u6216\u72ec\u70ed\u7f16\u7801\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406\u3002","title":"XGboostClasSPy3"},{"location":"classifier_py/#tag_12","text":"\u5206\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"classifier_py/#param_12","text":"learning_rate (double) : n_estimators (int) : max_depth (int) : min_child_weight (double) : gamma (double) : subsample (double) : colsample_bytree (double) : objective (string) :","title":"Param:"},{"location":"classifier_py/#input_12","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"classifier_py/#output_12","text":"d_pred (csv) d_prob (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"classifier_pyspark/","text":"DecisionTreeClassifierDPy3 \u5206\u5e03\u5f0f\u51b3\u7b56\u6811\u5206\u7c7b\u6a21\u578b Tag: \u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f Param: maxDepth (int) : \u6700\u5927\u6df1\u5ea6 maxBins (int) : \u6bcf\u4e2a\u7279\u5f81\u5206\u88c2\u65f6\u6700\u5927\u5212\u5206\u6570\u91cf minInstancesPerNode (int) : \u843d\u5728\u67d0\u4e00\u51b3\u7b56\u70b9\u4e0a\u7684\u6700\u5c11\u5b9e\u4f8b\u6570\u76ee minInfoGain (double) : \u6700\u5c0f\u4fe1\u606f\u589e\u76ca impurity (string) : \u4e0d\u7eaf\u5ea6 seed (double) : \u968f\u673a\u79cd\u5b50 Input: in1 (any) Output: out1 (any) GBTClassifierDPy2 GBT\u5206\u7c7bpipeline: StringIndexer, VectorIndexer, LogisticRegression, IndexToString Tag: \u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f Param: testRate (double) : \u6d4b\u8bd5\u96c6\u3001\u8bad\u7ec3\u96c6\u5207\u5206\u6bd4\u4f8b label (string) : \u6570\u636e\u96c6\u6807\u7b7e maxDepth (int) : \u6700\u5927\u6df1\u5ea6 minInstancesPerNode (int) : \u843d\u5728\u67d0\u4e2a\u4e00\u51b3\u7b56\u70b9\u4e0a\u7684\u5b9e\u4f8b\u7684\u6700\u5c11\u4e2a\u6570 minInfoGain (double) : \u6700\u5c0f\u4fe1\u606f\u589e\u76ca seed (double) : \u968f\u673a\u79cd\u5b50 lossType (string) : \u635f\u5931\u51fd\u6570 stepSize (double) : \u5b66\u4e60\u6b65\u957f maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 Input: in1 (any) Output: out1 (any) LinearSVCDPy3 \u5206\u5e03\u5f0f\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a Tag: \u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f Param: maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 regParam (double) : \u6b63\u5219\u5316\u53c2\u6570 tol (double) : \u6536\u655b\u5224\u636e fitIntercept (string) : \u662f\u5426\u62df\u5408\u622a\u8ddd\u9879 standardization (string) : \u662f\u5426\u6807\u51c6\u5316 threshold (double) : \u4e8c\u5206\u7c7b\u7684\u9608\u503c Input: None Output: None LogisticRegressionDPy2_copy \u903b\u8f91\u56de\u5f52pipeline: StringIndexer, VectorIndexer, LogisticRegression, IndexToString Tag: \u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f Param: label (string) : maxIter (int) : regParam (double) : elasticNetParam (double) : threshold (double) : Input: in1 (any) Output: out1 (any) LogisticRegressionDPy2 \u903b\u8f91\u56de\u5f52pipeline: StringIndexer, VectorIndexer, LogisticRegression, IndexToString Tag: \u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f Param: label (string) : maxIter (int) : regParam (double) : elasticNetParam (double) : threshold (double) : Input: in1 (any) Output: out1 (any) LogisticRegressionDPy3 \u903b\u8f91\u56de\u5f52pipeline: StringIndexer, VectorIndexer, LogisticRegression, IndexToString Tag: \u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f Param: label (string) : maxIter (int) : regParam (double) : elasticNetParam (double) : threshold (double) : testRate (double) : Input: in1 (any) Output: out1 (model.pmml) MultilayerPerceptronClassifierDPy2 \u591a\u5c42\u611f\u77e5\u673a\u5206\u5e03\u5f0f\u5206\u7c7b\u5668 Tag: \u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f Param: label (string) : \u6570\u636e\u96c6\u6807\u7b7e maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 tol (double) : \u6536\u655b\u5224\u636e blockSize (int) : \u6570\u636e\u5165\u6808\u7684\u5757\u5927\u5c0f stepSize (double) : \u5b66\u4e60\u6b65\u957f solver (string) : \u4f18\u5316\u7b97\u6cd5 Input: in1 (any) Output: out1 (any) NaiveBayesDPy2 \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u5e03\u5f0f\u5206\u7c7b\u5668 Tag: \u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f Param: testRate (double) : \u8bad\u7ec3\u96c6\u3001\u6d4b\u8bd5\u96c6\u5207\u5206\u6bd4\u4f8b label (string) : \u6570\u636e\u96c6\u6807\u7b7e smoothing (double) : \u5e73\u6ed1\u5904\u7406 modelType (string) : \u6a21\u578b\u65b9\u6cd5Multinomial\u3001Bernoulli thresholds (string) : \u9884\u6d4b\u5206\u7c7b\u65f6\u7684\u51b3\u7b56\u9608\u503c weightCol (string) : \u8bbe\u5b9a\u5bf9\u5e94\u5217\u6240\u6709\u5b9e\u4f8b\u6743\u91cd\u4e3a1.0 Input: in1 (any) Output: out1 (model.pmml) RandomForestClassifierDPy2 \u968f\u673a\u68ee\u6797\u5206\u5e03\u5f0f\u5206\u7c7b\u5668 Tag: \u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f Param: testRate (double) : \u8bad\u7ec3\u96c6\u3001\u6d4b\u8bd5\u96c6\u5207\u5206\u6bd4\u4f8b label (string) : \u6570\u636e\u96c6\u6807\u7b7e maxDepth (int) : \u6700\u5927\u6df1\u5ea6 minInstancesPerNode (int) : \u843d\u5728\u67d0\u4e00\u51b3\u7b56\u70b9\u4e0a\u7684\u5b9e\u4f8b\u7684\u6700\u5c11\u4e2a\u6570 minInfoGain (double) : \u6700\u5c0f\u4fe1\u606f\u589e\u76ca numTrees (int) : \u6811\u7684\u4e2a\u6570 seed (double) : \u968f\u673a\u79cd\u5b50 maxBins (int) : \u6bcf\u4e2a\u7279\u5f81\u5206\u88c2\u65f6\u6700\u5927\u5212\u5206\u6570\u91cf impurity (string) : \u4e0d\u7eaf\u5ea6 Input: in1 (any) Output: out1 (any)","title":"\u5206\u7c7b\u6a21\u578b"},{"location":"classifier_pyspark/#decisiontreeclassifierdpy3","text":"\u5206\u5e03\u5f0f\u51b3\u7b56\u6811\u5206\u7c7b\u6a21\u578b","title":"DecisionTreeClassifierDPy3"},{"location":"classifier_pyspark/#tag","text":"\u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"classifier_pyspark/#param","text":"maxDepth (int) : \u6700\u5927\u6df1\u5ea6 maxBins (int) : \u6bcf\u4e2a\u7279\u5f81\u5206\u88c2\u65f6\u6700\u5927\u5212\u5206\u6570\u91cf minInstancesPerNode (int) : \u843d\u5728\u67d0\u4e00\u51b3\u7b56\u70b9\u4e0a\u7684\u6700\u5c11\u5b9e\u4f8b\u6570\u76ee minInfoGain (double) : \u6700\u5c0f\u4fe1\u606f\u589e\u76ca impurity (string) : \u4e0d\u7eaf\u5ea6 seed (double) : \u968f\u673a\u79cd\u5b50","title":"Param:"},{"location":"classifier_pyspark/#input","text":"in1 (any)","title":"Input:"},{"location":"classifier_pyspark/#output","text":"out1 (any)","title":"Output:"},{"location":"classifier_pyspark/#gbtclassifierdpy2","text":"GBT\u5206\u7c7bpipeline: StringIndexer, VectorIndexer, LogisticRegression, IndexToString","title":"GBTClassifierDPy2"},{"location":"classifier_pyspark/#tag_1","text":"\u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"classifier_pyspark/#param_1","text":"testRate (double) : \u6d4b\u8bd5\u96c6\u3001\u8bad\u7ec3\u96c6\u5207\u5206\u6bd4\u4f8b label (string) : \u6570\u636e\u96c6\u6807\u7b7e maxDepth (int) : \u6700\u5927\u6df1\u5ea6 minInstancesPerNode (int) : \u843d\u5728\u67d0\u4e2a\u4e00\u51b3\u7b56\u70b9\u4e0a\u7684\u5b9e\u4f8b\u7684\u6700\u5c11\u4e2a\u6570 minInfoGain (double) : \u6700\u5c0f\u4fe1\u606f\u589e\u76ca seed (double) : \u968f\u673a\u79cd\u5b50 lossType (string) : \u635f\u5931\u51fd\u6570 stepSize (double) : \u5b66\u4e60\u6b65\u957f maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570","title":"Param:"},{"location":"classifier_pyspark/#input_1","text":"in1 (any)","title":"Input:"},{"location":"classifier_pyspark/#output_1","text":"out1 (any)","title":"Output:"},{"location":"classifier_pyspark/#linearsvcdpy3","text":"\u5206\u5e03\u5f0f\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a","title":"LinearSVCDPy3"},{"location":"classifier_pyspark/#tag_2","text":"\u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"classifier_pyspark/#param_2","text":"maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 regParam (double) : \u6b63\u5219\u5316\u53c2\u6570 tol (double) : \u6536\u655b\u5224\u636e fitIntercept (string) : \u662f\u5426\u62df\u5408\u622a\u8ddd\u9879 standardization (string) : \u662f\u5426\u6807\u51c6\u5316 threshold (double) : \u4e8c\u5206\u7c7b\u7684\u9608\u503c","title":"Param:"},{"location":"classifier_pyspark/#input_2","text":"None","title":"Input:"},{"location":"classifier_pyspark/#output_2","text":"None","title":"Output:"},{"location":"classifier_pyspark/#logisticregressiondpy2_copy","text":"\u903b\u8f91\u56de\u5f52pipeline: StringIndexer, VectorIndexer, LogisticRegression, IndexToString","title":"LogisticRegressionDPy2_copy"},{"location":"classifier_pyspark/#tag_3","text":"\u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"classifier_pyspark/#param_3","text":"label (string) : maxIter (int) : regParam (double) : elasticNetParam (double) : threshold (double) :","title":"Param:"},{"location":"classifier_pyspark/#input_3","text":"in1 (any)","title":"Input:"},{"location":"classifier_pyspark/#output_3","text":"out1 (any)","title":"Output:"},{"location":"classifier_pyspark/#logisticregressiondpy2","text":"\u903b\u8f91\u56de\u5f52pipeline: StringIndexer, VectorIndexer, LogisticRegression, IndexToString","title":"LogisticRegressionDPy2"},{"location":"classifier_pyspark/#tag_4","text":"\u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"classifier_pyspark/#param_4","text":"label (string) : maxIter (int) : regParam (double) : elasticNetParam (double) : threshold (double) :","title":"Param:"},{"location":"classifier_pyspark/#input_4","text":"in1 (any)","title":"Input:"},{"location":"classifier_pyspark/#output_4","text":"out1 (any)","title":"Output:"},{"location":"classifier_pyspark/#logisticregressiondpy3","text":"\u903b\u8f91\u56de\u5f52pipeline: StringIndexer, VectorIndexer, LogisticRegression, IndexToString","title":"LogisticRegressionDPy3"},{"location":"classifier_pyspark/#tag_5","text":"\u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"classifier_pyspark/#param_5","text":"label (string) : maxIter (int) : regParam (double) : elasticNetParam (double) : threshold (double) : testRate (double) :","title":"Param:"},{"location":"classifier_pyspark/#input_5","text":"in1 (any)","title":"Input:"},{"location":"classifier_pyspark/#output_5","text":"out1 (model.pmml)","title":"Output:"},{"location":"classifier_pyspark/#multilayerperceptronclassifierdpy2","text":"\u591a\u5c42\u611f\u77e5\u673a\u5206\u5e03\u5f0f\u5206\u7c7b\u5668","title":"MultilayerPerceptronClassifierDPy2"},{"location":"classifier_pyspark/#tag_6","text":"\u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"classifier_pyspark/#param_6","text":"label (string) : \u6570\u636e\u96c6\u6807\u7b7e maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 tol (double) : \u6536\u655b\u5224\u636e blockSize (int) : \u6570\u636e\u5165\u6808\u7684\u5757\u5927\u5c0f stepSize (double) : \u5b66\u4e60\u6b65\u957f solver (string) : \u4f18\u5316\u7b97\u6cd5","title":"Param:"},{"location":"classifier_pyspark/#input_6","text":"in1 (any)","title":"Input:"},{"location":"classifier_pyspark/#output_6","text":"out1 (any)","title":"Output:"},{"location":"classifier_pyspark/#naivebayesdpy2","text":"\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u5e03\u5f0f\u5206\u7c7b\u5668","title":"NaiveBayesDPy2"},{"location":"classifier_pyspark/#tag_7","text":"\u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"classifier_pyspark/#param_7","text":"testRate (double) : \u8bad\u7ec3\u96c6\u3001\u6d4b\u8bd5\u96c6\u5207\u5206\u6bd4\u4f8b label (string) : \u6570\u636e\u96c6\u6807\u7b7e smoothing (double) : \u5e73\u6ed1\u5904\u7406 modelType (string) : \u6a21\u578b\u65b9\u6cd5Multinomial\u3001Bernoulli thresholds (string) : \u9884\u6d4b\u5206\u7c7b\u65f6\u7684\u51b3\u7b56\u9608\u503c weightCol (string) : \u8bbe\u5b9a\u5bf9\u5e94\u5217\u6240\u6709\u5b9e\u4f8b\u6743\u91cd\u4e3a1.0","title":"Param:"},{"location":"classifier_pyspark/#input_7","text":"in1 (any)","title":"Input:"},{"location":"classifier_pyspark/#output_7","text":"out1 (model.pmml)","title":"Output:"},{"location":"classifier_pyspark/#randomforestclassifierdpy2","text":"\u968f\u673a\u68ee\u6797\u5206\u5e03\u5f0f\u5206\u7c7b\u5668","title":"RandomForestClassifierDPy2"},{"location":"classifier_pyspark/#tag_8","text":"\u5206\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"classifier_pyspark/#param_8","text":"testRate (double) : \u8bad\u7ec3\u96c6\u3001\u6d4b\u8bd5\u96c6\u5207\u5206\u6bd4\u4f8b label (string) : \u6570\u636e\u96c6\u6807\u7b7e maxDepth (int) : \u6700\u5927\u6df1\u5ea6 minInstancesPerNode (int) : \u843d\u5728\u67d0\u4e00\u51b3\u7b56\u70b9\u4e0a\u7684\u5b9e\u4f8b\u7684\u6700\u5c11\u4e2a\u6570 minInfoGain (double) : \u6700\u5c0f\u4fe1\u606f\u589e\u76ca numTrees (int) : \u6811\u7684\u4e2a\u6570 seed (double) : \u968f\u673a\u79cd\u5b50 maxBins (int) : \u6bcf\u4e2a\u7279\u5f81\u5206\u88c2\u65f6\u6700\u5927\u5212\u5206\u6570\u91cf impurity (string) : \u4e0d\u7eaf\u5ea6","title":"Param:"},{"location":"classifier_pyspark/#input_8","text":"in1 (any)","title":"Input:"},{"location":"classifier_pyspark/#output_8","text":"out1 (any)","title":"Output:"},{"location":"cluster_py/","text":"AffinityPropagationClusSPy3 Affinity Propagation Clustering\uff08\u5438\u5f15\u529b\u4f20\u64ad\u805a\u7c7b\uff0c\u7b80\u79f0AP\u7b97\u6cd5\uff09\u662f2007\u5728Science\u4e0a\u53d1\u8868\u7684\u4e00\u7bc7single-exemplar-based\u7684\u805a\u7c7b\u65b9\u9762\u7684\u6587\u7ae0\u3002\u7279\u522b\u9002\u5408\u9ad8\u7ef4\u3001\u591a\u7c7b\u6570\u636e\u5feb\u901f\u805a\u7c7b\uff0c\u76f8\u6bd4\u4f20\u7edf\u7684\u805a\u7c7b\u7b97\u6cd5\uff0c\u4ece\u805a\u7c7b\u6027\u80fd\u548c\u6548\u7387\u65b9\u9762\u90fd\u6709\u5927\u5e45\u5ea6\u7684\u63d0\u5347,AP\u7b97\u6cd5\u4e0d\u9700\u8981\u4e8b\u5148\u7ed9\u5b9a\u805a\u7c7b\u4e2d\u5fc3\u4e2a\u6570\uff0c\u7b97\u6cd5\u5728\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u5c55\u793a\u6570\u636e\u96c6\u7684\u5185\u90e8\u7ed3\u6784\uff0c\u5e76\u786e\u5b9a\u5408\u9002\u7684\u805a\u7c7b\u4e2a\u6570\uff0c\u540c\u65f6\u6548\u7387\u975e\u5e38\u9ad8 Tag: \u805a\u7c7b\u6a21\u578b Param: damping (double) : \u963b\u5c3c\u7cfb\u6570\uff08\u4ecb\u4e8e0.5\u548c1\u4e4b\u95f4\uff09\u662f\u76f8\u5bf9\u4e8e\u8f93\u5165\u503c\uff08\u52a0\u67431-\u963b\u5c3c\uff09\u7684\u7ef4\u6301\u7a0b\u5ea6\uff0c\u907f\u514d\u6570\u503c\u632f\u8361 max_iter (int) : \u8fed\u4ee3\u6b21\u6570 verbose (int) : \u65e5\u5fd7 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) o_cluster_centers_indices (csv) m_fitted_model (py3pkl) AgglomerativeClusSPy3 \u662f\u4e00\u79cd\u81ea\u5e95\u800c\u4e0a\u7684\u5c42\u6b21\u805a\u7c7b\u65b9\u6cd5\uff0c\u5b83\u80fd\u591f\u6839\u636e\u6307\u5b9a\u7684\u76f8\u4f3c\u5ea6\u6216\u8ddd\u79bb\u5b9a\u4e49\u8ba1\u7b97\u51fa\u7c7b\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u5b83\u4ece\u6bcf\u4e00\u4e2a\u70b9\u5f00\u59cb\u4f5c\u4e3a\u4e00\u4e2a\u7c7b\uff0c\u7136\u540e\u8fed\u4ee3\u7684\u878d\u5408\u6700\u8fd1\u7684\u7c7b\u3002\u80fd\u521b\u5efa\u4e00\u4e2a\u6811\u5f62\u5c42\u6b21\u7ed3\u6784\u7684\u805a\u7c7b\u6a21\u578b\u3002 Tag: \u805a\u7c7b\u6a21\u578b Param: n_clusters (int) : \u6307\u5b9a\u805a\u7c7b\u6570 affinity (string) : \u8ddd\u79bb\u7b97\u6cd5 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) m_fitted_model (py3pkl) BirchClusSPy3 \u662f\u4e00\u4e2a\u7efc\u5408\u7684\u5c42\u6b21\u805a\u7c7b\u7b97\u6cd5\u3002\u5b83\u7528\u5230\u4e86\u805a\u7c7b\u7279\u5f81(Clustering Feature, CF)\u548c\u805a\u7c7b\u7279\u5f81\u6811(CF Tree)\u4e24\u4e2a\u6982\u5ff5\uff0c\u7528\u4e8e\u6982\u62ec\u805a\u7c7b\u63cf\u8ff0,\u8be5\u7b97\u6cd5\u80fd\u591f\u7528\u4e00 \u904d\u626b\u63cf\u6709\u6548\u5730\u8fdb\u884c\u805a\u7c7b\uff0c\u5e76\u80fd\u591f\u6709\u6548\u5730\u5904\u7406\u79bb\u7fa4\u70b9\u3002Birch \u7b97\u6cd5\u662f\u57fa\u4e8e\u8ddd\u79bb\u7684\u5c42\u6b21\u805a\u7c7b\uff0c\u7efc \u5408\u4e86\u5c42\u6b21\u51dd\u805a\u548c\u8fed\u4ee3\u7684\u91cd\u5b9a\u4f4d\u65b9\u6cd5 Tag: \u805a\u7c7b\u6a21\u578b Param: n_clusters (int) : \u6307\u5b9a\u805a\u7c7b\u6570 threshold (double) : \u53f6\u8282\u70b9\u6bcf\u4e2aCF\u7684\u6700\u5927\u6837\u672c\u534a\u5f84\u9608\u503c\uff0c\u5b83\u51b3\u5b9a\u4e86\u6bcf\u4e2aCF\u91cc\u6240\u6709\u6837\u672c\u5f62\u6210\u7684\u8d85\u7403\u4f53\u7684\u534a\u5f84\u9608\u503c\u3002 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) m_fitted_model (py3pkl) DBSCANClusSPy3 \u662f\u4e00\u4e2a\u6bd4\u8f83\u6709\u4ee3\u8868\u6027\u7684\u57fa\u4e8e\u5bc6\u5ea6\u7684\u805a\u7c7b\u7b97\u6cd5\u3002\u4e0e\u5212\u5206\u548c\u5c42\u6b21\u805a\u7c7b\u65b9\u6cd5\u4e0d\u540c\uff0c\u5b83\u5c06\u7c07\u5b9a\u4e49\u4e3a\u5bc6\u5ea6\u76f8\u8fde\u7684\u70b9\u7684\u6700\u5927\u96c6\u5408\uff0c\u80fd\u591f\u628a\u5177\u6709\u8db3\u591f\u9ad8\u5bc6\u5ea6\u7684\u533a\u57df\u5212\u5206\u4e3a\u7c07\uff0c\u5e76\u53ef\u5728\u566a\u58f0\u7684\u7a7a\u95f4\u6570\u636e\u5e93\u4e2d\u53d1\u73b0\u4efb\u610f\u5f62\u72b6\u7684\u805a\u7c7b\u3002 Tag: \u805a\u7c7b\u6a21\u578b Param: eps (double) : \u90bb\u57df\u4e2d\u6837\u672c\u6700\u5927\u8ddd\u79bb min_samples (int) : \u90bb\u57df\u5185\u6700\u5c0f\u6837\u672c\u6570 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) m_fitted_model (py3pkl) KMeans2ClusSPy3 K-means\u7b97\u6cd5\u662f\u786c\u805a\u7c7b\u7b97\u6cd5\uff0c\u662f\u5178\u578b\u7684\u57fa\u4e8e\u539f\u578b\u7684\u76ee\u6807\u51fd\u6570\u805a\u7c7b\u65b9\u6cd5\u7684\u4ee3\u8868\uff0c\u5b83\u662f\u6570\u636e\u70b9\u5230\u539f\u578b\u7684\u67d0\u79cd\u8ddd\u79bb\u4f5c\u4e3a\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\uff0c\u5229\u7528\u51fd\u6570\u6c42\u6781\u503c\u7684\u65b9\u6cd5\u5f97\u5230\u8fed\u4ee3\u8fd0\u7b97\u7684\u8c03\u6574\u89c4\u5219\u3002K-means\u7b97\u6cd5\u4ee5\u6b27\u5f0f\u8ddd\u79bb\u4f5c\u4e3a\u76f8\u4f3c\u5ea6\u6d4b\u5ea6\uff0c\u5b83\u662f\u6c42\u5bf9\u5e94\u67d0\u4e00\u521d\u59cb\u805a\u7c7b\u4e2d\u5fc3\u5411\u91cfV\u6700\u4f18\u5206\u7c7b\uff0c\u4f7f\u5f97\u8bc4\u4ef7\u6307\u6807J\u6700\u5c0f\u3002\u7b97\u6cd5\u91c7\u7528\u8bef\u5dee\u5e73\u65b9\u548c\u51c6\u5219\u51fd\u6570\u4f5c\u4e3a\u805a\u7c7b\u51c6\u5219\u51fd\u6570\u3002 Tag: \u805a\u7c7b\u6a21\u578b Param: k (int) : max_iter (int) : Input: d_data (csv) Output: o_centers (py3pkl) o_labels (py3pkl) o_metrics (py3pkl) o_distortions (py3pkl) KMeansClusSPy3 K-means\u7b97\u6cd5\u662f\u786c\u805a\u7c7b\u7b97\u6cd5\uff0c\u662f\u5178\u578b\u7684\u57fa\u4e8e\u539f\u578b\u7684\u76ee\u6807\u51fd\u6570\u805a\u7c7b\u65b9\u6cd5\u7684\u4ee3\u8868\uff0c\u5b83\u662f\u6570\u636e\u70b9\u5230\u539f\u578b\u7684\u67d0\u79cd\u8ddd\u79bb\u4f5c\u4e3a\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\uff0c\u5229\u7528\u51fd\u6570\u6c42\u6781\u503c\u7684\u65b9\u6cd5\u5f97\u5230\u8fed\u4ee3\u8fd0\u7b97\u7684\u8c03\u6574\u89c4\u5219\u3002K-means\u7b97\u6cd5\u4ee5\u6b27\u5f0f\u8ddd\u79bb\u4f5c\u4e3a\u76f8\u4f3c\u5ea6\u6d4b\u5ea6\uff0c\u5b83\u662f\u6c42\u5bf9\u5e94\u67d0\u4e00\u521d\u59cb\u805a\u7c7b\u4e2d\u5fc3\u5411\u91cfV\u6700\u4f18\u5206\u7c7b\uff0c\u4f7f\u5f97\u8bc4\u4ef7\u6307\u6807J\u6700\u5c0f\u3002\u7b97\u6cd5\u91c7\u7528\u8bef\u5dee\u5e73\u65b9\u548c\u51c6\u5219\u51fd\u6570\u4f5c\u4e3a\u805a\u7c7b\u51c6\u5219\u51fd\u6570\u3002 Tag: \u805a\u7c7b\u6a21\u578b Param: n_clusters (int) : \u6307\u5b9a\u805a\u7c7b\u4e2a\u6570 max_iter (int) : \u8fed\u4ee3\u6b21\u6570 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) m_fitted_model (py3pkl) KMeansPy3 KMeans\u805a\u7c7b Tag: \u805a\u7c7b\u6a21\u578b Param: header (string) : n_cluster (int) : \u805a\u7c7b\u6570 Input: in1 (csv) Output: out1 (csv) KMeansVisuSPy3 \u805a\u7c7b\u4e2d\u5fc3\u96f7\u8fbe\u56fe\u548c\u8098\u90e8\u56fe Tag: \u805a\u7c7b\u6a21\u578b \u53ef\u89c6\u5316 Param: None Input: o_centers (py3pkl) o_distortions (py3pkl) Output: distortion_plot (html) centers_plot (html) SpectralClusSPy3 \u8c31\u805a\u7c7b\u662f\u4ece\u56fe\u8bba\u4e2d\u6f14\u5316\u51fa\u6765\u7684\u7b97\u6cd5\uff0c\u540e\u6765\u5728\u805a\u7c7b\u4e2d\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u5e94\u7528\u3002\u5b83\u7684\u4e3b\u8981\u601d\u60f3\u662f\u628a\u6240\u6709\u7684\u6570\u636e\u770b\u505a\u7a7a\u95f4\u4e2d\u7684\u70b9\uff0c\u8fd9\u4e9b\u70b9\u4e4b\u95f4\u53ef\u4ee5\u7528\u8fb9\u8fde\u63a5\u8d77\u6765\u3002\u8ddd\u79bb\u8f83\u8fdc\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u91cd\u503c\u8f83\u4f4e\uff0c\u800c\u8ddd\u79bb\u8f83\u8fd1\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u91cd\u503c\u8f83\u9ad8\uff0c\u901a\u8fc7\u5bf9\u6240\u6709\u6570\u636e\u70b9\u7ec4\u6210\u7684\u56fe\u8fdb\u884c\u5207\u56fe\uff0c\u8ba9\u5207\u56fe\u540e\u4e0d\u540c\u7684\u5b50\u56fe\u95f4\u8fb9\u6743\u91cd\u548c\u5c3d\u53ef\u80fd\u7684\u4f4e\uff0c\u800c\u5b50\u56fe\u5185\u7684\u8fb9\u6743\u91cd\u548c\u5c3d\u53ef\u80fd\u7684\u9ad8\uff0c\u4ece\u800c\u8fbe\u5230\u805a\u7c7b\u7684\u76ee\u7684\u3002 Tag: \u805a\u7c7b\u6a21\u578b Param: n_clusters (int) : \u6307\u5b9a\u805a\u7c7b\u4e2a\u6570 affinity (string) : \u6307\u5b9a\u6838\u51fd\u6570 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) m_fitted_model (py3pkl)","title":"\u805a\u7c7b\u6a21\u578b"},{"location":"cluster_py/#affinitypropagationclusspy3","text":"Affinity Propagation Clustering\uff08\u5438\u5f15\u529b\u4f20\u64ad\u805a\u7c7b\uff0c\u7b80\u79f0AP\u7b97\u6cd5\uff09\u662f2007\u5728Science\u4e0a\u53d1\u8868\u7684\u4e00\u7bc7single-exemplar-based\u7684\u805a\u7c7b\u65b9\u9762\u7684\u6587\u7ae0\u3002\u7279\u522b\u9002\u5408\u9ad8\u7ef4\u3001\u591a\u7c7b\u6570\u636e\u5feb\u901f\u805a\u7c7b\uff0c\u76f8\u6bd4\u4f20\u7edf\u7684\u805a\u7c7b\u7b97\u6cd5\uff0c\u4ece\u805a\u7c7b\u6027\u80fd\u548c\u6548\u7387\u65b9\u9762\u90fd\u6709\u5927\u5e45\u5ea6\u7684\u63d0\u5347,AP\u7b97\u6cd5\u4e0d\u9700\u8981\u4e8b\u5148\u7ed9\u5b9a\u805a\u7c7b\u4e2d\u5fc3\u4e2a\u6570\uff0c\u7b97\u6cd5\u5728\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u5c55\u793a\u6570\u636e\u96c6\u7684\u5185\u90e8\u7ed3\u6784\uff0c\u5e76\u786e\u5b9a\u5408\u9002\u7684\u805a\u7c7b\u4e2a\u6570\uff0c\u540c\u65f6\u6548\u7387\u975e\u5e38\u9ad8","title":"AffinityPropagationClusSPy3"},{"location":"cluster_py/#tag","text":"\u805a\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"cluster_py/#param","text":"damping (double) : \u963b\u5c3c\u7cfb\u6570\uff08\u4ecb\u4e8e0.5\u548c1\u4e4b\u95f4\uff09\u662f\u76f8\u5bf9\u4e8e\u8f93\u5165\u503c\uff08\u52a0\u67431-\u963b\u5c3c\uff09\u7684\u7ef4\u6301\u7a0b\u5ea6\uff0c\u907f\u514d\u6570\u503c\u632f\u8361 max_iter (int) : \u8fed\u4ee3\u6b21\u6570 verbose (int) : \u65e5\u5fd7","title":"Param:"},{"location":"cluster_py/#input","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"cluster_py/#output","text":"d_pred (csv) o_cluster_centers_indices (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"cluster_py/#agglomerativeclusspy3","text":"\u662f\u4e00\u79cd\u81ea\u5e95\u800c\u4e0a\u7684\u5c42\u6b21\u805a\u7c7b\u65b9\u6cd5\uff0c\u5b83\u80fd\u591f\u6839\u636e\u6307\u5b9a\u7684\u76f8\u4f3c\u5ea6\u6216\u8ddd\u79bb\u5b9a\u4e49\u8ba1\u7b97\u51fa\u7c7b\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u5b83\u4ece\u6bcf\u4e00\u4e2a\u70b9\u5f00\u59cb\u4f5c\u4e3a\u4e00\u4e2a\u7c7b\uff0c\u7136\u540e\u8fed\u4ee3\u7684\u878d\u5408\u6700\u8fd1\u7684\u7c7b\u3002\u80fd\u521b\u5efa\u4e00\u4e2a\u6811\u5f62\u5c42\u6b21\u7ed3\u6784\u7684\u805a\u7c7b\u6a21\u578b\u3002","title":"AgglomerativeClusSPy3"},{"location":"cluster_py/#tag_1","text":"\u805a\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"cluster_py/#param_1","text":"n_clusters (int) : \u6307\u5b9a\u805a\u7c7b\u6570 affinity (string) : \u8ddd\u79bb\u7b97\u6cd5","title":"Param:"},{"location":"cluster_py/#input_1","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"cluster_py/#output_1","text":"d_pred (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"cluster_py/#birchclusspy3","text":"\u662f\u4e00\u4e2a\u7efc\u5408\u7684\u5c42\u6b21\u805a\u7c7b\u7b97\u6cd5\u3002\u5b83\u7528\u5230\u4e86\u805a\u7c7b\u7279\u5f81(Clustering Feature, CF)\u548c\u805a\u7c7b\u7279\u5f81\u6811(CF Tree)\u4e24\u4e2a\u6982\u5ff5\uff0c\u7528\u4e8e\u6982\u62ec\u805a\u7c7b\u63cf\u8ff0,\u8be5\u7b97\u6cd5\u80fd\u591f\u7528\u4e00 \u904d\u626b\u63cf\u6709\u6548\u5730\u8fdb\u884c\u805a\u7c7b\uff0c\u5e76\u80fd\u591f\u6709\u6548\u5730\u5904\u7406\u79bb\u7fa4\u70b9\u3002Birch \u7b97\u6cd5\u662f\u57fa\u4e8e\u8ddd\u79bb\u7684\u5c42\u6b21\u805a\u7c7b\uff0c\u7efc \u5408\u4e86\u5c42\u6b21\u51dd\u805a\u548c\u8fed\u4ee3\u7684\u91cd\u5b9a\u4f4d\u65b9\u6cd5","title":"BirchClusSPy3"},{"location":"cluster_py/#tag_2","text":"\u805a\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"cluster_py/#param_2","text":"n_clusters (int) : \u6307\u5b9a\u805a\u7c7b\u6570 threshold (double) : \u53f6\u8282\u70b9\u6bcf\u4e2aCF\u7684\u6700\u5927\u6837\u672c\u534a\u5f84\u9608\u503c\uff0c\u5b83\u51b3\u5b9a\u4e86\u6bcf\u4e2aCF\u91cc\u6240\u6709\u6837\u672c\u5f62\u6210\u7684\u8d85\u7403\u4f53\u7684\u534a\u5f84\u9608\u503c\u3002","title":"Param:"},{"location":"cluster_py/#input_2","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"cluster_py/#output_2","text":"d_pred (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"cluster_py/#dbscanclusspy3","text":"\u662f\u4e00\u4e2a\u6bd4\u8f83\u6709\u4ee3\u8868\u6027\u7684\u57fa\u4e8e\u5bc6\u5ea6\u7684\u805a\u7c7b\u7b97\u6cd5\u3002\u4e0e\u5212\u5206\u548c\u5c42\u6b21\u805a\u7c7b\u65b9\u6cd5\u4e0d\u540c\uff0c\u5b83\u5c06\u7c07\u5b9a\u4e49\u4e3a\u5bc6\u5ea6\u76f8\u8fde\u7684\u70b9\u7684\u6700\u5927\u96c6\u5408\uff0c\u80fd\u591f\u628a\u5177\u6709\u8db3\u591f\u9ad8\u5bc6\u5ea6\u7684\u533a\u57df\u5212\u5206\u4e3a\u7c07\uff0c\u5e76\u53ef\u5728\u566a\u58f0\u7684\u7a7a\u95f4\u6570\u636e\u5e93\u4e2d\u53d1\u73b0\u4efb\u610f\u5f62\u72b6\u7684\u805a\u7c7b\u3002","title":"DBSCANClusSPy3"},{"location":"cluster_py/#tag_3","text":"\u805a\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"cluster_py/#param_3","text":"eps (double) : \u90bb\u57df\u4e2d\u6837\u672c\u6700\u5927\u8ddd\u79bb min_samples (int) : \u90bb\u57df\u5185\u6700\u5c0f\u6837\u672c\u6570","title":"Param:"},{"location":"cluster_py/#input_3","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"cluster_py/#output_3","text":"d_pred (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"cluster_py/#kmeans2clusspy3","text":"K-means\u7b97\u6cd5\u662f\u786c\u805a\u7c7b\u7b97\u6cd5\uff0c\u662f\u5178\u578b\u7684\u57fa\u4e8e\u539f\u578b\u7684\u76ee\u6807\u51fd\u6570\u805a\u7c7b\u65b9\u6cd5\u7684\u4ee3\u8868\uff0c\u5b83\u662f\u6570\u636e\u70b9\u5230\u539f\u578b\u7684\u67d0\u79cd\u8ddd\u79bb\u4f5c\u4e3a\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\uff0c\u5229\u7528\u51fd\u6570\u6c42\u6781\u503c\u7684\u65b9\u6cd5\u5f97\u5230\u8fed\u4ee3\u8fd0\u7b97\u7684\u8c03\u6574\u89c4\u5219\u3002K-means\u7b97\u6cd5\u4ee5\u6b27\u5f0f\u8ddd\u79bb\u4f5c\u4e3a\u76f8\u4f3c\u5ea6\u6d4b\u5ea6\uff0c\u5b83\u662f\u6c42\u5bf9\u5e94\u67d0\u4e00\u521d\u59cb\u805a\u7c7b\u4e2d\u5fc3\u5411\u91cfV\u6700\u4f18\u5206\u7c7b\uff0c\u4f7f\u5f97\u8bc4\u4ef7\u6307\u6807J\u6700\u5c0f\u3002\u7b97\u6cd5\u91c7\u7528\u8bef\u5dee\u5e73\u65b9\u548c\u51c6\u5219\u51fd\u6570\u4f5c\u4e3a\u805a\u7c7b\u51c6\u5219\u51fd\u6570\u3002","title":"KMeans2ClusSPy3"},{"location":"cluster_py/#tag_4","text":"\u805a\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"cluster_py/#param_4","text":"k (int) : max_iter (int) :","title":"Param:"},{"location":"cluster_py/#input_4","text":"d_data (csv)","title":"Input:"},{"location":"cluster_py/#output_4","text":"o_centers (py3pkl) o_labels (py3pkl) o_metrics (py3pkl) o_distortions (py3pkl)","title":"Output:"},{"location":"cluster_py/#kmeansclusspy3","text":"K-means\u7b97\u6cd5\u662f\u786c\u805a\u7c7b\u7b97\u6cd5\uff0c\u662f\u5178\u578b\u7684\u57fa\u4e8e\u539f\u578b\u7684\u76ee\u6807\u51fd\u6570\u805a\u7c7b\u65b9\u6cd5\u7684\u4ee3\u8868\uff0c\u5b83\u662f\u6570\u636e\u70b9\u5230\u539f\u578b\u7684\u67d0\u79cd\u8ddd\u79bb\u4f5c\u4e3a\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\uff0c\u5229\u7528\u51fd\u6570\u6c42\u6781\u503c\u7684\u65b9\u6cd5\u5f97\u5230\u8fed\u4ee3\u8fd0\u7b97\u7684\u8c03\u6574\u89c4\u5219\u3002K-means\u7b97\u6cd5\u4ee5\u6b27\u5f0f\u8ddd\u79bb\u4f5c\u4e3a\u76f8\u4f3c\u5ea6\u6d4b\u5ea6\uff0c\u5b83\u662f\u6c42\u5bf9\u5e94\u67d0\u4e00\u521d\u59cb\u805a\u7c7b\u4e2d\u5fc3\u5411\u91cfV\u6700\u4f18\u5206\u7c7b\uff0c\u4f7f\u5f97\u8bc4\u4ef7\u6307\u6807J\u6700\u5c0f\u3002\u7b97\u6cd5\u91c7\u7528\u8bef\u5dee\u5e73\u65b9\u548c\u51c6\u5219\u51fd\u6570\u4f5c\u4e3a\u805a\u7c7b\u51c6\u5219\u51fd\u6570\u3002","title":"KMeansClusSPy3"},{"location":"cluster_py/#tag_5","text":"\u805a\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"cluster_py/#param_5","text":"n_clusters (int) : \u6307\u5b9a\u805a\u7c7b\u4e2a\u6570 max_iter (int) : \u8fed\u4ee3\u6b21\u6570","title":"Param:"},{"location":"cluster_py/#input_5","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"cluster_py/#output_5","text":"d_pred (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"cluster_py/#kmeanspy3","text":"KMeans\u805a\u7c7b","title":"KMeansPy3"},{"location":"cluster_py/#tag_6","text":"\u805a\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"cluster_py/#param_6","text":"header (string) : n_cluster (int) : \u805a\u7c7b\u6570","title":"Param:"},{"location":"cluster_py/#input_6","text":"in1 (csv)","title":"Input:"},{"location":"cluster_py/#output_6","text":"out1 (csv)","title":"Output:"},{"location":"cluster_py/#kmeansvisuspy3","text":"\u805a\u7c7b\u4e2d\u5fc3\u96f7\u8fbe\u56fe\u548c\u8098\u90e8\u56fe","title":"KMeansVisuSPy3"},{"location":"cluster_py/#tag_7","text":"\u805a\u7c7b\u6a21\u578b \u53ef\u89c6\u5316","title":"Tag:"},{"location":"cluster_py/#param_7","text":"None","title":"Param:"},{"location":"cluster_py/#input_7","text":"o_centers (py3pkl) o_distortions (py3pkl)","title":"Input:"},{"location":"cluster_py/#output_7","text":"distortion_plot (html) centers_plot (html)","title":"Output:"},{"location":"cluster_py/#spectralclusspy3","text":"\u8c31\u805a\u7c7b\u662f\u4ece\u56fe\u8bba\u4e2d\u6f14\u5316\u51fa\u6765\u7684\u7b97\u6cd5\uff0c\u540e\u6765\u5728\u805a\u7c7b\u4e2d\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u5e94\u7528\u3002\u5b83\u7684\u4e3b\u8981\u601d\u60f3\u662f\u628a\u6240\u6709\u7684\u6570\u636e\u770b\u505a\u7a7a\u95f4\u4e2d\u7684\u70b9\uff0c\u8fd9\u4e9b\u70b9\u4e4b\u95f4\u53ef\u4ee5\u7528\u8fb9\u8fde\u63a5\u8d77\u6765\u3002\u8ddd\u79bb\u8f83\u8fdc\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u91cd\u503c\u8f83\u4f4e\uff0c\u800c\u8ddd\u79bb\u8f83\u8fd1\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u91cd\u503c\u8f83\u9ad8\uff0c\u901a\u8fc7\u5bf9\u6240\u6709\u6570\u636e\u70b9\u7ec4\u6210\u7684\u56fe\u8fdb\u884c\u5207\u56fe\uff0c\u8ba9\u5207\u56fe\u540e\u4e0d\u540c\u7684\u5b50\u56fe\u95f4\u8fb9\u6743\u91cd\u548c\u5c3d\u53ef\u80fd\u7684\u4f4e\uff0c\u800c\u5b50\u56fe\u5185\u7684\u8fb9\u6743\u91cd\u548c\u5c3d\u53ef\u80fd\u7684\u9ad8\uff0c\u4ece\u800c\u8fbe\u5230\u805a\u7c7b\u7684\u76ee\u7684\u3002","title":"SpectralClusSPy3"},{"location":"cluster_py/#tag_8","text":"\u805a\u7c7b\u6a21\u578b","title":"Tag:"},{"location":"cluster_py/#param_8","text":"n_clusters (int) : \u6307\u5b9a\u805a\u7c7b\u4e2a\u6570 affinity (string) : \u6307\u5b9a\u6838\u51fd\u6570","title":"Param:"},{"location":"cluster_py/#input_8","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"cluster_py/#output_8","text":"d_pred (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"cluster_pyspark/","text":"BisectingKMeansDPy3 BisectingKMeans\u805a\u7c7b Tag: \u805a\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f Param: featuresCol (string) : \u8fdb\u884c\u805a\u7c7b\u7684\u7279\u5f81\u5b57\u6bb5\u540d predictionCol (string) : \u9884\u6d4b\u7ed3\u679c\u7684\u5b57\u6bb5\u540d k (int) : \u8bbe\u7f6e\u4f60\u60f3\u805a\u6210\u7684\u7c7b\u6570 maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 seed (string) : \u79cd\u5b50 minDivisibleClusterSize (double) : \u805a\u7c7b\u7684\u7c7b\u522b\u6700\u5c11\u5143\u7d20\u4e2a\u6570 Input: in1 (any) Output: out1 (any) GaussianMixtureDPy3_copy GaussianMixture\u805a\u7c7b Tag: \u805a\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f Param: featuresCol (string) : \u8fdb\u884c\u805a\u7c7b\u7684\u7279\u5f81\u5b57\u6bb5\u540d predictionCol (string) : \u9884\u6d4b\u7ed3\u679c\u7684\u5b57\u6bb5\u540d k (int) : \u8bbe\u7f6e\u4f60\u60f3\u805a\u6210\u7684\u7c7b\u6570 tol (double) : maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 seed (int) : \u79cd\u5b50 probabilityCol (string) : \u8f93\u51fa\u9884\u6d4b\u6982\u7387\u5b57\u6bb5 Input: in1 (any) Output: out1 (any) KMeansDPy3 kmeans\u805a\u7c7b Tag: \u805a\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f Param: featuresCol (string) : \u8fdb\u884c\u805a\u7c7b\u7684\u7279\u5f81\u5b57\u6bb5\u540d predictionCol (string) : \u9884\u6d4b\u7ed3\u679c\u7684\u5b57\u6bb5\u540d k (int) : \u8bbe\u7f6e\u4f60\u60f3\u805a\u6210\u7684\u7c7b\u6570 initMode (string) : \u8bbe\u7f6ekmeans\u6a21\u578b\u7c7b\u578b initSteps (int) : tol (double) : maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 seed (int) : \u79cd\u5b50 Input: in1 (any) Output: out1 (any) LDADPy3_copy LDA\u805a\u7c7b Tag: \u805a\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f Param: featuresCol (string) : \u8fdb\u884c\u805a\u7c7b\u7684\u7279\u5f81\u5b57\u6bb5\u540d k (int) : \u8bbe\u7f6e\u4f60\u60f3\u805a\u6210\u7684\u7c7b\u6570 maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 seed (int) : \u79cd\u5b50 checkpointInterval (int) : optimizer (string) : learningOffset (double) : learningDecay (double) : subsamplingRate (double) : optimizeDocConcentration (string) : docConcentration (string) : \u6309\u9017\u53f7\u5206\u9694 topicConcentration (int) : topicDistributionCol (string) : \u6307\u6807\u805a\u7c7b\u8bdd\u9898\u7684\u8f93\u51fa\u5b57\u6bb5 keepLastCheckpoint (string) : Input: input_path (any) Output: output_path (model.pmml)","title":"\u805a\u7c7b\u6a21\u578b"},{"location":"cluster_pyspark/#bisectingkmeansdpy3","text":"BisectingKMeans\u805a\u7c7b","title":"BisectingKMeansDPy3"},{"location":"cluster_pyspark/#tag","text":"\u805a\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"cluster_pyspark/#param","text":"featuresCol (string) : \u8fdb\u884c\u805a\u7c7b\u7684\u7279\u5f81\u5b57\u6bb5\u540d predictionCol (string) : \u9884\u6d4b\u7ed3\u679c\u7684\u5b57\u6bb5\u540d k (int) : \u8bbe\u7f6e\u4f60\u60f3\u805a\u6210\u7684\u7c7b\u6570 maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 seed (string) : \u79cd\u5b50 minDivisibleClusterSize (double) : \u805a\u7c7b\u7684\u7c7b\u522b\u6700\u5c11\u5143\u7d20\u4e2a\u6570","title":"Param:"},{"location":"cluster_pyspark/#input","text":"in1 (any)","title":"Input:"},{"location":"cluster_pyspark/#output","text":"out1 (any)","title":"Output:"},{"location":"cluster_pyspark/#gaussianmixturedpy3_copy","text":"GaussianMixture\u805a\u7c7b","title":"GaussianMixtureDPy3_copy"},{"location":"cluster_pyspark/#tag_1","text":"\u805a\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"cluster_pyspark/#param_1","text":"featuresCol (string) : \u8fdb\u884c\u805a\u7c7b\u7684\u7279\u5f81\u5b57\u6bb5\u540d predictionCol (string) : \u9884\u6d4b\u7ed3\u679c\u7684\u5b57\u6bb5\u540d k (int) : \u8bbe\u7f6e\u4f60\u60f3\u805a\u6210\u7684\u7c7b\u6570 tol (double) : maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 seed (int) : \u79cd\u5b50 probabilityCol (string) : \u8f93\u51fa\u9884\u6d4b\u6982\u7387\u5b57\u6bb5","title":"Param:"},{"location":"cluster_pyspark/#input_1","text":"in1 (any)","title":"Input:"},{"location":"cluster_pyspark/#output_1","text":"out1 (any)","title":"Output:"},{"location":"cluster_pyspark/#kmeansdpy3","text":"kmeans\u805a\u7c7b","title":"KMeansDPy3"},{"location":"cluster_pyspark/#tag_2","text":"\u805a\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"cluster_pyspark/#param_2","text":"featuresCol (string) : \u8fdb\u884c\u805a\u7c7b\u7684\u7279\u5f81\u5b57\u6bb5\u540d predictionCol (string) : \u9884\u6d4b\u7ed3\u679c\u7684\u5b57\u6bb5\u540d k (int) : \u8bbe\u7f6e\u4f60\u60f3\u805a\u6210\u7684\u7c7b\u6570 initMode (string) : \u8bbe\u7f6ekmeans\u6a21\u578b\u7c7b\u578b initSteps (int) : tol (double) : maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 seed (int) : \u79cd\u5b50","title":"Param:"},{"location":"cluster_pyspark/#input_2","text":"in1 (any)","title":"Input:"},{"location":"cluster_pyspark/#output_2","text":"out1 (any)","title":"Output:"},{"location":"cluster_pyspark/#ldadpy3_copy","text":"LDA\u805a\u7c7b","title":"LDADPy3_copy"},{"location":"cluster_pyspark/#tag_3","text":"\u805a\u7c7b\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"cluster_pyspark/#param_3","text":"featuresCol (string) : \u8fdb\u884c\u805a\u7c7b\u7684\u7279\u5f81\u5b57\u6bb5\u540d k (int) : \u8bbe\u7f6e\u4f60\u60f3\u805a\u6210\u7684\u7c7b\u6570 maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 seed (int) : \u79cd\u5b50 checkpointInterval (int) : optimizer (string) : learningOffset (double) : learningDecay (double) : subsamplingRate (double) : optimizeDocConcentration (string) : docConcentration (string) : \u6309\u9017\u53f7\u5206\u9694 topicConcentration (int) : topicDistributionCol (string) : \u6307\u6807\u805a\u7c7b\u8bdd\u9898\u7684\u8f93\u51fa\u5b57\u6bb5 keepLastCheckpoint (string) :","title":"Param:"},{"location":"cluster_pyspark/#input_3","text":"input_path (any)","title":"Input:"},{"location":"cluster_pyspark/#output_3","text":"output_path (model.pmml)","title":"Output:"},{"location":"data_exploration_pyspark/","text":"ChiSquareTestDPy3 \u5361\u65b9\u68c0\u9a8c\u81ea\u53d8\u91cf\u4e0e\u56e0\u53d8\u91cf\u4e4b\u95f4\u5173\u7cfb Tag: \u6570\u636e\u63a2\u7d22_\u5206\u5e03\u5f0f Param: label (string) : \u76ee\u6807\u53d8\u91cf Input: in1 (any) Output: None CorrelationDPy3 \u8ba1\u7b97\u53d8\u91cf\u95f4\u76f8\u5173\u7cfb\u6570\u77e9\u9635 Tag: \u6570\u636e\u63a2\u7d22_\u5206\u5e03\u5f0f Param: None Input: in1 (any) Output: None FeatureInfoDPy3 \u6570\u636e\u4fe1\u606f\u7edf\u8ba1\uff1a\u884c\u6570\u7edf\u8ba1\u3001\u53d8\u91cf\u6570\u7edf\u8ba1\u3001\u7f3a\u5931\u503c\u767e\u5206\u6bd4\u7edf\u8ba1\u3001\u5404\u53d8\u91cf\u7f3a\u5931\u503c\u7edf\u8ba1 Tag: \u6570\u636e\u63a2\u7d22_\u5206\u5e03\u5f0f Param: None Input: in1 (any) Output: out1 (any) out2 (any) out3 (any) out4 (any) out5 (any) GroupbySumDPy3 \u6839\u636e\u6307\u5b9a\u53d8\u91cf\u8fdb\u884c\u5206\u7ec4\u5e76\u6c42\u548c\u3001\u53d6\u5747\u503c\u3001\u53d6\u6700\u5927\u503c\u3001\u53d6\u6700\u5c0f\u503c\u3001\u8ba1\u6570 Tag: \u6570\u636e\u63a2\u7d22_\u5206\u5e03\u5f0f Param: cols (string) : groupby\u53d8\u91cf col (string) : \u6307\u5b9a\u505a\u64cd\u4f5c\u7684\u53d8\u91cf operation (string) : \u6307\u5b9a\u64cd\u4f5c\u7c7b\u578b Input: in1 (any) Output: out1 (any) PivotingDPy3 \u9009\u62e9\u6307\u5b9a\u5217\u8fdb\u884c\u6570\u636e\u900f\u89c6\u64cd\u4f5c Tag: \u6570\u636e\u63a2\u7d22_\u5206\u5e03\u5f0f Param: cols (string) : \u5206\u7ec4\u5217 var1 (string) : \u900f\u89c6\u5217 var2 (string) : \u6c42\u548c\u5217 Input: in1 (any) Output: out1 (any)","title":"\u6570\u636e\u63a2\u7d22"},{"location":"data_exploration_pyspark/#chisquaretestdpy3","text":"\u5361\u65b9\u68c0\u9a8c\u81ea\u53d8\u91cf\u4e0e\u56e0\u53d8\u91cf\u4e4b\u95f4\u5173\u7cfb","title":"ChiSquareTestDPy3"},{"location":"data_exploration_pyspark/#tag","text":"\u6570\u636e\u63a2\u7d22_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"data_exploration_pyspark/#param","text":"label (string) : \u76ee\u6807\u53d8\u91cf","title":"Param:"},{"location":"data_exploration_pyspark/#input","text":"in1 (any)","title":"Input:"},{"location":"data_exploration_pyspark/#output","text":"None","title":"Output:"},{"location":"data_exploration_pyspark/#correlationdpy3","text":"\u8ba1\u7b97\u53d8\u91cf\u95f4\u76f8\u5173\u7cfb\u6570\u77e9\u9635","title":"CorrelationDPy3"},{"location":"data_exploration_pyspark/#tag_1","text":"\u6570\u636e\u63a2\u7d22_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"data_exploration_pyspark/#param_1","text":"None","title":"Param:"},{"location":"data_exploration_pyspark/#input_1","text":"in1 (any)","title":"Input:"},{"location":"data_exploration_pyspark/#output_1","text":"None","title":"Output:"},{"location":"data_exploration_pyspark/#featureinfodpy3","text":"\u6570\u636e\u4fe1\u606f\u7edf\u8ba1\uff1a\u884c\u6570\u7edf\u8ba1\u3001\u53d8\u91cf\u6570\u7edf\u8ba1\u3001\u7f3a\u5931\u503c\u767e\u5206\u6bd4\u7edf\u8ba1\u3001\u5404\u53d8\u91cf\u7f3a\u5931\u503c\u7edf\u8ba1","title":"FeatureInfoDPy3"},{"location":"data_exploration_pyspark/#tag_2","text":"\u6570\u636e\u63a2\u7d22_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"data_exploration_pyspark/#param_2","text":"None","title":"Param:"},{"location":"data_exploration_pyspark/#input_2","text":"in1 (any)","title":"Input:"},{"location":"data_exploration_pyspark/#output_2","text":"out1 (any) out2 (any) out3 (any) out4 (any) out5 (any)","title":"Output:"},{"location":"data_exploration_pyspark/#groupbysumdpy3","text":"\u6839\u636e\u6307\u5b9a\u53d8\u91cf\u8fdb\u884c\u5206\u7ec4\u5e76\u6c42\u548c\u3001\u53d6\u5747\u503c\u3001\u53d6\u6700\u5927\u503c\u3001\u53d6\u6700\u5c0f\u503c\u3001\u8ba1\u6570","title":"GroupbySumDPy3"},{"location":"data_exploration_pyspark/#tag_3","text":"\u6570\u636e\u63a2\u7d22_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"data_exploration_pyspark/#param_3","text":"cols (string) : groupby\u53d8\u91cf col (string) : \u6307\u5b9a\u505a\u64cd\u4f5c\u7684\u53d8\u91cf operation (string) : \u6307\u5b9a\u64cd\u4f5c\u7c7b\u578b","title":"Param:"},{"location":"data_exploration_pyspark/#input_3","text":"in1 (any)","title":"Input:"},{"location":"data_exploration_pyspark/#output_3","text":"out1 (any)","title":"Output:"},{"location":"data_exploration_pyspark/#pivotingdpy3","text":"\u9009\u62e9\u6307\u5b9a\u5217\u8fdb\u884c\u6570\u636e\u900f\u89c6\u64cd\u4f5c","title":"PivotingDPy3"},{"location":"data_exploration_pyspark/#tag_4","text":"\u6570\u636e\u63a2\u7d22_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"data_exploration_pyspark/#param_4","text":"cols (string) : \u5206\u7ec4\u5217 var1 (string) : \u900f\u89c6\u5217 var2 (string) : \u6c42\u548c\u5217","title":"Param:"},{"location":"data_exploration_pyspark/#input_4","text":"in1 (any)","title":"Input:"},{"location":"data_exploration_pyspark/#output_4","text":"out1 (any)","title":"Output:"},{"location":"dataframe_py/","text":"ChangeTypeDataSPy3 \u8f6c\u6362\u6570\u636e\u7c7b\u578b Tag: \u6570\u636e\u64cd\u4f5c Param: cols (string) : \u9009\u62e9\u9700\u8981\u8f6c\u6362\u7c7b\u578b\u7684\u53d8\u91cf type (string) : \u8f6c\u6362\u540e\u7684\u53d8\u91cf\u7c7b\u578b cols1 (string) : \u9009\u62e9\u8981\u5254\u9664\u7684\u53d8\u91cf\uff0c\u5176\u4f59\u53d8\u91cf\u5168\u90e8\u505a\u7c7b\u578b\u8f6c\u6362 Input: d_data (py3pkl) Output: d_changed_data (py3pkl) ColsDropDataSPy3 \u5220\u9664\u6307\u5b9a\u5217 Tag: \u6570\u636e\u64cd\u4f5c Param: cols (string) : Input: d_data (py3pkl) Output: d_changed_data (py3pkl) ColsSelect2DataSPy3 Tag: \u6570\u636e\u64cd\u4f5c Param: None Input: d_data (py3pkl) selected_cols (py3pkl) Output: d_selected_data (csv) ColsSelectCSVDataSPy3 \u9009\u62e9\u9700\u8981\u7684\u53d8\u91cf\uff0c\u5e76\u4ee5CSV\u5f62\u5f0f\u8f93\u51fa Tag: \u6570\u636e\u64cd\u4f5c Param: cols (string) : Input: d_data (csv) Output: d_selected_data (csv) ColsSelectDataSPy3 \u9009\u62e9\u9700\u8981\u7684\u53d8\u91cf Tag: \u6570\u636e\u64cd\u4f5c Param: cols (string) : Input: d_data (py3pkl) Output: d_selected_data (py3pkl) ConcatDataSPy3 \u5408\u5e76\u4e24\u4e2a\u6570\u636e\u96c6 Tag: \u6570\u636e\u64cd\u4f5c Param: None Input: d_data1 (csv) d_data2 (csv) Output: d_data (csv) Date2DaysDataSPy3 \u5c06\u65e5\u671f\u8f6c\u6362\u4e3a\u5929\u6570(\u53ef\u4ee5\u662f\u4e24\u4e2a\u65e5\u671f\u95f4\u8ddd\u79bb\u7684\u5929\u6570\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u65e5\u671f\u8ddd\u4eca\u7684\u5929\u6570) Tag: \u6570\u636e\u64cd\u4f5c Param: var1 (string) : var1 - var2 var2 (string) : var1 - var2 whether_use_2_variables (int) : \u662f\u5426\u4f7f\u7528\u4e24\u4e2a\u65e5\u671f\u53d8\u91cf\uff0c\u5982\u679c\u5426\uff0c\u5219\u53ea\u4f7f\u7528var1\uff0c\u8ba1\u7b97var1\u8ddd\u5f53\u524d\u65f6\u95f4\u5929\u6570 new_var (string) : \u65b0\u751f\u6210\u53d8\u91cf\u7684\u53d8\u91cf\u540d Input: d_data1 (py3pkl) Output: d_data2 (py3pkl) DateParsingDataSPy3 \u89e3\u6790\u65e5\u671f\u578b\u53d8\u91cf\uff0c\u751f\u6210\u56db\u4e2a\u65b0\u53d8\u91cf\uff1a\u6708\u3001\u65e5\u3001\u4e00\u5468\u7684\u7b2c\u51e0\u5929\u3001\u662f\u5426\u4e3a\u5468\u672b Tag: \u6570\u636e\u64cd\u4f5c Param: cols (string) : \u9009\u62e9\u8981\u6784\u5efa\u884d\u751f\u53d8\u91cf\u7684\u65e5\u671f format (string) : \u6307\u5b9a\u65e5\u671f\u53d8\u91cf\u7684\u683c\u5f0f Input: d_data1 (py3pkl) Output: d_changed_data (py3pkl) DropDuplicatesDataSPy3 \u6839\u636e\u6307\u5b9a\u53d8\u91cf\u53bb\u6389\u91cd\u590d\u884c Tag: \u6570\u636e\u64cd\u4f5c Param: col (string) : \u6307\u5b9a\u53d8\u91cf method (string) : \u9009\u62e9\u53bb\u91cd\u65b9\u6cd5 Input: d_data1 (csv) Output: d_changed_data (csv) FillNADataSPy3 \u5c06\u6307\u5b9a\u53d8\u91cf\u7684\u7f3a\u5931\u503c\u586b\u8865\u4e3a0 Tag: \u6570\u636e\u64cd\u4f5c Param: cols (string) : Input: d_data (py3pkl) Output: d_changed_data (py3pkl) MapLambdaDataSPy3 \u5bf9\u6570\u636e\u4f7f\u7528map\u51fd\u6570\u4ece\u800c\u8fdb\u884c\u7279\u5f81\u7684\u6e05\u6d17 Tag: \u6570\u636e\u64cd\u4f5c Param: script (string) : map\u51fd\u6570\u4e2d\u7684\u8bed\u53e5 var (string) : \u9009\u62e9\u6e05\u6d17\u7684\u53d8\u91cf Input: d_data1 (py3pkl) Output: d_data2 (py3pkl) MappingDataSPy3 \u7c7b\u522b\u5b57\u6bb5\u6620\u5c04 Tag: \u6570\u636e\u64cd\u4f5c Param: cols (string) : \u9009\u62e9\u8981\u6620\u5c04\u7684\u5b57\u6bb5 Input: d_data1 (py3pkl) Output: d_changed_data (py3pkl) MergeDataSPy3 \u6839\u636e\u4e3b\u952e\u5bf9\u6570\u636e\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c Tag: \u6570\u636e\u64cd\u4f5c Param: key (string) : \u5b9a\u4e49\u4e3b\u952e\u53d8\u91cf method (string) : \u9009\u62e9\u5408\u5e76\u65b9\u5f0f Input: d_data1 (csv) d_data2 (csv) Output: d_changed_data (csv) ReplaceDataSPy3 \u5c06\u6570\u636e\u4e2d\u7684\u67d0\u4e2a\u503c\u5168\u90e8\u66ff\u6362\u4e3a\u53e6\u4e00\u4e2a\u503c Tag: \u6570\u636e\u64cd\u4f5c Param: value_after (string) : \u66ff\u6362\u540e\u7684\u503c value_before1 (string) : value_before2 (string) : \u66ff\u6362\u524d\u7684\u503c Input: d_data1 (py3pkl) Output: d_data2 (py3pkl) SplitFeatSPy3 \u5c06\u7279\u5f81\u6570\u636e\u96c6\u548c\u6807\u7b7e\u6570\u636e\u96c6\u62c6\u5206\u4e3a\u8bad\u7ec3\u96c6\uff08\u7279\u5f81\u3001\u6807\u7b7e\uff09\uff0c\u6d4b\u8bd5\u96c6\uff08\u7279\u5f81\u3001\u6807\u7b7e\uff09\u3002 Tag: \u6570\u636e\u64cd\u4f5c Param: test_size (double) : \u6d4b\u8bd5\u96c6\u6bd4\u4f8b Input: d_feature (csv) d_label (csv) Output: d_feature_train (csv) d_feature_test (csv) d_label_train (csv) d_label_test (csv)","title":"\u6570\u636e\u64cd\u4f5c"},{"location":"dataframe_py/#changetypedataspy3","text":"\u8f6c\u6362\u6570\u636e\u7c7b\u578b","title":"ChangeTypeDataSPy3"},{"location":"dataframe_py/#tag","text":"\u6570\u636e\u64cd\u4f5c","title":"Tag:"},{"location":"dataframe_py/#param","text":"cols (string) : \u9009\u62e9\u9700\u8981\u8f6c\u6362\u7c7b\u578b\u7684\u53d8\u91cf type (string) : \u8f6c\u6362\u540e\u7684\u53d8\u91cf\u7c7b\u578b cols1 (string) : \u9009\u62e9\u8981\u5254\u9664\u7684\u53d8\u91cf\uff0c\u5176\u4f59\u53d8\u91cf\u5168\u90e8\u505a\u7c7b\u578b\u8f6c\u6362","title":"Param:"},{"location":"dataframe_py/#input","text":"d_data (py3pkl)","title":"Input:"},{"location":"dataframe_py/#output","text":"d_changed_data (py3pkl)","title":"Output:"},{"location":"dataframe_py/#colsdropdataspy3","text":"\u5220\u9664\u6307\u5b9a\u5217","title":"ColsDropDataSPy3"},{"location":"dataframe_py/#tag_1","text":"\u6570\u636e\u64cd\u4f5c","title":"Tag:"},{"location":"dataframe_py/#param_1","text":"cols (string) :","title":"Param:"},{"location":"dataframe_py/#input_1","text":"d_data (py3pkl)","title":"Input:"},{"location":"dataframe_py/#output_1","text":"d_changed_data (py3pkl)","title":"Output:"},{"location":"dataframe_py/#colsselect2dataspy3","text":"","title":"ColsSelect2DataSPy3"},{"location":"dataframe_py/#tag_2","text":"\u6570\u636e\u64cd\u4f5c","title":"Tag:"},{"location":"dataframe_py/#param_2","text":"None","title":"Param:"},{"location":"dataframe_py/#input_2","text":"d_data (py3pkl) selected_cols (py3pkl)","title":"Input:"},{"location":"dataframe_py/#output_2","text":"d_selected_data (csv)","title":"Output:"},{"location":"dataframe_py/#colsselectcsvdataspy3","text":"\u9009\u62e9\u9700\u8981\u7684\u53d8\u91cf\uff0c\u5e76\u4ee5CSV\u5f62\u5f0f\u8f93\u51fa","title":"ColsSelectCSVDataSPy3"},{"location":"dataframe_py/#tag_3","text":"\u6570\u636e\u64cd\u4f5c","title":"Tag:"},{"location":"dataframe_py/#param_3","text":"cols (string) :","title":"Param:"},{"location":"dataframe_py/#input_3","text":"d_data (csv)","title":"Input:"},{"location":"dataframe_py/#output_3","text":"d_selected_data (csv)","title":"Output:"},{"location":"dataframe_py/#colsselectdataspy3","text":"\u9009\u62e9\u9700\u8981\u7684\u53d8\u91cf","title":"ColsSelectDataSPy3"},{"location":"dataframe_py/#tag_4","text":"\u6570\u636e\u64cd\u4f5c","title":"Tag:"},{"location":"dataframe_py/#param_4","text":"cols (string) :","title":"Param:"},{"location":"dataframe_py/#input_4","text":"d_data (py3pkl)","title":"Input:"},{"location":"dataframe_py/#output_4","text":"d_selected_data (py3pkl)","title":"Output:"},{"location":"dataframe_py/#concatdataspy3","text":"\u5408\u5e76\u4e24\u4e2a\u6570\u636e\u96c6","title":"ConcatDataSPy3"},{"location":"dataframe_py/#tag_5","text":"\u6570\u636e\u64cd\u4f5c","title":"Tag:"},{"location":"dataframe_py/#param_5","text":"None","title":"Param:"},{"location":"dataframe_py/#input_5","text":"d_data1 (csv) d_data2 (csv)","title":"Input:"},{"location":"dataframe_py/#output_5","text":"d_data (csv)","title":"Output:"},{"location":"dataframe_py/#date2daysdataspy3","text":"\u5c06\u65e5\u671f\u8f6c\u6362\u4e3a\u5929\u6570(\u53ef\u4ee5\u662f\u4e24\u4e2a\u65e5\u671f\u95f4\u8ddd\u79bb\u7684\u5929\u6570\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u65e5\u671f\u8ddd\u4eca\u7684\u5929\u6570)","title":"Date2DaysDataSPy3"},{"location":"dataframe_py/#tag_6","text":"\u6570\u636e\u64cd\u4f5c","title":"Tag:"},{"location":"dataframe_py/#param_6","text":"var1 (string) : var1 - var2 var2 (string) : var1 - var2 whether_use_2_variables (int) : \u662f\u5426\u4f7f\u7528\u4e24\u4e2a\u65e5\u671f\u53d8\u91cf\uff0c\u5982\u679c\u5426\uff0c\u5219\u53ea\u4f7f\u7528var1\uff0c\u8ba1\u7b97var1\u8ddd\u5f53\u524d\u65f6\u95f4\u5929\u6570 new_var (string) : \u65b0\u751f\u6210\u53d8\u91cf\u7684\u53d8\u91cf\u540d","title":"Param:"},{"location":"dataframe_py/#input_6","text":"d_data1 (py3pkl)","title":"Input:"},{"location":"dataframe_py/#output_6","text":"d_data2 (py3pkl)","title":"Output:"},{"location":"dataframe_py/#dateparsingdataspy3","text":"\u89e3\u6790\u65e5\u671f\u578b\u53d8\u91cf\uff0c\u751f\u6210\u56db\u4e2a\u65b0\u53d8\u91cf\uff1a\u6708\u3001\u65e5\u3001\u4e00\u5468\u7684\u7b2c\u51e0\u5929\u3001\u662f\u5426\u4e3a\u5468\u672b","title":"DateParsingDataSPy3"},{"location":"dataframe_py/#tag_7","text":"\u6570\u636e\u64cd\u4f5c","title":"Tag:"},{"location":"dataframe_py/#param_7","text":"cols (string) : \u9009\u62e9\u8981\u6784\u5efa\u884d\u751f\u53d8\u91cf\u7684\u65e5\u671f format (string) : \u6307\u5b9a\u65e5\u671f\u53d8\u91cf\u7684\u683c\u5f0f","title":"Param:"},{"location":"dataframe_py/#input_7","text":"d_data1 (py3pkl)","title":"Input:"},{"location":"dataframe_py/#output_7","text":"d_changed_data (py3pkl)","title":"Output:"},{"location":"dataframe_py/#dropduplicatesdataspy3","text":"\u6839\u636e\u6307\u5b9a\u53d8\u91cf\u53bb\u6389\u91cd\u590d\u884c","title":"DropDuplicatesDataSPy3"},{"location":"dataframe_py/#tag_8","text":"\u6570\u636e\u64cd\u4f5c","title":"Tag:"},{"location":"dataframe_py/#param_8","text":"col (string) : \u6307\u5b9a\u53d8\u91cf method (string) : \u9009\u62e9\u53bb\u91cd\u65b9\u6cd5","title":"Param:"},{"location":"dataframe_py/#input_8","text":"d_data1 (csv)","title":"Input:"},{"location":"dataframe_py/#output_8","text":"d_changed_data (csv)","title":"Output:"},{"location":"dataframe_py/#fillnadataspy3","text":"\u5c06\u6307\u5b9a\u53d8\u91cf\u7684\u7f3a\u5931\u503c\u586b\u8865\u4e3a0","title":"FillNADataSPy3"},{"location":"dataframe_py/#tag_9","text":"\u6570\u636e\u64cd\u4f5c","title":"Tag:"},{"location":"dataframe_py/#param_9","text":"cols (string) :","title":"Param:"},{"location":"dataframe_py/#input_9","text":"d_data (py3pkl)","title":"Input:"},{"location":"dataframe_py/#output_9","text":"d_changed_data (py3pkl)","title":"Output:"},{"location":"dataframe_py/#maplambdadataspy3","text":"\u5bf9\u6570\u636e\u4f7f\u7528map\u51fd\u6570\u4ece\u800c\u8fdb\u884c\u7279\u5f81\u7684\u6e05\u6d17","title":"MapLambdaDataSPy3"},{"location":"dataframe_py/#tag_10","text":"\u6570\u636e\u64cd\u4f5c","title":"Tag:"},{"location":"dataframe_py/#param_10","text":"script (string) : map\u51fd\u6570\u4e2d\u7684\u8bed\u53e5 var (string) : \u9009\u62e9\u6e05\u6d17\u7684\u53d8\u91cf","title":"Param:"},{"location":"dataframe_py/#input_10","text":"d_data1 (py3pkl)","title":"Input:"},{"location":"dataframe_py/#output_10","text":"d_data2 (py3pkl)","title":"Output:"},{"location":"dataframe_py/#mappingdataspy3","text":"\u7c7b\u522b\u5b57\u6bb5\u6620\u5c04","title":"MappingDataSPy3"},{"location":"dataframe_py/#tag_11","text":"\u6570\u636e\u64cd\u4f5c","title":"Tag:"},{"location":"dataframe_py/#param_11","text":"cols (string) : \u9009\u62e9\u8981\u6620\u5c04\u7684\u5b57\u6bb5","title":"Param:"},{"location":"dataframe_py/#input_11","text":"d_data1 (py3pkl)","title":"Input:"},{"location":"dataframe_py/#output_11","text":"d_changed_data (py3pkl)","title":"Output:"},{"location":"dataframe_py/#mergedataspy3","text":"\u6839\u636e\u4e3b\u952e\u5bf9\u6570\u636e\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c","title":"MergeDataSPy3"},{"location":"dataframe_py/#tag_12","text":"\u6570\u636e\u64cd\u4f5c","title":"Tag:"},{"location":"dataframe_py/#param_12","text":"key (string) : \u5b9a\u4e49\u4e3b\u952e\u53d8\u91cf method (string) : \u9009\u62e9\u5408\u5e76\u65b9\u5f0f","title":"Param:"},{"location":"dataframe_py/#input_12","text":"d_data1 (csv) d_data2 (csv)","title":"Input:"},{"location":"dataframe_py/#output_12","text":"d_changed_data (csv)","title":"Output:"},{"location":"dataframe_py/#replacedataspy3","text":"\u5c06\u6570\u636e\u4e2d\u7684\u67d0\u4e2a\u503c\u5168\u90e8\u66ff\u6362\u4e3a\u53e6\u4e00\u4e2a\u503c","title":"ReplaceDataSPy3"},{"location":"dataframe_py/#tag_13","text":"\u6570\u636e\u64cd\u4f5c","title":"Tag:"},{"location":"dataframe_py/#param_13","text":"value_after (string) : \u66ff\u6362\u540e\u7684\u503c value_before1 (string) : value_before2 (string) : \u66ff\u6362\u524d\u7684\u503c","title":"Param:"},{"location":"dataframe_py/#input_13","text":"d_data1 (py3pkl)","title":"Input:"},{"location":"dataframe_py/#output_13","text":"d_data2 (py3pkl)","title":"Output:"},{"location":"dataframe_py/#splitfeatspy3","text":"\u5c06\u7279\u5f81\u6570\u636e\u96c6\u548c\u6807\u7b7e\u6570\u636e\u96c6\u62c6\u5206\u4e3a\u8bad\u7ec3\u96c6\uff08\u7279\u5f81\u3001\u6807\u7b7e\uff09\uff0c\u6d4b\u8bd5\u96c6\uff08\u7279\u5f81\u3001\u6807\u7b7e\uff09\u3002","title":"SplitFeatSPy3"},{"location":"dataframe_py/#tag_14","text":"\u6570\u636e\u64cd\u4f5c","title":"Tag:"},{"location":"dataframe_py/#param_14","text":"test_size (double) : \u6d4b\u8bd5\u96c6\u6bd4\u4f8b","title":"Param:"},{"location":"dataframe_py/#input_14","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"dataframe_py/#output_14","text":"d_feature_train (csv) d_feature_test (csv) d_label_train (csv) d_label_test (csv)","title":"Output:"},{"location":"deeplearning_py/","text":"DataLoadMnistKeras \u4ece\u6307\u5b9a\u8def\u5f84\u52a0\u8f7d\u5212\u5206\u4e3a\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u7684mnist\u6570\u636e\uff0c\u8fd4\u56de\u8be5\u8def\u5f84\u3002 Tag: \u6df1\u5ea6\u5b66\u4e60 Param: path (string) : Input: None Output: mnist_path (txt) DataPretreatmentMnistKeras \u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u9884\u5904\u7406\uff0c\u8fd4\u56de\u5212\u5206\u597d\u7684\u6570\u636e\u96c6\u548cshape\u3002 Tag: \u6df1\u5ea6\u5b66\u4e60 Param: img_rows (int) : \u56fe\u50cf\u50cf\u7d20\u9ad8\u5ea6 img_cols (int) : \u56fe\u50cf\u50cf\u7d20\u5bbd\u5ea6 num_classes (int) : \u5206\u7c7b\u6570\u76ee train_num (int) : \u8bad\u7ec3\u96c6\u6570\u76ee test_num (int) : Input: path (txt) Output: x_train (csv) y_train (csv) x_train_shape (csv) y_train_shape (csv) x_test (csv) y_test (csv) x_test_shape (csv) y_test_shape (csv) imageclassifier_mxnet \u57fa\u4e8emxnet\u6846\u67b6\u7684\u56fe\u50cf\u5206\u7c7bdemo\u3002 Tag: \u6df1\u5ea6\u5b66\u4e60 Param: model_name (string) : Input: image (jpg) Output: predict (txt) keras_test keras\u6d4b\u8bd5 Tag: \u6df1\u5ea6\u5b66\u4e60 Param: None Input: data (csv) Output: image (pdf) ModelEvaluateKeras \u7528\u6d4b\u8bd5\u96c6\u6570\u636e\u8fdb\u884c\u6a21\u578b\u8bc4\u4f30\u3002 Tag: \u6df1\u5ea6\u5b66\u4e60 Param: mlServerAddr (string) : modelName (string) : EVALUATE_batch_size (string) : EVALUATE_verbose (int) : EVALUATE_sample_weight (string) : Input: model_trained (h5) x_test (csv) y_test (csv) x_test_shape (csv) y_test_shape (csv) blockId (pkl) Output: model (model.h5) ModelMnistKeras \u5229\u7528keras\u642d\u5efa\u4e00\u4e2a\u4e24\u5c42\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u3002 Tag: \u6df1\u5ea6\u5b66\u4e60 Param: img_rows (int) : img_cols (int) : num_classes (int) : Input: None Output: model (h5) model_json (json) ModelStructShowKeras \u5229\u7528model.summary\u6253\u5370\u6a21\u578b\u6982\u51b5\u3002 Tag: \u6df1\u5ea6\u5b66\u4e60 Param: None Input: model (h5) Output: model_struct (png) ModelTrainKeras \u8fdb\u884c\u6a21\u578b\u8bad\u7ec3\uff0c\u8fd4\u56de\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u3002 Tag: \u6df1\u5ea6\u5b66\u4e60 Param: COMPILE_optimizer (string) : \u7f16\u8bd1\u4f18\u5316\u5668 COMPILE_loss (string) : \u7f16\u8bd1\u635f\u5931\u51fd\u6570\uff08\u76ee\u6807\u51fd\u6570\uff09 COMPILE_metrics (string) : \u6a21\u578b\u8bad\u7ec3/\u6d4b\u8bd5\u7684\u5ea6\u91cf\u6307\u6807 COMPILE_sample_weight_mode (string) : \u6837\u672c\u6743\u91cd\u7c7b\u578b(\u4e00\u7ef4\u6216\u591a\u7ef4) COMPILE_weighted_metrics (string) : metrics\u6743\u91cd\u5217\u8868 COMPILE_target_tensors (string) : \u81ea\u5b9a\u4e49\u76ee\u6807\u5f20\u91cf FIT_epochs (int) : \u8bad\u7ec3\u8f6e\u6570\u76ee FIT_verbose (int) : \u8bad\u7ec3\u8fc7\u7a0b\u65e5\u5fd7\u663e\u793a FIT_batch_size (int) : \u8bad\u7ec3\u6837\u672c\u6570\u91cf/\u6279\u6b21 FIT_callbacks (string) : \u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u56de\u8c03\u51fd\u6570\u96c6 FIT_validation_split (double) : \u4ece\u8bad\u7ec3\u96c6\u62bd\u53d6\u9a8c\u8bc1\u96c6\u6bd4\u4f8b FIT_validation_data (string) : \u6307\u5b9a\u7684\u9a8c\u8bc1\u96c6 FIT_shuffle (int) : \u662f\u5426\u5728\u6bcf\u8bad\u7ec3\u8f6e\u6b21\u6253\u4e71\u6837\u672c\u987a\u5e8f FIT_class_weight (string) : \u8bad\u7ec3\u6837\u672c\u7c7b\u6743\u91cd FIT_sample_weight (string) : \u6837\u672c\u6743\u91cd(\u4f9d\u8d56\u6837\u672c\u6743\u91cd\u7c7b\u578b\u4e3atemporal) FIT_initial_epoch (int) : \u8bad\u7ec3\u8d77\u59cb\u8f6e\u6b21\uff08\u7528\u4e8e\u7ee7\u7eed\u4e2d\u65ad\u7684\u8bad\u7ec3\uff09 FIT_steps_per_epoch (string) : \u6bcf\u8f6e\u6b21\u8bad\u7ec3\u5305\u542b\u7684\u6b65\u6570/\u6279\u6b21 FIT_validation_steps (string) : \u5904\u7406\u9a8c\u8bc1\u96c6\u7528\u7684\u6b65\u6570/\u6279\u6b21\uff08\u4f9d\u8d56\u8bad\u7ec3\u6b65\u6570/\u8bad\u7ec3\u8f6e\u6b21\uff09 COMPILE_loss_weights (string) : \u635f\u5931\u51fd\u6570\u6743\u91cd\u5217\u8868 categorical_classes (int) : Input: model (h5) x_train (csv) y_train (csv) x_train_shape (csv) y_train_shape (csv) Output: model_trained (h5) model_json (json) blockId (pkl) mxnet_test \u57fa\u4e8emxnet\u6846\u67b6\uff0c\u6784\u5efa2\u5c42\u795e\u7ecf\u7f51\u7edc\uff0c\u5b9e\u73b0\u524d\u5411\u4f20\u64ad\u548c\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u3002 Tag: \u6df1\u5ea6\u5b66\u4e60 Param: lr (double) : \u5b66\u4e60\u7387 num_epochs (int) : \u8fed\u4ee3\u6b21\u6570 batch_size (int) : \u68af\u5ea6\u4e0b\u964d\u503c Input: data (csv) Output: out_1 (file) pytorch_test \u57fa\u4e8epytorch\u6846\u67b6\uff0c\u6784\u5efa2\u5c42\u795e\u7ecf\u7f51\u7edc\uff0c\u5b9e\u73b0\u524d\u5411\u4f20\u64ad\u548c\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u3002 Tag: \u6df1\u5ea6\u5b66\u4e60 Param: None Input: data (csv) Output: result (txt) tensorflow-test \u57fa\u4e8etensorflow\u6846\u67b6\uff0c\u6784\u5efa\u3001\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff0c\u5e76\u5bf9\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\u3002 Tag: \u6df1\u5ea6\u5b66\u4e60 Param: data_path (string) : Input: None Output: None","title":"\u6df1\u5ea6\u5b66\u4e60\u6a21\u5757"},{"location":"deeplearning_py/#dataloadmnistkeras","text":"\u4ece\u6307\u5b9a\u8def\u5f84\u52a0\u8f7d\u5212\u5206\u4e3a\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u7684mnist\u6570\u636e\uff0c\u8fd4\u56de\u8be5\u8def\u5f84\u3002","title":"DataLoadMnistKeras"},{"location":"deeplearning_py/#tag","text":"\u6df1\u5ea6\u5b66\u4e60","title":"Tag:"},{"location":"deeplearning_py/#param","text":"path (string) :","title":"Param:"},{"location":"deeplearning_py/#input","text":"None","title":"Input:"},{"location":"deeplearning_py/#output","text":"mnist_path (txt)","title":"Output:"},{"location":"deeplearning_py/#datapretreatmentmnistkeras","text":"\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u9884\u5904\u7406\uff0c\u8fd4\u56de\u5212\u5206\u597d\u7684\u6570\u636e\u96c6\u548cshape\u3002","title":"DataPretreatmentMnistKeras"},{"location":"deeplearning_py/#tag_1","text":"\u6df1\u5ea6\u5b66\u4e60","title":"Tag:"},{"location":"deeplearning_py/#param_1","text":"img_rows (int) : \u56fe\u50cf\u50cf\u7d20\u9ad8\u5ea6 img_cols (int) : \u56fe\u50cf\u50cf\u7d20\u5bbd\u5ea6 num_classes (int) : \u5206\u7c7b\u6570\u76ee train_num (int) : \u8bad\u7ec3\u96c6\u6570\u76ee test_num (int) :","title":"Param:"},{"location":"deeplearning_py/#input_1","text":"path (txt)","title":"Input:"},{"location":"deeplearning_py/#output_1","text":"x_train (csv) y_train (csv) x_train_shape (csv) y_train_shape (csv) x_test (csv) y_test (csv) x_test_shape (csv) y_test_shape (csv)","title":"Output:"},{"location":"deeplearning_py/#imageclassifier_mxnet","text":"\u57fa\u4e8emxnet\u6846\u67b6\u7684\u56fe\u50cf\u5206\u7c7bdemo\u3002","title":"imageclassifier_mxnet"},{"location":"deeplearning_py/#tag_2","text":"\u6df1\u5ea6\u5b66\u4e60","title":"Tag:"},{"location":"deeplearning_py/#param_2","text":"model_name (string) :","title":"Param:"},{"location":"deeplearning_py/#input_2","text":"image (jpg)","title":"Input:"},{"location":"deeplearning_py/#output_2","text":"predict (txt)","title":"Output:"},{"location":"deeplearning_py/#keras_test","text":"keras\u6d4b\u8bd5","title":"keras_test"},{"location":"deeplearning_py/#tag_3","text":"\u6df1\u5ea6\u5b66\u4e60","title":"Tag:"},{"location":"deeplearning_py/#param_3","text":"None","title":"Param:"},{"location":"deeplearning_py/#input_3","text":"data (csv)","title":"Input:"},{"location":"deeplearning_py/#output_3","text":"image (pdf)","title":"Output:"},{"location":"deeplearning_py/#modelevaluatekeras","text":"\u7528\u6d4b\u8bd5\u96c6\u6570\u636e\u8fdb\u884c\u6a21\u578b\u8bc4\u4f30\u3002","title":"ModelEvaluateKeras"},{"location":"deeplearning_py/#tag_4","text":"\u6df1\u5ea6\u5b66\u4e60","title":"Tag:"},{"location":"deeplearning_py/#param_4","text":"mlServerAddr (string) : modelName (string) : EVALUATE_batch_size (string) : EVALUATE_verbose (int) : EVALUATE_sample_weight (string) :","title":"Param:"},{"location":"deeplearning_py/#input_4","text":"model_trained (h5) x_test (csv) y_test (csv) x_test_shape (csv) y_test_shape (csv) blockId (pkl)","title":"Input:"},{"location":"deeplearning_py/#output_4","text":"model (model.h5)","title":"Output:"},{"location":"deeplearning_py/#modelmnistkeras","text":"\u5229\u7528keras\u642d\u5efa\u4e00\u4e2a\u4e24\u5c42\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u3002","title":"ModelMnistKeras"},{"location":"deeplearning_py/#tag_5","text":"\u6df1\u5ea6\u5b66\u4e60","title":"Tag:"},{"location":"deeplearning_py/#param_5","text":"img_rows (int) : img_cols (int) : num_classes (int) :","title":"Param:"},{"location":"deeplearning_py/#input_5","text":"None","title":"Input:"},{"location":"deeplearning_py/#output_5","text":"model (h5) model_json (json)","title":"Output:"},{"location":"deeplearning_py/#modelstructshowkeras","text":"\u5229\u7528model.summary\u6253\u5370\u6a21\u578b\u6982\u51b5\u3002","title":"ModelStructShowKeras"},{"location":"deeplearning_py/#tag_6","text":"\u6df1\u5ea6\u5b66\u4e60","title":"Tag:"},{"location":"deeplearning_py/#param_6","text":"None","title":"Param:"},{"location":"deeplearning_py/#input_6","text":"model (h5)","title":"Input:"},{"location":"deeplearning_py/#output_6","text":"model_struct (png)","title":"Output:"},{"location":"deeplearning_py/#modeltrainkeras","text":"\u8fdb\u884c\u6a21\u578b\u8bad\u7ec3\uff0c\u8fd4\u56de\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u3002","title":"ModelTrainKeras"},{"location":"deeplearning_py/#tag_7","text":"\u6df1\u5ea6\u5b66\u4e60","title":"Tag:"},{"location":"deeplearning_py/#param_7","text":"COMPILE_optimizer (string) : \u7f16\u8bd1\u4f18\u5316\u5668 COMPILE_loss (string) : \u7f16\u8bd1\u635f\u5931\u51fd\u6570\uff08\u76ee\u6807\u51fd\u6570\uff09 COMPILE_metrics (string) : \u6a21\u578b\u8bad\u7ec3/\u6d4b\u8bd5\u7684\u5ea6\u91cf\u6307\u6807 COMPILE_sample_weight_mode (string) : \u6837\u672c\u6743\u91cd\u7c7b\u578b(\u4e00\u7ef4\u6216\u591a\u7ef4) COMPILE_weighted_metrics (string) : metrics\u6743\u91cd\u5217\u8868 COMPILE_target_tensors (string) : \u81ea\u5b9a\u4e49\u76ee\u6807\u5f20\u91cf FIT_epochs (int) : \u8bad\u7ec3\u8f6e\u6570\u76ee FIT_verbose (int) : \u8bad\u7ec3\u8fc7\u7a0b\u65e5\u5fd7\u663e\u793a FIT_batch_size (int) : \u8bad\u7ec3\u6837\u672c\u6570\u91cf/\u6279\u6b21 FIT_callbacks (string) : \u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u56de\u8c03\u51fd\u6570\u96c6 FIT_validation_split (double) : \u4ece\u8bad\u7ec3\u96c6\u62bd\u53d6\u9a8c\u8bc1\u96c6\u6bd4\u4f8b FIT_validation_data (string) : \u6307\u5b9a\u7684\u9a8c\u8bc1\u96c6 FIT_shuffle (int) : \u662f\u5426\u5728\u6bcf\u8bad\u7ec3\u8f6e\u6b21\u6253\u4e71\u6837\u672c\u987a\u5e8f FIT_class_weight (string) : \u8bad\u7ec3\u6837\u672c\u7c7b\u6743\u91cd FIT_sample_weight (string) : \u6837\u672c\u6743\u91cd(\u4f9d\u8d56\u6837\u672c\u6743\u91cd\u7c7b\u578b\u4e3atemporal) FIT_initial_epoch (int) : \u8bad\u7ec3\u8d77\u59cb\u8f6e\u6b21\uff08\u7528\u4e8e\u7ee7\u7eed\u4e2d\u65ad\u7684\u8bad\u7ec3\uff09 FIT_steps_per_epoch (string) : \u6bcf\u8f6e\u6b21\u8bad\u7ec3\u5305\u542b\u7684\u6b65\u6570/\u6279\u6b21 FIT_validation_steps (string) : \u5904\u7406\u9a8c\u8bc1\u96c6\u7528\u7684\u6b65\u6570/\u6279\u6b21\uff08\u4f9d\u8d56\u8bad\u7ec3\u6b65\u6570/\u8bad\u7ec3\u8f6e\u6b21\uff09 COMPILE_loss_weights (string) : \u635f\u5931\u51fd\u6570\u6743\u91cd\u5217\u8868 categorical_classes (int) :","title":"Param:"},{"location":"deeplearning_py/#input_7","text":"model (h5) x_train (csv) y_train (csv) x_train_shape (csv) y_train_shape (csv)","title":"Input:"},{"location":"deeplearning_py/#output_7","text":"model_trained (h5) model_json (json) blockId (pkl)","title":"Output:"},{"location":"deeplearning_py/#mxnet_test","text":"\u57fa\u4e8emxnet\u6846\u67b6\uff0c\u6784\u5efa2\u5c42\u795e\u7ecf\u7f51\u7edc\uff0c\u5b9e\u73b0\u524d\u5411\u4f20\u64ad\u548c\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u3002","title":"mxnet_test"},{"location":"deeplearning_py/#tag_8","text":"\u6df1\u5ea6\u5b66\u4e60","title":"Tag:"},{"location":"deeplearning_py/#param_8","text":"lr (double) : \u5b66\u4e60\u7387 num_epochs (int) : \u8fed\u4ee3\u6b21\u6570 batch_size (int) : \u68af\u5ea6\u4e0b\u964d\u503c","title":"Param:"},{"location":"deeplearning_py/#input_8","text":"data (csv)","title":"Input:"},{"location":"deeplearning_py/#output_8","text":"out_1 (file)","title":"Output:"},{"location":"deeplearning_py/#pytorch_test","text":"\u57fa\u4e8epytorch\u6846\u67b6\uff0c\u6784\u5efa2\u5c42\u795e\u7ecf\u7f51\u7edc\uff0c\u5b9e\u73b0\u524d\u5411\u4f20\u64ad\u548c\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u3002","title":"pytorch_test"},{"location":"deeplearning_py/#tag_9","text":"\u6df1\u5ea6\u5b66\u4e60","title":"Tag:"},{"location":"deeplearning_py/#param_9","text":"None","title":"Param:"},{"location":"deeplearning_py/#input_9","text":"data (csv)","title":"Input:"},{"location":"deeplearning_py/#output_9","text":"result (txt)","title":"Output:"},{"location":"deeplearning_py/#tensorflow-test","text":"\u57fa\u4e8etensorflow\u6846\u67b6\uff0c\u6784\u5efa\u3001\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff0c\u5e76\u5bf9\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\u3002","title":"tensorflow-test"},{"location":"deeplearning_py/#tag_10","text":"\u6df1\u5ea6\u5b66\u4e60","title":"Tag:"},{"location":"deeplearning_py/#param_10","text":"data_path (string) :","title":"Param:"},{"location":"deeplearning_py/#input_10","text":"None","title":"Input:"},{"location":"deeplearning_py/#output_10","text":"None","title":"Output:"},{"location":"feature_selection_py/","text":"CorrXXFeatSpy3 \u8ba1\u7b97\u7279\u5f81\u53d8\u91cf\u548c\u7279\u5f81\u53d8\u91cf\u4e4b\u95f4\u7684(pearson/spearman/kendall)\u76f8\u5173\u6027\uff0c\u5e76\u901a\u8fc7\u8bbe\u5b9a\u7684\u53c2\u6570\u6765\u6d88\u9664\u5f3a\u76f8\u5173\u7684\u7279\u5f81\u53d8\u91cf Tag: \u7279\u5f81\u9009\u62e9 Param: corr_type (string) : corr_threshold (double) : \u6d88\u9664\u5f3a\u76f8\u5173\u65f6\u7684\u9608\u503c Input: d_feature (csv) o_featrue_label_corr (csv) Output: d_feature_selected (csv) o_corr_XX (html) o_corr_heatmap (jpg) CorrXYFeatSPy3 \u8ba1\u7b97\u7279\u5f81\u53d8\u91cf\u548c\u6807\u7b7e\u53d8\u91cf\u4e4b\u95f4\u7684\u76f8\u5173\u6027\uff08\u5361\u65b9/\u4e92\u4fe1\u606f/F\u68c0\u9a8c\uff09\uff0c\u5e76\u901a\u8fc7\u8bbe\u5b9a\u7684\u53c2\u6570\u6765\u7b5b\u9009\u76f8\u5e94\u7684\u7279\u5f81\u53d8\u91cf Tag: \u7279\u5f81\u9009\u62e9 Param: feature_percent (int) : sample_rate (double) : Input: d_feature (py3pkl) d_label (py3pkl) Output: d_feature_selected (csv) o_feature_label_corr (csv) RFEFeatSPy3 \u9012\u5f52\u7279\u5f81\u6d88\u9664\u7684\u4e3b\u8981\u601d\u60f3\u662f\u53cd\u590d\u7684\u6784\u5efa\u6a21\u578b\uff08\u5982SVM\u6216\u8005\u56de\u5f52\u6a21\u578b\uff09\u7136\u540e\u9009\u51fa\u6700\u597d\u7684\uff08\u6216\u8005\u6700\u5dee\u7684\uff09\u7684\u7279\u5f81\uff08\u53ef\u4ee5\u6839\u636e\u7cfb\u6570\u6765\u9009\uff09\uff0c\u628a\u9009\u51fa\u6765\u7684\u7279\u5f81\u653e\u5230\u4e00\u8fb9\uff0c\u7136\u540e\u5728\u5269\u4f59\u7684\u7279\u5f81\u4e0a\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u6240\u6709\u7279\u5f81\u90fd\u904d\u5386\u4e86\u3002 Tag: \u7279\u5f81\u9009\u62e9 Param: percent_to_keep (double) : \u4fdd\u7559\u53d8\u91cf\u4e2a\u6570\u767e\u5206\u6bd4 Input: d_feature (csv) d_label (csv) Output: d_changed_data (csv) d_rfe_support (html) rfe_cols (py3pkl) VarianceThresholdFitFeatSPy3 \u6839\u636e\u65b9\u5dee\u53bb\u6389\u53d6\u503c\u53d8\u5316\u5c0f\u7684\u7279\u5f81\uff0c\u7528\u4e8e\u8bad\u7ec3\u96c6\u6570\u636e\u3002 Tag: \u7279\u5f81\u9009\u62e9 Param: None Input: d_feature (py3pkl) Output: d_changed_data (py3pkl) model (py3pkl) VarianceThresholdTransformFeatSPy3 \u53bb\u6389\u53d6\u503c\u53d8\u5316\u5c0f\u7684\u7279\u5f81\uff0c\u7528\u4e8e\u6d4b\u8bd5\u96c6\u6570\u636e\u3002 Tag: \u7279\u5f81\u9009\u62e9 Param: None Input: model (py3pkl) d_feature (py3pkl) Output: d_changed_data (py3pkl)","title":"\u7279\u5f81\u9009\u62e9"},{"location":"feature_selection_py/#corrxxfeatspy3","text":"\u8ba1\u7b97\u7279\u5f81\u53d8\u91cf\u548c\u7279\u5f81\u53d8\u91cf\u4e4b\u95f4\u7684(pearson/spearman/kendall)\u76f8\u5173\u6027\uff0c\u5e76\u901a\u8fc7\u8bbe\u5b9a\u7684\u53c2\u6570\u6765\u6d88\u9664\u5f3a\u76f8\u5173\u7684\u7279\u5f81\u53d8\u91cf","title":"CorrXXFeatSpy3"},{"location":"feature_selection_py/#tag","text":"\u7279\u5f81\u9009\u62e9","title":"Tag:"},{"location":"feature_selection_py/#param","text":"corr_type (string) : corr_threshold (double) : \u6d88\u9664\u5f3a\u76f8\u5173\u65f6\u7684\u9608\u503c","title":"Param:"},{"location":"feature_selection_py/#input","text":"d_feature (csv) o_featrue_label_corr (csv)","title":"Input:"},{"location":"feature_selection_py/#output","text":"d_feature_selected (csv) o_corr_XX (html) o_corr_heatmap (jpg)","title":"Output:"},{"location":"feature_selection_py/#corrxyfeatspy3","text":"\u8ba1\u7b97\u7279\u5f81\u53d8\u91cf\u548c\u6807\u7b7e\u53d8\u91cf\u4e4b\u95f4\u7684\u76f8\u5173\u6027\uff08\u5361\u65b9/\u4e92\u4fe1\u606f/F\u68c0\u9a8c\uff09\uff0c\u5e76\u901a\u8fc7\u8bbe\u5b9a\u7684\u53c2\u6570\u6765\u7b5b\u9009\u76f8\u5e94\u7684\u7279\u5f81\u53d8\u91cf","title":"CorrXYFeatSPy3"},{"location":"feature_selection_py/#tag_1","text":"\u7279\u5f81\u9009\u62e9","title":"Tag:"},{"location":"feature_selection_py/#param_1","text":"feature_percent (int) : sample_rate (double) :","title":"Param:"},{"location":"feature_selection_py/#input_1","text":"d_feature (py3pkl) d_label (py3pkl)","title":"Input:"},{"location":"feature_selection_py/#output_1","text":"d_feature_selected (csv) o_feature_label_corr (csv)","title":"Output:"},{"location":"feature_selection_py/#rfefeatspy3","text":"\u9012\u5f52\u7279\u5f81\u6d88\u9664\u7684\u4e3b\u8981\u601d\u60f3\u662f\u53cd\u590d\u7684\u6784\u5efa\u6a21\u578b\uff08\u5982SVM\u6216\u8005\u56de\u5f52\u6a21\u578b\uff09\u7136\u540e\u9009\u51fa\u6700\u597d\u7684\uff08\u6216\u8005\u6700\u5dee\u7684\uff09\u7684\u7279\u5f81\uff08\u53ef\u4ee5\u6839\u636e\u7cfb\u6570\u6765\u9009\uff09\uff0c\u628a\u9009\u51fa\u6765\u7684\u7279\u5f81\u653e\u5230\u4e00\u8fb9\uff0c\u7136\u540e\u5728\u5269\u4f59\u7684\u7279\u5f81\u4e0a\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u6240\u6709\u7279\u5f81\u90fd\u904d\u5386\u4e86\u3002","title":"RFEFeatSPy3"},{"location":"feature_selection_py/#tag_2","text":"\u7279\u5f81\u9009\u62e9","title":"Tag:"},{"location":"feature_selection_py/#param_2","text":"percent_to_keep (double) : \u4fdd\u7559\u53d8\u91cf\u4e2a\u6570\u767e\u5206\u6bd4","title":"Param:"},{"location":"feature_selection_py/#input_2","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"feature_selection_py/#output_2","text":"d_changed_data (csv) d_rfe_support (html) rfe_cols (py3pkl)","title":"Output:"},{"location":"feature_selection_py/#variancethresholdfitfeatspy3","text":"\u6839\u636e\u65b9\u5dee\u53bb\u6389\u53d6\u503c\u53d8\u5316\u5c0f\u7684\u7279\u5f81\uff0c\u7528\u4e8e\u8bad\u7ec3\u96c6\u6570\u636e\u3002","title":"VarianceThresholdFitFeatSPy3"},{"location":"feature_selection_py/#tag_3","text":"\u7279\u5f81\u9009\u62e9","title":"Tag:"},{"location":"feature_selection_py/#param_3","text":"None","title":"Param:"},{"location":"feature_selection_py/#input_3","text":"d_feature (py3pkl)","title":"Input:"},{"location":"feature_selection_py/#output_3","text":"d_changed_data (py3pkl) model (py3pkl)","title":"Output:"},{"location":"feature_selection_py/#variancethresholdtransformfeatspy3","text":"\u53bb\u6389\u53d6\u503c\u53d8\u5316\u5c0f\u7684\u7279\u5f81\uff0c\u7528\u4e8e\u6d4b\u8bd5\u96c6\u6570\u636e\u3002","title":"VarianceThresholdTransformFeatSPy3"},{"location":"feature_selection_py/#tag_4","text":"\u7279\u5f81\u9009\u62e9","title":"Tag:"},{"location":"feature_selection_py/#param_4","text":"None","title":"Param:"},{"location":"feature_selection_py/#input_4","text":"model (py3pkl) d_feature (py3pkl)","title":"Input:"},{"location":"feature_selection_py/#output_4","text":"d_changed_data (py3pkl)","title":"Output:"},{"location":"hyperparameters_tuning_py/","text":"RandomizedSearchSPy3_1 \u968f\u673a\u641c\u7d22\u4ea4\u53c9\u9a8c\u8bc1\u8c03\u53c2 Tag: \u6a21\u578b\u8c03\u53c2 Param: n_iter_search (int) : \u8fd0\u884c\u968f\u673a\u641c\u7d22\u7684\u6b21\u6570 model (string) : \u8f93\u5165\u6a21\u578b\u56e0\u5b50\uff0c\u4f8b\u5982RandomForestClassifier(n_estimators=20) param_dist (string) : \u586b\u5165\u9700\u8981\u968f\u673a\u641c\u7d22\u7684\u53c2\u6570 whether_param_search (int) : \u9009\u62e9\u662f\u5426\u9700\u8981\u8fdb\u884c\u968f\u673a\u641c\u7d22\uff0c\u5982\u679c\u503c\u4e3a0, \u5219\u4e0d\u8fdb\u884c\u641c\u7d22\uff0c\u76f4\u63a5\u8f93\u51fa\u6a21\u578b\u3002 Input: d_feature (csv) d_label (csv) Output: best_params (txt) best_model (py3pkl) best_model_txt (txt)","title":"\u6a21\u578b\u8c03\u53c2"},{"location":"hyperparameters_tuning_py/#randomizedsearchspy3_1","text":"\u968f\u673a\u641c\u7d22\u4ea4\u53c9\u9a8c\u8bc1\u8c03\u53c2","title":"RandomizedSearchSPy3_1"},{"location":"hyperparameters_tuning_py/#tag","text":"\u6a21\u578b\u8c03\u53c2","title":"Tag:"},{"location":"hyperparameters_tuning_py/#param","text":"n_iter_search (int) : \u8fd0\u884c\u968f\u673a\u641c\u7d22\u7684\u6b21\u6570 model (string) : \u8f93\u5165\u6a21\u578b\u56e0\u5b50\uff0c\u4f8b\u5982RandomForestClassifier(n_estimators=20) param_dist (string) : \u586b\u5165\u9700\u8981\u968f\u673a\u641c\u7d22\u7684\u53c2\u6570 whether_param_search (int) : \u9009\u62e9\u662f\u5426\u9700\u8981\u8fdb\u884c\u968f\u673a\u641c\u7d22\uff0c\u5982\u679c\u503c\u4e3a0, \u5219\u4e0d\u8fdb\u884c\u641c\u7d22\uff0c\u76f4\u63a5\u8f93\u51fa\u6a21\u578b\u3002","title":"Param:"},{"location":"hyperparameters_tuning_py/#input","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"hyperparameters_tuning_py/#output","text":"best_params (txt) best_model (py3pkl) best_model_txt (txt)","title":"Output:"},{"location":"metrics_py/","text":"ClasEvalNewSPy3 \u5bf9\u4e8c\u5206\u7c7b\u53ca\u591a\u5206\u7c7b\u6a21\u578b\u8fdb\u884c\u8bc4\u4f30\uff08\u5305\u62ecAUC\uff0cKappa\uff0c\u8bc4\u4f30\u62a5\u544a\u53ca\u6df7\u6dc6\u77e9\u9635\u7b49\uff09 Tag: \u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316 Param: None Input: d_true (csv) d_pred (csv) d_prob (csv) Output: o_metric (csv) o_classification_report (txt) o_confusion_matrix (jpg) ClasRocEvalSPy3a \u8f93\u51fa\u5206\u7c7b\u6a21\u578b\u7684ROC\u66f2\u7ebf Tag: \u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316 Param: None Input: d_feature (csv) d_label (csv) m_fitted_model (py3pkl) Output: o_roc_curve (jpg) PlotLearningCurveSPy3_BestModel \u753b\u51fa\u5b66\u4e60\u66f2\u7ebf\uff0c\u6839\u636e\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u5206\u6570\u5224\u65ad\u662f\u5426\u8fc7\u62df\u5408\u6216\u6b20\u62df\u5408\u3002 Tag: \u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316 Param: n_jobs (int) : Number of jobs to run in parallel n_splits (int) : \u4ea4\u53c9\u9a8c\u8bc1\u65f6\u4f7f\u7528\u6298\u6570 test_size (double) : \u9a8c\u8bc1\u96c6\u767e\u5206\u6bd4 Input: d_feature (csv) d_label (csv) best_model (py3pkl) Output: learning_curve (jpg) PlotLearningCurveSPy3 \u753b\u51fa\u5b66\u4e60\u66f2\u7ebf\uff0c\u6839\u636e\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u5206\u6570\u5224\u65ad\u662f\u5426\u8fc7\u62df\u5408\u6216\u6b20\u62df\u5408\u3002 Tag: \u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316 Param: n_jobs (int) : Number of jobs to run in parallel n_splits (int) : \u4ea4\u53c9\u9a8c\u8bc1\u65f6\u4f7f\u7528\u6298\u6570 test_size (double) : \u9a8c\u8bc1\u96c6\u767e\u5206\u6bd4 model (string) : \u8f93\u5165\u6a21\u578bestimator, \u4f8b\u5982GaussianNB() Input: d_feature (csv) d_label (csv) Output: learning_curve (jpg) RegrEvalSPy3_Anaconda \u5bf9\u56de\u5f52\u6a21\u578b\u8fdb\u884c\u8bc4\u4f30\uff08\u5305\u62ecmae,mse,r2\u7b49\uff09 Tag: \u6a21\u578b\u8bc4\u4f30 Param: multioutput (string) : \u8ba1\u5206\u7b97\u6cd5 Input: d_true (csv) d_pred (csv) Output: o_metric (csv) ReportPDFClasEvalSPy3 \u8f93\u51fa\u5206\u7c7b\u8bc4\u4f30\u62a5\u544a Tag: \u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316 Param: None Input: o_metric (csv) o_classification_report (txt) o_confusion_matrix (jpg) o_roc_curve (jpg) o_metric_2 (csv) o_classification_report_2 (txt) o_confusion_matrix_2 (jpg) o_roc_curve_2 (jpg) Output: evaluation_report (pdf) ScoresSendSPy3 \u53d1\u9001\u8bc4\u4f30\u6570\u636e Tag: \u6a21\u578b\u8bc4\u4f30 Param: None Input: Scores (csv) model (any) Output: modelScores (py3pkl)","title":"\u6a21\u578b\u8bc4\u4f30"},{"location":"metrics_py/#clasevalnewspy3","text":"\u5bf9\u4e8c\u5206\u7c7b\u53ca\u591a\u5206\u7c7b\u6a21\u578b\u8fdb\u884c\u8bc4\u4f30\uff08\u5305\u62ecAUC\uff0cKappa\uff0c\u8bc4\u4f30\u62a5\u544a\u53ca\u6df7\u6dc6\u77e9\u9635\u7b49\uff09","title":"ClasEvalNewSPy3"},{"location":"metrics_py/#tag","text":"\u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316","title":"Tag:"},{"location":"metrics_py/#param","text":"None","title":"Param:"},{"location":"metrics_py/#input","text":"d_true (csv) d_pred (csv) d_prob (csv)","title":"Input:"},{"location":"metrics_py/#output","text":"o_metric (csv) o_classification_report (txt) o_confusion_matrix (jpg)","title":"Output:"},{"location":"metrics_py/#clasrocevalspy3a","text":"\u8f93\u51fa\u5206\u7c7b\u6a21\u578b\u7684ROC\u66f2\u7ebf","title":"ClasRocEvalSPy3a"},{"location":"metrics_py/#tag_1","text":"\u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316","title":"Tag:"},{"location":"metrics_py/#param_1","text":"None","title":"Param:"},{"location":"metrics_py/#input_1","text":"d_feature (csv) d_label (csv) m_fitted_model (py3pkl)","title":"Input:"},{"location":"metrics_py/#output_1","text":"o_roc_curve (jpg)","title":"Output:"},{"location":"metrics_py/#plotlearningcurvespy3_bestmodel","text":"\u753b\u51fa\u5b66\u4e60\u66f2\u7ebf\uff0c\u6839\u636e\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u5206\u6570\u5224\u65ad\u662f\u5426\u8fc7\u62df\u5408\u6216\u6b20\u62df\u5408\u3002","title":"PlotLearningCurveSPy3_BestModel"},{"location":"metrics_py/#tag_2","text":"\u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316","title":"Tag:"},{"location":"metrics_py/#param_2","text":"n_jobs (int) : Number of jobs to run in parallel n_splits (int) : \u4ea4\u53c9\u9a8c\u8bc1\u65f6\u4f7f\u7528\u6298\u6570 test_size (double) : \u9a8c\u8bc1\u96c6\u767e\u5206\u6bd4","title":"Param:"},{"location":"metrics_py/#input_2","text":"d_feature (csv) d_label (csv) best_model (py3pkl)","title":"Input:"},{"location":"metrics_py/#output_2","text":"learning_curve (jpg)","title":"Output:"},{"location":"metrics_py/#plotlearningcurvespy3","text":"\u753b\u51fa\u5b66\u4e60\u66f2\u7ebf\uff0c\u6839\u636e\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u5206\u6570\u5224\u65ad\u662f\u5426\u8fc7\u62df\u5408\u6216\u6b20\u62df\u5408\u3002","title":"PlotLearningCurveSPy3"},{"location":"metrics_py/#tag_3","text":"\u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316","title":"Tag:"},{"location":"metrics_py/#param_3","text":"n_jobs (int) : Number of jobs to run in parallel n_splits (int) : \u4ea4\u53c9\u9a8c\u8bc1\u65f6\u4f7f\u7528\u6298\u6570 test_size (double) : \u9a8c\u8bc1\u96c6\u767e\u5206\u6bd4 model (string) : \u8f93\u5165\u6a21\u578bestimator, \u4f8b\u5982GaussianNB()","title":"Param:"},{"location":"metrics_py/#input_3","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"metrics_py/#output_3","text":"learning_curve (jpg)","title":"Output:"},{"location":"metrics_py/#regrevalspy3_anaconda","text":"\u5bf9\u56de\u5f52\u6a21\u578b\u8fdb\u884c\u8bc4\u4f30\uff08\u5305\u62ecmae,mse,r2\u7b49\uff09","title":"RegrEvalSPy3_Anaconda"},{"location":"metrics_py/#tag_4","text":"\u6a21\u578b\u8bc4\u4f30","title":"Tag:"},{"location":"metrics_py/#param_4","text":"multioutput (string) : \u8ba1\u5206\u7b97\u6cd5","title":"Param:"},{"location":"metrics_py/#input_4","text":"d_true (csv) d_pred (csv)","title":"Input:"},{"location":"metrics_py/#output_4","text":"o_metric (csv)","title":"Output:"},{"location":"metrics_py/#reportpdfclasevalspy3","text":"\u8f93\u51fa\u5206\u7c7b\u8bc4\u4f30\u62a5\u544a","title":"ReportPDFClasEvalSPy3"},{"location":"metrics_py/#tag_5","text":"\u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316","title":"Tag:"},{"location":"metrics_py/#param_5","text":"None","title":"Param:"},{"location":"metrics_py/#input_5","text":"o_metric (csv) o_classification_report (txt) o_confusion_matrix (jpg) o_roc_curve (jpg) o_metric_2 (csv) o_classification_report_2 (txt) o_confusion_matrix_2 (jpg) o_roc_curve_2 (jpg)","title":"Input:"},{"location":"metrics_py/#output_5","text":"evaluation_report (pdf)","title":"Output:"},{"location":"metrics_py/#scoressendspy3","text":"\u53d1\u9001\u8bc4\u4f30\u6570\u636e","title":"ScoresSendSPy3"},{"location":"metrics_py/#tag_6","text":"\u6a21\u578b\u8bc4\u4f30","title":"Tag:"},{"location":"metrics_py/#param_6","text":"None","title":"Param:"},{"location":"metrics_py/#input_6","text":"Scores (csv) model (any)","title":"Input:"},{"location":"metrics_py/#output_6","text":"modelScores (py3pkl)","title":"Output:"},{"location":"model_release_py/","text":"PmmlClasSPy3 \u5c06\u8bad\u7ec3\u540e\u7684\u6a21\u578b\u4fdd\u5b58\u4e3aPMML\u683c\u5f0f\u53d1\u5e03 Tag: \u6a21\u578b\u53d1\u5e03 Param: None Input: m_fitted_model (py3pkl) Output: m_selected_fitted_model (pmml)","title":"\u6a21\u578b\u53d1\u5e03"},{"location":"model_release_py/#pmmlclasspy3","text":"\u5c06\u8bad\u7ec3\u540e\u7684\u6a21\u578b\u4fdd\u5b58\u4e3aPMML\u683c\u5f0f\u53d1\u5e03","title":"PmmlClasSPy3"},{"location":"model_release_py/#tag","text":"\u6a21\u578b\u53d1\u5e03","title":"Tag:"},{"location":"model_release_py/#param","text":"None","title":"Param:"},{"location":"model_release_py/#input","text":"m_fitted_model (py3pkl)","title":"Input:"},{"location":"model_release_py/#output","text":"m_selected_fitted_model (pmml)","title":"Output:"},{"location":"model_release_pyspark/","text":"PipelineFitDPy3 \u8bfb\u5165\u7ba1\u9053\u5e76\u6839\u636e\u6570\u636e\u8bad\u7ec3\u51fa\u7ba1\u9053\u6a21\u578b Tag: \u6a21\u578b\u53d1\u5e03_\u5206\u5e03\u5f0f Param: None Input: in1 (json) in2 (any) Output: out1 (any) spark2pmmlDPy3 \u6a21\u578b\u8f6c\u6362\u4e3apmml\u683c\u5f0f Tag: \u6a21\u578b\u53d1\u5e03_\u5206\u5e03\u5f0f Param: None Input: in1 (any) in2 (model.pkl) Output: out1 (any)","title":"\u6a21\u578b\u53d1\u5e03"},{"location":"model_release_pyspark/#pipelinefitdpy3","text":"\u8bfb\u5165\u7ba1\u9053\u5e76\u6839\u636e\u6570\u636e\u8bad\u7ec3\u51fa\u7ba1\u9053\u6a21\u578b","title":"PipelineFitDPy3"},{"location":"model_release_pyspark/#tag","text":"\u6a21\u578b\u53d1\u5e03_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"model_release_pyspark/#param","text":"None","title":"Param:"},{"location":"model_release_pyspark/#input","text":"in1 (json) in2 (any)","title":"Input:"},{"location":"model_release_pyspark/#output","text":"out1 (any)","title":"Output:"},{"location":"model_release_pyspark/#spark2pmmldpy3","text":"\u6a21\u578b\u8f6c\u6362\u4e3apmml\u683c\u5f0f","title":"spark2pmmlDPy3"},{"location":"model_release_pyspark/#tag_1","text":"\u6a21\u578b\u53d1\u5e03_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"model_release_pyspark/#param_1","text":"None","title":"Param:"},{"location":"model_release_pyspark/#input_1","text":"in1 (any) in2 (model.pkl)","title":"Input:"},{"location":"model_release_pyspark/#output_1","text":"out1 (any)","title":"Output:"},{"location":"model_selection_hyperparameters_tuning_pyspark/","text":"ParamSearchCVDPy3 \u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u641c\u7d22\u53c2\u6570 Tag: \u6a21\u578b\u9009\u62e9\u53ca\u8c03\u53c2_\u5206\u5e03\u5f0f Param: CV (int) : \u4ea4\u53c9\u9a8c\u8bc1K\u503c Params (string) : \u53c2\u6570\u5b57\u5178 Evaluator (string) : Input: Estimator (any) DataFrame (any) Output: out1 (any) ParamSearchTVSPy3 \u901a\u8fc7\u7559\u51fa\u6cd5\u641c\u7d22\u53c2\u6570 Tag: \u6a21\u578b\u9009\u62e9\u53ca\u8c03\u53c2_\u5206\u5e03\u5f0f Param: CV (int) : \u4ea4\u53c9\u9a8c\u8bc1K\u503c Params (string) : \u53c2\u6570\u5b57\u5178 Evaluator (string) : Input: Estimator (any) DataFrame (any) Output: out1 (any)","title":"\u6a21\u578b\u9009\u62e9\u53ca\u8c03\u53c2"},{"location":"model_selection_hyperparameters_tuning_pyspark/#paramsearchcvdpy3","text":"\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u641c\u7d22\u53c2\u6570","title":"ParamSearchCVDPy3"},{"location":"model_selection_hyperparameters_tuning_pyspark/#tag","text":"\u6a21\u578b\u9009\u62e9\u53ca\u8c03\u53c2_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"model_selection_hyperparameters_tuning_pyspark/#param","text":"CV (int) : \u4ea4\u53c9\u9a8c\u8bc1K\u503c Params (string) : \u53c2\u6570\u5b57\u5178 Evaluator (string) :","title":"Param:"},{"location":"model_selection_hyperparameters_tuning_pyspark/#input","text":"Estimator (any) DataFrame (any)","title":"Input:"},{"location":"model_selection_hyperparameters_tuning_pyspark/#output","text":"out1 (any)","title":"Output:"},{"location":"model_selection_hyperparameters_tuning_pyspark/#paramsearchtvspy3","text":"\u901a\u8fc7\u7559\u51fa\u6cd5\u641c\u7d22\u53c2\u6570","title":"ParamSearchTVSPy3"},{"location":"model_selection_hyperparameters_tuning_pyspark/#tag_1","text":"\u6a21\u578b\u9009\u62e9\u53ca\u8c03\u53c2_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"model_selection_hyperparameters_tuning_pyspark/#param_1","text":"CV (int) : \u4ea4\u53c9\u9a8c\u8bc1K\u503c Params (string) : \u53c2\u6570\u5b57\u5178 Evaluator (string) :","title":"Param:"},{"location":"model_selection_hyperparameters_tuning_pyspark/#input_1","text":"Estimator (any) DataFrame (any)","title":"Input:"},{"location":"model_selection_hyperparameters_tuning_pyspark/#output_1","text":"out1 (any)","title":"Output:"},{"location":"prediction_metrics_pyspark/","text":"ModelEvaluateDPy3 \u6a21\u578b\u8bc4\u4f30\u5e76\u5c06\u8bc4\u4f30\u5206\u6570\u53d1\u9001\u5230MLServer Tag: \u6a21\u578b\u9884\u6d4b\u53ca\u8bc4\u4f30_\u5206\u5e03\u5f0f Param: label (string) : \u5b9a\u4e49\u6807\u7b7e\u53d8\u91cf Input: in1 (any) Output: out1 (any) ModelPredictDPy3_19 \u6a21\u578b\u9884\u6d4b Tag: \u6a21\u578b\u9884\u6d4b\u53ca\u8bc4\u4f30_\u5206\u5e03\u5f0f Param: None Input: in1 (any) in2 (model.pkl) Output: None ModelPredictDPy3_1 \u6a21\u578b\u9884\u6d4b https://github.com/DataCanvasIO/datacanvas-modules/blob/master/doc/APS2.5_modules.md#ModelPred_pyspark Tag: \u6a21\u578b\u9884\u6d4b\u53ca\u8bc4\u4f30_\u5206\u5e03\u5f0f Param: None Input: in1 (any) in2 (model.pkl) Output: out1 (any) ModelPredictDPy3 \u6a21\u578b\u9884\u6d4b Tag: \u6a21\u578b\u9884\u6d4b\u53ca\u8bc4\u4f30_\u5206\u5e03\u5f0f Param: None Input: in1 (any) in2 (model.pkl) Output: out1 (any)","title":"\u6a21\u578b\u9884\u6d4b\u53ca\u8bc4\u4f30"},{"location":"prediction_metrics_pyspark/#modelevaluatedpy3","text":"\u6a21\u578b\u8bc4\u4f30\u5e76\u5c06\u8bc4\u4f30\u5206\u6570\u53d1\u9001\u5230MLServer","title":"ModelEvaluateDPy3"},{"location":"prediction_metrics_pyspark/#tag","text":"\u6a21\u578b\u9884\u6d4b\u53ca\u8bc4\u4f30_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"prediction_metrics_pyspark/#param","text":"label (string) : \u5b9a\u4e49\u6807\u7b7e\u53d8\u91cf","title":"Param:"},{"location":"prediction_metrics_pyspark/#input","text":"in1 (any)","title":"Input:"},{"location":"prediction_metrics_pyspark/#output","text":"out1 (any)","title":"Output:"},{"location":"prediction_metrics_pyspark/#modelpredictdpy3_19","text":"\u6a21\u578b\u9884\u6d4b","title":"ModelPredictDPy3_19"},{"location":"prediction_metrics_pyspark/#tag_1","text":"\u6a21\u578b\u9884\u6d4b\u53ca\u8bc4\u4f30_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"prediction_metrics_pyspark/#param_1","text":"None","title":"Param:"},{"location":"prediction_metrics_pyspark/#input_1","text":"in1 (any) in2 (model.pkl)","title":"Input:"},{"location":"prediction_metrics_pyspark/#output_1","text":"None","title":"Output:"},{"location":"prediction_metrics_pyspark/#modelpredictdpy3_1","text":"\u6a21\u578b\u9884\u6d4b https://github.com/DataCanvasIO/datacanvas-modules/blob/master/doc/APS2.5_modules.md#ModelPred_pyspark","title":"ModelPredictDPy3_1"},{"location":"prediction_metrics_pyspark/#tag_2","text":"\u6a21\u578b\u9884\u6d4b\u53ca\u8bc4\u4f30_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"prediction_metrics_pyspark/#param_2","text":"None","title":"Param:"},{"location":"prediction_metrics_pyspark/#input_2","text":"in1 (any) in2 (model.pkl)","title":"Input:"},{"location":"prediction_metrics_pyspark/#output_2","text":"out1 (any)","title":"Output:"},{"location":"prediction_metrics_pyspark/#modelpredictdpy3","text":"\u6a21\u578b\u9884\u6d4b","title":"ModelPredictDPy3"},{"location":"prediction_metrics_pyspark/#tag_3","text":"\u6a21\u578b\u9884\u6d4b\u53ca\u8bc4\u4f30_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"prediction_metrics_pyspark/#param_3","text":"None","title":"Param:"},{"location":"prediction_metrics_pyspark/#input_3","text":"in1 (any) in2 (model.pkl)","title":"Input:"},{"location":"prediction_metrics_pyspark/#output_3","text":"out1 (any)","title":"Output:"},{"location":"prediction_py/","text":"ClasPredictSPy3 \u901a\u8fc7\u5df2\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u8fdb\u884c\u9884\u6d4b Tag: \u6a21\u578b\u9884\u6d4b Param: None Input: d_feature (csv) m_fitted_model (py3pkl) Output: d_predict (csv) d_pred (csv) d_prob (csv) LogisticPredSPy3 \u4f7f\u7528\u8bad\u7ec3\u597d\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\u8fdb\u884c\u9884\u6d4b (\u5728\u539f\u6709\u9884\u6d4b\u6570\u636e\u4e0a\u8981\u5148\u6dfb\u52a0\u622a\u8ddd) Tag: \u6a21\u578b\u9884\u6d4b Param: None Input: d_data1 (csv) cols (py3pkl) m_fitted_model (py3pkl) Output: d_pred (csv) d_prob (csv) d_feature (csv) StackingPredictSPy3 \u6839\u636e\u8bad\u7ec3\u597d\u7684Stacking\u6a21\u578b\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u6d4b Tag: \u6a21\u578b\u9884\u6d4b Param: None Input: d_feature (csv) m_fitted_model (py3pkl) Output: d_predict (csv) d_pred (csv) d_prob (csv)","title":"\u6a21\u578b\u9884\u6d4b"},{"location":"prediction_py/#claspredictspy3","text":"\u901a\u8fc7\u5df2\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u8fdb\u884c\u9884\u6d4b","title":"ClasPredictSPy3"},{"location":"prediction_py/#tag","text":"\u6a21\u578b\u9884\u6d4b","title":"Tag:"},{"location":"prediction_py/#param","text":"None","title":"Param:"},{"location":"prediction_py/#input","text":"d_feature (csv) m_fitted_model (py3pkl)","title":"Input:"},{"location":"prediction_py/#output","text":"d_predict (csv) d_pred (csv) d_prob (csv)","title":"Output:"},{"location":"prediction_py/#logisticpredspy3","text":"\u4f7f\u7528\u8bad\u7ec3\u597d\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\u8fdb\u884c\u9884\u6d4b (\u5728\u539f\u6709\u9884\u6d4b\u6570\u636e\u4e0a\u8981\u5148\u6dfb\u52a0\u622a\u8ddd)","title":"LogisticPredSPy3"},{"location":"prediction_py/#tag_1","text":"\u6a21\u578b\u9884\u6d4b","title":"Tag:"},{"location":"prediction_py/#param_1","text":"None","title":"Param:"},{"location":"prediction_py/#input_1","text":"d_data1 (csv) cols (py3pkl) m_fitted_model (py3pkl)","title":"Input:"},{"location":"prediction_py/#output_1","text":"d_pred (csv) d_prob (csv) d_feature (csv)","title":"Output:"},{"location":"prediction_py/#stackingpredictspy3","text":"\u6839\u636e\u8bad\u7ec3\u597d\u7684Stacking\u6a21\u578b\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u6d4b","title":"StackingPredictSPy3"},{"location":"prediction_py/#tag_2","text":"\u6a21\u578b\u9884\u6d4b","title":"Tag:"},{"location":"prediction_py/#param_2","text":"None","title":"Param:"},{"location":"prediction_py/#input_2","text":"d_feature (csv) m_fitted_model (py3pkl)","title":"Input:"},{"location":"prediction_py/#output_2","text":"d_predict (csv) d_pred (csv) d_prob (csv)","title":"Output:"},{"location":"preprocessing_py/","text":"ChiMergeDataSPy3 \u5361\u65b9\u5206\u7bb1\u6cd5\uff1a\u81ea\u4f4e\u5411\u4e0a\u7684(\u5373\u57fa\u4e8e\u5408\u5e76\u7684)\u6570\u636e\u79bb\u6563\u5316\u65b9\u6cd5\u3002\u5b83\u4f9d\u8d56\u4e8e\u5361\u65b9\u68c0\u9a8c\uff1a\u5177\u6709\u6700\u5c0f\u5361\u65b9\u503c\u7684\u76f8\u90bb\u533a\u95f4\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u76f4\u5230\u6ee1\u8db3\u786e\u5b9a\u7684\u505c\u6b62\u51c6\u5219\u3002 \u57fa\u672c\u601d\u60f3\uff1a\u5bf9\u4e8e\u7cbe\u786e\u7684\u79bb\u6563\u5316\uff0c\u76f8\u5bf9\u7c7b\u9891\u7387\u5728\u4e00\u4e2a\u533a\u95f4\u5185\u5e94\u5f53\u5b8c\u5168\u4e00\u81f4\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4e24\u4e2a\u76f8\u90bb\u7684\u533a\u95f4\u5177\u6709\u975e\u5e38\u7c7b\u4f3c\u7684\u7c7b\u5206\u5e03\uff0c\u5219\u8fd9\u4e24\u4e2a\u533a\u95f4\u53ef\u4ee5\u5408\u5e76\uff1b\u5426\u5219\uff0c\u5b83\u4eec\u5e94\u5f53\u4fdd\u6301\u5206\u5f00\u3002\u800c\u4f4e\u5361\u65b9\u503c\u8868\u660e\u5b83\u4eec\u5177\u6709\u76f8\u4f3c\u7684\u7c7b\u5206\u5e03\u3002 Tag: \u6570\u636e\u9884\u5904\u7406 Param: label (string) : \u5b9a\u4e49\u6807\u7b7e\u53d8\u91cf Input: d_data1 (py3pkl) Output: d_data2 (py3pkl) all_var (py3pkl) DummyFitDataSPy3 \u5bf9\u6570\u636e\u505a\u54d1\u7f16\u7801\u8f6c\u5316(\u8bad\u7ec3\u6570\u636e\u65f6\u4f7f\u7528) Tag: \u6570\u636e\u9884\u5904\u7406 Param: None Input: d_data (py3pkl) Output: d_dummy_data (py3pkl) cols (py3pkl) DummyTransformDataSPy3 \u5bf9\u6570\u636e\u505a\u54d1\u7f16\u7801\u8f6c\u5316(\u5c06\u6570\u636e\u8f6c\u5316\u4e3a\u540c\u8bad\u7ec3\u6570\u636e\u76f8\u540c\u7684\u53d8\u91cf) Tag: \u6570\u636e\u9884\u5904\u7406 Param: None Input: d_data (py3pkl) cols (py3pkl) Output: d_dummy_data (py3pkl) ImbalanceDataSPy3 \u5bf9\u6570\u636e\u8fdb\u884c\u8fc7\u91c7\u6837\u5904\u7406 Tag: \u6570\u636e\u9884\u5904\u7406 Param: None Input: X (csv) Y (csv) Output: x_resampled (csv) y_resampled (csv) LabelEncoderDataSPy3 \u5bf9\u7c7b\u522b\u578b\u6587\u672c\u53d8\u91cf\u8fdb\u884c\u7f16\u7801 Tag: \u6570\u636e\u9884\u5904\u7406 Param: col (string) : \u6570\u636e\u4e2d\u9700\u8981\u66f4\u6539\u6210\u865a\u62df\u53d8\u91cf\u7684\u539f\u5217 signal (int) : \u9009\u62e9\u662f\u5426\u6309\u7167\u6570\u636e\u7c7b\u578b\u81ea\u52a8\u8f6c\u6362 Input: d_data (py3pkl) Output: d_changed_data (py3pkl) MinMaxScalerFitDataSPy3 \u5bf9\u8fde\u7eed\u578b\u53d8\u91cf\u8fdb\u884c\u5f52\u4e00\u5316\u5904\u7406, \u4f7f\u7528\u8fd9\u79cd\u7f29\u653e\u7684\u76ee\u7684\u5305\u62ec\u5b9e\u73b0\u7279\u5f81\u6781\u5c0f\u65b9\u5dee\u7684\u9c81\u68d2\u6027\u4ee5\u53ca\u5728\u7a00\u758f\u77e9\u9635\u4e2d\u4fdd\u7559\u96f6\u5143\u7d20\u3002\u9002\u7528\u4e8e\u8bad\u7ec3\u6570\u636e\u3002 Tag: \u6570\u636e\u9884\u5904\u7406 Param: None Input: d_data (py3pkl) Output: d_changed_data (py3pkl) m_minmax_model (py3pkl) MinMaxScalerTransformDataSPy3 \u5bf9\u8fde\u7eed\u578b\u53d8\u91cf\u8fdb\u884c\u5f52\u4e00\u5316\u5904\u7406, \u4f7f\u7528\u8fd9\u79cd\u7f29\u653e\u7684\u76ee\u7684\u5305\u62ec\u5b9e\u73b0\u7279\u5f81\u6781\u5c0f\u65b9\u5dee\u7684\u9c81\u68d2\u6027\u4ee5\u53ca\u5728\u7a00\u758f\u77e9\u9635\u4e2d\u4fdd\u7559\u96f6\u5143\u7d20\u3002\u9002\u7528\u4e8e\u6d4b\u8bd5\u6570\u636e\u3002 Tag: \u6570\u636e\u9884\u5904\u7406 Param: None Input: d_data (py3pkl) model (py3pkl) Output: d_changed_data (py3pkl) MissingDropDataSPy3 \u5220\u9664\u62e5\u6709\u552f\u4e00\u503c\u7684\u5b57\u6bb5\uff1b\u5220\u9664\u7f3a\u5931\u767e\u5206\u6bd4\u5927\u4e8e\u4e00\u5b9a\u6bd4\u7387\u7684\u5b57\u6bb5(\u7c7b\u522b\u53d8\u91cf\u5927\u4e8e30%\uff0c\u8fde\u7eed\u53d8\u91cf\u5927\u4e8e60%)\u3002 Tag: \u6570\u636e\u9884\u5904\u7406 Param: percent_obj (int) : percent_non_obj (int) : percent_unique (double) : Input: d_data (py3pkl) Output: d_changed_data (py3pkl) MissingFillDataSPy3 \u5c0f\u6bd4\u4f8b\u7f3a\u5931\u503c\u7528\u4f17\u6570\u6216\u4e2d\u4f4d\u6570\u586b\u5145\u3002 Tag: \u6570\u636e\u9884\u5904\u7406 Param: percent_obj (int) : percent_non_obj (int) : Input: d_data (py3pkl) Output: d_changed_data (py3pkl) MissingImputeDataSPy3 \u7528\u4f20\u64ad\u7b97\u6cd5\u5bf9\u7f3a\u5931\u503c\u8fdb\u884c\u586b\u5145 Tag: \u6570\u636e\u9884\u5904\u7406 Param: lower_null_percent_object (int) : upper_null_percent_object (int) : lower_null_percent_nonobject (int) : upper_null_percent_nonobject (int) : Input: d_data (py3pkl) Output: d_changed_data (py3pkl) OneHotEncoderDataSPy3 \u5c06\u6570\u636e\u8f6c\u5316\u4e3a\u865a\u62df\u6570\u636e\uff0c\u5373\u5c06\u6570\u636e\u62c6\u5206\u4e3a\u591a\u4e2a\u4ee50\u62161\u8868\u793a\u7684\u5217 Tag: \u6570\u636e\u9884\u5904\u7406 Param: None Input: d_data (py3pkl) Output: d_changed_data (py3pkl) QuantileTrasformerDataSPy3 \u5206\u4f4d\u6570\u8f6c\u6362\u7684\u76ee\u7684\u662f\u628a\u7279\u5f81\u6570\u636e\u8f6c\u6362\u5230\u4e00\u5b9a\u7684\u8303\u56f4\u5185, \u6216\u8005\u8ba9\u4ed6\u4eec\u7b26\u5408\u4e00\u5b9a\u7684\u5206\u5e03\u3002\u5206\u4f4d\u6570\u8f6c\u6362\u5229\u7528\u7684\u662f\u6570\u636e\u7684\u5206\u4f4d\u6570\u4fe1\u606f\u8fdb\u884c\u53d8\u6362\u3002 \u5b83\u80fd\u591f\u5e73\u6ed1\u90a3\u4e9b\u5f02\u5e38\u5206\u5e03\uff0c\u5bf9\u4e8e\u5b58\u5728\u5f02\u5e38\u70b9\u7684\u6570\u636e\u4e5f\u5f88\u9002\u5408\u3002\u4f46\u662f\u5b83\u4f1a\u7834\u8bdd\u539f\u6765\u6570\u636e\u7684\u76f8\u5173\u6027\u548c\u8ddd\u79bb\u4fe1\u606f Tag: \u6570\u636e\u9884\u5904\u7406 Param: n_quantiles (int) : \u8ba1\u7b97\u6240\u7528\u7684\u5206\u4f4d\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a1000 output_distribution (string) : \u6362\u6570\u636e\u9075\u5faa\u7684\u5206\u5e03\u51fd\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3auniform ignore_implicit_zeros (string) : \u53ea\u9488\u5bf9\u7a00\u758f\u77e9\u9635\uff0c\u9ed8\u8ba4\u503c\u4e3aFalse\uff0c\u5f53\u4e3aTrue\u65f6\uff0c\u5219\u5728\u8ba1\u7b97\u5206\u4f4d\u6570\u65f6\u7a00\u758f\u77e9\u9635\u4e2d\u7684\u7a00\u758f\u6761\u76ee\u5c06\u88ab\u5ffd\u7565 subsample (int) : \u7528\u4e8e\u8ba1\u7b97\u6709\u6548\u5206\u4e3a\u6570\u7684\u6700\u5927\u6837\u672c\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a100000 copy (string) : Input: d_data (py3pkl) Output: d_changed_data (py3pkl) transformer (py3pkl) WOE_IV_DataSPy3 IV\u7684\u5168\u79f0\u662fInformation Value\uff0c\u4e2d\u6587\u610f\u601d\u662f\u4fe1\u606f\u4ef7\u503c\uff0c\u6216\u8005\u4fe1\u606f\u91cf\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u5177\u4f53\u7684\u91cf\u5316\u6307\u6807\u6765\u8861\u91cf\u6bcf\u4e2a\u81ea\u53d8\u91cf\u7684\u9884\u6d4b\u80fd\u529b\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u91cf\u5316\u6307\u6807\u7684\u5927\u5c0f\uff0c\u6765\u786e\u5b9a\u54ea\u4e9b\u53d8\u91cf\u8fdb\u5165\u6a21\u578b\u3002IV\u5c31\u662f\u8fd9\u6837\u4e00\u79cd\u6307\u6807\uff0c\u4ed6\u53ef\u4ee5\u7528\u6765\u8861\u91cf\u81ea\u53d8\u91cf\u7684\u9884\u6d4b\u80fd\u529b\u3002\u7c7b\u4f3c\u7684\u6307\u6807\u8fd8\u6709\u4fe1\u606f\u589e\u76ca\u3001\u57fa\u5c3c\u7cfb\u6570\u7b49\u7b49\u3002\u9ad8IV\u8868\u793a\u8be5\u7279\u5f81\u548c\u76ee\u6807\u53d8\u91cf\u7684\u5173\u8054\u5ea6\u9ad8\uff1b\u76ee\u6807\u53d8\u91cf\u53ea\u80fd\u662f\u4e8c\u5206\u7c7b\uff1b\u7279\u5f81\u5206\u7bb1\u8d8a\u7ec6\uff0cIV\u8d8a\u9ad8\u3002 WOE\u7684\u5168\u79f0\u662f\u201cWeight of Evidence\u201d\uff0c\u5373\u8bc1\u636e\u6743\u91cd\u3002WOE\u662f\u5bf9\u539f\u59cb\u81ea\u53d8\u91cf\u7684\u4e00\u79cd\u7f16\u7801\u5f62\u5f0f\u3002WOE\u8868\u793a\u7684\u5b9e\u9645\u4e0a\u662f\u201c\u5f53\u524d\u5206\u7ec4\u4e2d\u54cd\u5e94\u5ba2\u6237\u5360\u6240\u6709\u54cd\u5e94\u5ba2\u6237\u7684\u6bd4\u4f8b\u201d\u548c\u201c\u5f53\u524d\u5206\u7ec4\u4e2d\u6ca1\u6709\u54cd\u5e94\u7684\u5ba2\u6237\u5360\u6240\u6709\u6ca1\u6709\u54cd\u5e94\u7684\u5ba2\u6237\u7684\u6bd4\u4f8b\u201d\u7684\u5dee\u5f02\u3002 Tag: \u53ef\u89c6\u5316 \u6570\u636e\u9884\u5904\u7406 Param: label (string) : \u6807\u7b7e\u53d8\u91cf Input: d_data1 (py3pkl) o_all_var (py3pkl) Output: o_IV_bar_plot (jpg) o_WOE_corr_plot (jpg) o_vars_after_corr (txt) o_vars_after_VIF (txt) d_data2 (py3pkl) o_vars_after_VIF_pkl (py3pkl)","title":"\u6570\u636e\u9884\u5904\u7406"},{"location":"preprocessing_py/#chimergedataspy3","text":"\u5361\u65b9\u5206\u7bb1\u6cd5\uff1a\u81ea\u4f4e\u5411\u4e0a\u7684(\u5373\u57fa\u4e8e\u5408\u5e76\u7684)\u6570\u636e\u79bb\u6563\u5316\u65b9\u6cd5\u3002\u5b83\u4f9d\u8d56\u4e8e\u5361\u65b9\u68c0\u9a8c\uff1a\u5177\u6709\u6700\u5c0f\u5361\u65b9\u503c\u7684\u76f8\u90bb\u533a\u95f4\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u76f4\u5230\u6ee1\u8db3\u786e\u5b9a\u7684\u505c\u6b62\u51c6\u5219\u3002 \u57fa\u672c\u601d\u60f3\uff1a\u5bf9\u4e8e\u7cbe\u786e\u7684\u79bb\u6563\u5316\uff0c\u76f8\u5bf9\u7c7b\u9891\u7387\u5728\u4e00\u4e2a\u533a\u95f4\u5185\u5e94\u5f53\u5b8c\u5168\u4e00\u81f4\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4e24\u4e2a\u76f8\u90bb\u7684\u533a\u95f4\u5177\u6709\u975e\u5e38\u7c7b\u4f3c\u7684\u7c7b\u5206\u5e03\uff0c\u5219\u8fd9\u4e24\u4e2a\u533a\u95f4\u53ef\u4ee5\u5408\u5e76\uff1b\u5426\u5219\uff0c\u5b83\u4eec\u5e94\u5f53\u4fdd\u6301\u5206\u5f00\u3002\u800c\u4f4e\u5361\u65b9\u503c\u8868\u660e\u5b83\u4eec\u5177\u6709\u76f8\u4f3c\u7684\u7c7b\u5206\u5e03\u3002","title":"ChiMergeDataSPy3"},{"location":"preprocessing_py/#tag","text":"\u6570\u636e\u9884\u5904\u7406","title":"Tag:"},{"location":"preprocessing_py/#param","text":"label (string) : \u5b9a\u4e49\u6807\u7b7e\u53d8\u91cf","title":"Param:"},{"location":"preprocessing_py/#input","text":"d_data1 (py3pkl)","title":"Input:"},{"location":"preprocessing_py/#output","text":"d_data2 (py3pkl) all_var (py3pkl)","title":"Output:"},{"location":"preprocessing_py/#dummyfitdataspy3","text":"\u5bf9\u6570\u636e\u505a\u54d1\u7f16\u7801\u8f6c\u5316(\u8bad\u7ec3\u6570\u636e\u65f6\u4f7f\u7528)","title":"DummyFitDataSPy3"},{"location":"preprocessing_py/#tag_1","text":"\u6570\u636e\u9884\u5904\u7406","title":"Tag:"},{"location":"preprocessing_py/#param_1","text":"None","title":"Param:"},{"location":"preprocessing_py/#input_1","text":"d_data (py3pkl)","title":"Input:"},{"location":"preprocessing_py/#output_1","text":"d_dummy_data (py3pkl) cols (py3pkl)","title":"Output:"},{"location":"preprocessing_py/#dummytransformdataspy3","text":"\u5bf9\u6570\u636e\u505a\u54d1\u7f16\u7801\u8f6c\u5316(\u5c06\u6570\u636e\u8f6c\u5316\u4e3a\u540c\u8bad\u7ec3\u6570\u636e\u76f8\u540c\u7684\u53d8\u91cf)","title":"DummyTransformDataSPy3"},{"location":"preprocessing_py/#tag_2","text":"\u6570\u636e\u9884\u5904\u7406","title":"Tag:"},{"location":"preprocessing_py/#param_2","text":"None","title":"Param:"},{"location":"preprocessing_py/#input_2","text":"d_data (py3pkl) cols (py3pkl)","title":"Input:"},{"location":"preprocessing_py/#output_2","text":"d_dummy_data (py3pkl)","title":"Output:"},{"location":"preprocessing_py/#imbalancedataspy3","text":"\u5bf9\u6570\u636e\u8fdb\u884c\u8fc7\u91c7\u6837\u5904\u7406","title":"ImbalanceDataSPy3"},{"location":"preprocessing_py/#tag_3","text":"\u6570\u636e\u9884\u5904\u7406","title":"Tag:"},{"location":"preprocessing_py/#param_3","text":"None","title":"Param:"},{"location":"preprocessing_py/#input_3","text":"X (csv) Y (csv)","title":"Input:"},{"location":"preprocessing_py/#output_3","text":"x_resampled (csv) y_resampled (csv)","title":"Output:"},{"location":"preprocessing_py/#labelencoderdataspy3","text":"\u5bf9\u7c7b\u522b\u578b\u6587\u672c\u53d8\u91cf\u8fdb\u884c\u7f16\u7801","title":"LabelEncoderDataSPy3"},{"location":"preprocessing_py/#tag_4","text":"\u6570\u636e\u9884\u5904\u7406","title":"Tag:"},{"location":"preprocessing_py/#param_4","text":"col (string) : \u6570\u636e\u4e2d\u9700\u8981\u66f4\u6539\u6210\u865a\u62df\u53d8\u91cf\u7684\u539f\u5217 signal (int) : \u9009\u62e9\u662f\u5426\u6309\u7167\u6570\u636e\u7c7b\u578b\u81ea\u52a8\u8f6c\u6362","title":"Param:"},{"location":"preprocessing_py/#input_4","text":"d_data (py3pkl)","title":"Input:"},{"location":"preprocessing_py/#output_4","text":"d_changed_data (py3pkl)","title":"Output:"},{"location":"preprocessing_py/#minmaxscalerfitdataspy3","text":"\u5bf9\u8fde\u7eed\u578b\u53d8\u91cf\u8fdb\u884c\u5f52\u4e00\u5316\u5904\u7406, \u4f7f\u7528\u8fd9\u79cd\u7f29\u653e\u7684\u76ee\u7684\u5305\u62ec\u5b9e\u73b0\u7279\u5f81\u6781\u5c0f\u65b9\u5dee\u7684\u9c81\u68d2\u6027\u4ee5\u53ca\u5728\u7a00\u758f\u77e9\u9635\u4e2d\u4fdd\u7559\u96f6\u5143\u7d20\u3002\u9002\u7528\u4e8e\u8bad\u7ec3\u6570\u636e\u3002","title":"MinMaxScalerFitDataSPy3"},{"location":"preprocessing_py/#tag_5","text":"\u6570\u636e\u9884\u5904\u7406","title":"Tag:"},{"location":"preprocessing_py/#param_5","text":"None","title":"Param:"},{"location":"preprocessing_py/#input_5","text":"d_data (py3pkl)","title":"Input:"},{"location":"preprocessing_py/#output_5","text":"d_changed_data (py3pkl) m_minmax_model (py3pkl)","title":"Output:"},{"location":"preprocessing_py/#minmaxscalertransformdataspy3","text":"\u5bf9\u8fde\u7eed\u578b\u53d8\u91cf\u8fdb\u884c\u5f52\u4e00\u5316\u5904\u7406, \u4f7f\u7528\u8fd9\u79cd\u7f29\u653e\u7684\u76ee\u7684\u5305\u62ec\u5b9e\u73b0\u7279\u5f81\u6781\u5c0f\u65b9\u5dee\u7684\u9c81\u68d2\u6027\u4ee5\u53ca\u5728\u7a00\u758f\u77e9\u9635\u4e2d\u4fdd\u7559\u96f6\u5143\u7d20\u3002\u9002\u7528\u4e8e\u6d4b\u8bd5\u6570\u636e\u3002","title":"MinMaxScalerTransformDataSPy3"},{"location":"preprocessing_py/#tag_6","text":"\u6570\u636e\u9884\u5904\u7406","title":"Tag:"},{"location":"preprocessing_py/#param_6","text":"None","title":"Param:"},{"location":"preprocessing_py/#input_6","text":"d_data (py3pkl) model (py3pkl)","title":"Input:"},{"location":"preprocessing_py/#output_6","text":"d_changed_data (py3pkl)","title":"Output:"},{"location":"preprocessing_py/#missingdropdataspy3","text":"\u5220\u9664\u62e5\u6709\u552f\u4e00\u503c\u7684\u5b57\u6bb5\uff1b\u5220\u9664\u7f3a\u5931\u767e\u5206\u6bd4\u5927\u4e8e\u4e00\u5b9a\u6bd4\u7387\u7684\u5b57\u6bb5(\u7c7b\u522b\u53d8\u91cf\u5927\u4e8e30%\uff0c\u8fde\u7eed\u53d8\u91cf\u5927\u4e8e60%)\u3002","title":"MissingDropDataSPy3"},{"location":"preprocessing_py/#tag_7","text":"\u6570\u636e\u9884\u5904\u7406","title":"Tag:"},{"location":"preprocessing_py/#param_7","text":"percent_obj (int) : percent_non_obj (int) : percent_unique (double) :","title":"Param:"},{"location":"preprocessing_py/#input_7","text":"d_data (py3pkl)","title":"Input:"},{"location":"preprocessing_py/#output_7","text":"d_changed_data (py3pkl)","title":"Output:"},{"location":"preprocessing_py/#missingfilldataspy3","text":"\u5c0f\u6bd4\u4f8b\u7f3a\u5931\u503c\u7528\u4f17\u6570\u6216\u4e2d\u4f4d\u6570\u586b\u5145\u3002","title":"MissingFillDataSPy3"},{"location":"preprocessing_py/#tag_8","text":"\u6570\u636e\u9884\u5904\u7406","title":"Tag:"},{"location":"preprocessing_py/#param_8","text":"percent_obj (int) : percent_non_obj (int) :","title":"Param:"},{"location":"preprocessing_py/#input_8","text":"d_data (py3pkl)","title":"Input:"},{"location":"preprocessing_py/#output_8","text":"d_changed_data (py3pkl)","title":"Output:"},{"location":"preprocessing_py/#missingimputedataspy3","text":"\u7528\u4f20\u64ad\u7b97\u6cd5\u5bf9\u7f3a\u5931\u503c\u8fdb\u884c\u586b\u5145","title":"MissingImputeDataSPy3"},{"location":"preprocessing_py/#tag_9","text":"\u6570\u636e\u9884\u5904\u7406","title":"Tag:"},{"location":"preprocessing_py/#param_9","text":"lower_null_percent_object (int) : upper_null_percent_object (int) : lower_null_percent_nonobject (int) : upper_null_percent_nonobject (int) :","title":"Param:"},{"location":"preprocessing_py/#input_9","text":"d_data (py3pkl)","title":"Input:"},{"location":"preprocessing_py/#output_9","text":"d_changed_data (py3pkl)","title":"Output:"},{"location":"preprocessing_py/#onehotencoderdataspy3","text":"\u5c06\u6570\u636e\u8f6c\u5316\u4e3a\u865a\u62df\u6570\u636e\uff0c\u5373\u5c06\u6570\u636e\u62c6\u5206\u4e3a\u591a\u4e2a\u4ee50\u62161\u8868\u793a\u7684\u5217","title":"OneHotEncoderDataSPy3"},{"location":"preprocessing_py/#tag_10","text":"\u6570\u636e\u9884\u5904\u7406","title":"Tag:"},{"location":"preprocessing_py/#param_10","text":"None","title":"Param:"},{"location":"preprocessing_py/#input_10","text":"d_data (py3pkl)","title":"Input:"},{"location":"preprocessing_py/#output_10","text":"d_changed_data (py3pkl)","title":"Output:"},{"location":"preprocessing_py/#quantiletrasformerdataspy3","text":"\u5206\u4f4d\u6570\u8f6c\u6362\u7684\u76ee\u7684\u662f\u628a\u7279\u5f81\u6570\u636e\u8f6c\u6362\u5230\u4e00\u5b9a\u7684\u8303\u56f4\u5185, \u6216\u8005\u8ba9\u4ed6\u4eec\u7b26\u5408\u4e00\u5b9a\u7684\u5206\u5e03\u3002\u5206\u4f4d\u6570\u8f6c\u6362\u5229\u7528\u7684\u662f\u6570\u636e\u7684\u5206\u4f4d\u6570\u4fe1\u606f\u8fdb\u884c\u53d8\u6362\u3002 \u5b83\u80fd\u591f\u5e73\u6ed1\u90a3\u4e9b\u5f02\u5e38\u5206\u5e03\uff0c\u5bf9\u4e8e\u5b58\u5728\u5f02\u5e38\u70b9\u7684\u6570\u636e\u4e5f\u5f88\u9002\u5408\u3002\u4f46\u662f\u5b83\u4f1a\u7834\u8bdd\u539f\u6765\u6570\u636e\u7684\u76f8\u5173\u6027\u548c\u8ddd\u79bb\u4fe1\u606f","title":"QuantileTrasformerDataSPy3"},{"location":"preprocessing_py/#tag_11","text":"\u6570\u636e\u9884\u5904\u7406","title":"Tag:"},{"location":"preprocessing_py/#param_11","text":"n_quantiles (int) : \u8ba1\u7b97\u6240\u7528\u7684\u5206\u4f4d\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a1000 output_distribution (string) : \u6362\u6570\u636e\u9075\u5faa\u7684\u5206\u5e03\u51fd\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3auniform ignore_implicit_zeros (string) : \u53ea\u9488\u5bf9\u7a00\u758f\u77e9\u9635\uff0c\u9ed8\u8ba4\u503c\u4e3aFalse\uff0c\u5f53\u4e3aTrue\u65f6\uff0c\u5219\u5728\u8ba1\u7b97\u5206\u4f4d\u6570\u65f6\u7a00\u758f\u77e9\u9635\u4e2d\u7684\u7a00\u758f\u6761\u76ee\u5c06\u88ab\u5ffd\u7565 subsample (int) : \u7528\u4e8e\u8ba1\u7b97\u6709\u6548\u5206\u4e3a\u6570\u7684\u6700\u5927\u6837\u672c\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a100000 copy (string) :","title":"Param:"},{"location":"preprocessing_py/#input_11","text":"d_data (py3pkl)","title":"Input:"},{"location":"preprocessing_py/#output_11","text":"d_changed_data (py3pkl) transformer (py3pkl)","title":"Output:"},{"location":"preprocessing_py/#woe_iv_dataspy3","text":"IV\u7684\u5168\u79f0\u662fInformation Value\uff0c\u4e2d\u6587\u610f\u601d\u662f\u4fe1\u606f\u4ef7\u503c\uff0c\u6216\u8005\u4fe1\u606f\u91cf\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u5177\u4f53\u7684\u91cf\u5316\u6307\u6807\u6765\u8861\u91cf\u6bcf\u4e2a\u81ea\u53d8\u91cf\u7684\u9884\u6d4b\u80fd\u529b\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u91cf\u5316\u6307\u6807\u7684\u5927\u5c0f\uff0c\u6765\u786e\u5b9a\u54ea\u4e9b\u53d8\u91cf\u8fdb\u5165\u6a21\u578b\u3002IV\u5c31\u662f\u8fd9\u6837\u4e00\u79cd\u6307\u6807\uff0c\u4ed6\u53ef\u4ee5\u7528\u6765\u8861\u91cf\u81ea\u53d8\u91cf\u7684\u9884\u6d4b\u80fd\u529b\u3002\u7c7b\u4f3c\u7684\u6307\u6807\u8fd8\u6709\u4fe1\u606f\u589e\u76ca\u3001\u57fa\u5c3c\u7cfb\u6570\u7b49\u7b49\u3002\u9ad8IV\u8868\u793a\u8be5\u7279\u5f81\u548c\u76ee\u6807\u53d8\u91cf\u7684\u5173\u8054\u5ea6\u9ad8\uff1b\u76ee\u6807\u53d8\u91cf\u53ea\u80fd\u662f\u4e8c\u5206\u7c7b\uff1b\u7279\u5f81\u5206\u7bb1\u8d8a\u7ec6\uff0cIV\u8d8a\u9ad8\u3002 WOE\u7684\u5168\u79f0\u662f\u201cWeight of Evidence\u201d\uff0c\u5373\u8bc1\u636e\u6743\u91cd\u3002WOE\u662f\u5bf9\u539f\u59cb\u81ea\u53d8\u91cf\u7684\u4e00\u79cd\u7f16\u7801\u5f62\u5f0f\u3002WOE\u8868\u793a\u7684\u5b9e\u9645\u4e0a\u662f\u201c\u5f53\u524d\u5206\u7ec4\u4e2d\u54cd\u5e94\u5ba2\u6237\u5360\u6240\u6709\u54cd\u5e94\u5ba2\u6237\u7684\u6bd4\u4f8b\u201d\u548c\u201c\u5f53\u524d\u5206\u7ec4\u4e2d\u6ca1\u6709\u54cd\u5e94\u7684\u5ba2\u6237\u5360\u6240\u6709\u6ca1\u6709\u54cd\u5e94\u7684\u5ba2\u6237\u7684\u6bd4\u4f8b\u201d\u7684\u5dee\u5f02\u3002","title":"WOE_IV_DataSPy3"},{"location":"preprocessing_py/#tag_12","text":"\u53ef\u89c6\u5316 \u6570\u636e\u9884\u5904\u7406","title":"Tag:"},{"location":"preprocessing_py/#param_12","text":"label (string) : \u6807\u7b7e\u53d8\u91cf","title":"Param:"},{"location":"preprocessing_py/#input_12","text":"d_data1 (py3pkl) o_all_var (py3pkl)","title":"Input:"},{"location":"preprocessing_py/#output_12","text":"o_IV_bar_plot (jpg) o_WOE_corr_plot (jpg) o_vars_after_corr (txt) o_vars_after_VIF (txt) d_data2 (py3pkl) o_vars_after_VIF_pkl (py3pkl)","title":"Output:"},{"location":"preprocessing_pyspark/","text":"ChiSqSelectorDPy3 \u5361\u65b9\u68c0\u9a8c\u7b5b\u9009\u53d8\u91cf Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: label (string) : \u5b9a\u4e49\u6807\u7b7e\u53d8\u91cf numTopFeatures (int) : \u5361\u65b9\u68c0\u9a8c\u4fdd\u7559\u7684\u53d8\u91cf\u4e2a\u6570 Input: in1 (any) Output: out1 (any) DropNADPy3 \u6839\u636e\u6761\u4ef6\u5220\u9664\u7f3a\u5931\u503c Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: method (string) : \u5220\u9664\u7f3a\u5931\u503c\u65b9\u6cd5 thresh (string) : \u6bcf\u884c\u975e\u7f3a\u5931\u503c\u4e2a\u6570\u4e0d\u80fd\u5c0f\u4e8e\u8be5\u9608\u503c\uff0c\u5426\u5219\u5220\u9664\u8be5\u884c cols (string) : \u5b9a\u4e49\u53d8\u91cf\u8303\u56f4 Input: in1 (any) Output: out1 (any) FeatureHasherDPy3 FeatureHasher\u76f4\u63a5\u5bf9\u7279\u5f81\u5e94\u7528\u4e00\u4e2ahash\u51fd\u6570\u6765\u51b3\u5b9a\u7279\u5f81\u5728\u6837\u672c\u77e9\u9635\u4e2d\u7684\u5217\u7d22\u5f15\u3002\u8fd9\u6837\u7684\u505a\u6cd5\u4f7f\u5f97\u8ba1\u7b97\u901f\u5ea6\u63d0\u5347\u5e76\u4e14\u8282\u7701\u4e86\u5185\u5b58 Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: cols (string) : \u6307\u5b9a\u53d8\u91cf\u6216\u9009\u62e9\u51fa\u6807\u7b7e\u5916\u6240\u6709\u53d8\u91cf label (string) : \u6807\u7b7e\u5217 Input: in1 (any) Output: out1 (any) FillNADPy3 \u7528\u56fa\u5b9a\u503c\u586b\u5145\u7f3a\u5931\u503c Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: value (int) : \u5c06\u7f3a\u5931\u503c\u66ff\u6362\u4e3a\u8be5\u6570\u503c cols (string) : \u6307\u5b9a\u8981\u586b\u5145\u7684\u5217 Input: in1 (any) Output: out1 (any) ImputerDPy3 Imputer\u7528\u5747\u503c\u6216\u4e2d\u4f4d\u6570\u586b\u8865\u6570\u636e\u4e2d\u7f3a\u5931\u503c\uff0c\u8981\u586b\u8865\u7684\u5217\u5fc5\u987b\u662fDoubleType\u6216FloatType Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: strategy (string) : \u586b\u8865\u7f3a\u5931\u503c\u7b56\u7565 Input: in1 (any) Output: out1 (any) IndexToStringDPy3 \u5c06\u7ecf\u8fc7\u6570\u503c\u7f16\u7801\u540e\u7684\u53d8\u91cf\u8f6c\u56de\u539f\u6807\u7b7e Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: cols (string) : \u8981\u8f6c\u6362\u7684\u53d8\u91cf Input: in1 (any) Output: out1 (any) MaxAbsScalerDPy3 MaxAbsScaler\u8f6c\u6362\u77e2\u91cf\u884c\u7684\u6570\u636e\u96c6\uff0c\u901a\u8fc7\u9664\u4ee5\u6bcf\u4e2a\u53d8\u91cf\u7684\u6700\u5927\u7edd\u5bf9\u503c\uff0c\u5c06\u6bcf\u4e2a\u53d8\u91cf\u91cd\u65b0\u7f29\u653e\u5230\u8303\u56f4[-1,1]\u3002 \u5b83\u4e0d\u4f1a\u4e2d\u5fc3\u5316\u6570\u636e\uff0c\u56e0\u6b64\u4e0d\u4f1a\u7834\u574f\u4efb\u4f55\u7a00\u758f\u6027\u3002 Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: None Input: in1 (any) Output: out1 (any) MergeColsDPy3 \u901a\u8fc7\u5171\u6709\u5217\u7ec4\u5408\u6570\u636e Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: method (string) : \u5408\u5e76\u65b9\u5f0f Input: in1 (any) in2 (any) Output: out1 (any) MinMaxScalerDPy3 MinMaxScaler\u8f6c\u6362\u6570\u636e\u96c6\u7684\u5411\u91cf\u884c\uff0c\u5c06\u6bcf\u4e2a\u7279\u5f81\u91cd\u65b0\u7f29\u653e\u5230\u7279\u5b9a\u8303\u56f4 Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: None Input: in1 (any) Output: out1 (any) NormalizerDPy3 \u5c06\u6bcf\u4e2a\u5411\u91cf\u5f52\u4e00\u5316\u4e3a\u5355\u4f4d\u8303\u6570\uff0c\u4f7f\u7528\u4f55\u79cd\u8303\u6570\u8fdb\u884c\u5f52\u4e00\u5316\u53ef\u4ee5\u81ea\u884c\u8bbe\u5b9a Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: p (int) : Input: in1 (any) Output: out1 (any) OneHotEncoderDPy3 \u5bf9\u7c7b\u522b\u578b\u53d8\u91cf\u8fdb\u884c\u72ec\u70ed\u7f16\u7801 Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: None Input: in1 (any) in2 (any) Output: out1 (any) PCADPy3 PCA\u964d\u7ef4\u4f7f\u7528\u6b63\u4ea4\u53d8\u6362\u65b9\u6cd5\u5c06\u4e00\u7ec4\u4e92\u76f8\u76f8\u5173\u7684\u53d8\u91cf\u8f6c\u6362\u4e3a\u4e00\u7ec4\u7ebf\u6027\u975e\u76f8\u5173\u7684\u53d8\u91cf Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: k (int) : pca\u964d\u81f3\u7ef4\u6570 Input: in1 (any) Output: out1 (any) PolynomialExpansionDPy3 \u7279\u5f81\u5de5\u7a0b\uff1a\u591a\u9879\u5f0f\u6269\u5c55\u53d8\u91cf Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: degree (int) : \u6269\u5c55\u81f3\u7684\u7ef4\u5ea6 Input: in1 (any) Output: out1 (any) QuantileDiscretizerDPy3 \u5bf9\u8fde\u7eed\u53d8\u91cf\u8fdb\u884c\u5206\u7bb1\uff0c\u8f6c\u4e3a\u79bb\u6563\u578b\u53d8\u91cf\uff0c\u5206\u7bb1\u4e2a\u6570\u53ef\u4ee5\u81ea\u5df1\u8bbe\u5b9a Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: cols (string) : \u53ef\u4ee5\u9009\u62e9\u8981\u5904\u7406\u7684\u53d8\u91cf\uff0c\u5982\u679c#\u5219\u6839\u636e\u8f93\u5165\u7684\u975e\u5b57\u7b26\u4e32\u53d8\u91cf\u8fdb\u884c\u5904\u7406 handleInvalid (string) : \u9047\u5230\u7f3a\u5931\u503c\u7684\u5904\u7406\u65b9\u6cd5 Input: in1 (any) in2 (any) Output: out1 (any) SplitDPy3 \u5206\u5272\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6 Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: testRate (double) : \u6d4b\u8bd5\u96c6\u6bd4\u4f8b Input: in1 (any) Output: out1 (any) out2 (any) StackRowsDPy3 \u5bf9\u4e24\u4e2a\u6570\u636e\u96c6\u8fdb\u884c\u884c\u5806\u79ef Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: None Input: in1 (any) in2 (any) Output: out1 (any) StandardScalerDPy3 StandardScaler\u8f6c\u6362\u6570\u636e\u96c6\u7684\u5411\u91cf\u884c\uff0c\u5c06\u6bcf\u4e2a\u53d8\u91cf\u6807\u51c6\u5316\u4e3a\u5177\u6709\u5355\u4f4d\u6807\u51c6\u5dee\u548c/\u6216\u96f6\u5747\u503c Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: withMean (string) : \u5728\u7f29\u653e\u4e4b\u524d\u662f\u5426\u4f7f\u7528\u5747\u503c\u5c06\u6570\u636e\u5c45\u4e2d\u3002 \u5b83\u4f1a\u5efa\u7acb\u4e00\u4e2a\u5bc6\u96c6\u7684\u8f93\u51fa\uff0c\u6240\u4ee5\u5728\u5e94\u7528\u7a00\u758f\u8f93\u5165\u65f6\u8981\u5c0f\u5fc3\u3002 Input: in1 (any) Output: out1 (any) StringIndexerDPy3 \u5c06\u5b57\u7b26\u4e32\u5217\u7f16\u7801\u4e3a\u6807\u7b7e\u7d22\u5f15\u5217 Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: cols (string) : \u8981\u8f6c\u6362\u7684\u53d8\u91cf\uff0c\u5982\u679c#\uff0c\u5219\u5bf9\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53d8\u91cf\u8fdb\u884c\u8f6c\u6362 label (string) : \u6807\u7b7e Input: in1 (any) in2 (any) in3 (any) Output: out1 (any) out2 (any) VectorAssemblerDPy3 \u5c06\u7ed9\u5b9a\u7684\u591a\u5217\u8868\u7ec4\u5408\u6210\u4e00\u4e2a\u5355\u4e00\u7684\u76f8\u91cf\u5217 Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: label (string) : \u6807\u7b7e\u53d8\u91cf cols (string) : \u5982\u679c\u4e3a#\uff0c\u5219\u7ec4\u5408\u9664\u6807\u7b7e\u5916\u6240\u6709\u53d8\u91cf method (string) : \u9009\u62e9\u53d8\u91cf\u65b9\u6cd5 Input: in1 (any) in2 (any) Output: out1 (any) VectorIndexerDPy3 \u6839\u636e\u6700\u5927\u7c7b\u522b\u6570\u8bc6\u522b\u7c7b\u522b\u53d8\u91cf\uff0c\u7136\u540e\u5bf9\u5411\u91cf\u4e2d\u7684\u7c7b\u522b\u53d8\u91cf\u7d22\u5f15\u5316\uff0c\u4e3b\u8981\u4f5c\u7528\u662f\u63d0\u9ad8\u51b3\u7b56\u6811\u6216\u968f\u673a\u68ee\u6797\u7b97\u6cd5\u7684\u5206\u7c7b\u6548\u679c Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: maxCategories (int) : \u5b9a\u4e49\u7c7b\u522b\u578b\u53d8\u91cf\u7684\u6700\u5927\u7c7b\u522b\u6570 Input: in1 (any) Output: out1 (any) VectorSlicerDPy3 VectorSlicer\u662f\u4e00\u4e2a\u53d8\u6362\u5668\uff0c\u5b83\u91c7\u7528\u4e00\u4e2a\u7279\u5f81\u5411\u91cf\u5e76\u8f93\u51fa\u4e00\u4e2a\u5e26\u6709\u539f\u59cb\u7279\u5f81\u5b50\u9635\u5217\u7684\u65b0\u7279\u5f81\u5411\u91cf\u3002 \u5b83\u5bf9\u4e8e\u4ece\u5411\u91cf\u5217\u4e2d\u63d0\u53d6\u53d8\u91cf\u975e\u5e38\u6709\u7528\u3002 Tag: \u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f Param: indices (string) : \u9009\u62e9\u6307\u5b9a\u53d8\u91cf\u7684index Input: in1 (any) Output: out1 (any)","title":"\u6570\u636e\u9884\u5904\u7406"},{"location":"preprocessing_pyspark/#chisqselectordpy3","text":"\u5361\u65b9\u68c0\u9a8c\u7b5b\u9009\u53d8\u91cf","title":"ChiSqSelectorDPy3"},{"location":"preprocessing_pyspark/#tag","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param","text":"label (string) : \u5b9a\u4e49\u6807\u7b7e\u53d8\u91cf numTopFeatures (int) : \u5361\u65b9\u68c0\u9a8c\u4fdd\u7559\u7684\u53d8\u91cf\u4e2a\u6570","title":"Param:"},{"location":"preprocessing_pyspark/#input","text":"in1 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#dropnadpy3","text":"\u6839\u636e\u6761\u4ef6\u5220\u9664\u7f3a\u5931\u503c","title":"DropNADPy3"},{"location":"preprocessing_pyspark/#tag_1","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_1","text":"method (string) : \u5220\u9664\u7f3a\u5931\u503c\u65b9\u6cd5 thresh (string) : \u6bcf\u884c\u975e\u7f3a\u5931\u503c\u4e2a\u6570\u4e0d\u80fd\u5c0f\u4e8e\u8be5\u9608\u503c\uff0c\u5426\u5219\u5220\u9664\u8be5\u884c cols (string) : \u5b9a\u4e49\u53d8\u91cf\u8303\u56f4","title":"Param:"},{"location":"preprocessing_pyspark/#input_1","text":"in1 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_1","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#featurehasherdpy3","text":"FeatureHasher\u76f4\u63a5\u5bf9\u7279\u5f81\u5e94\u7528\u4e00\u4e2ahash\u51fd\u6570\u6765\u51b3\u5b9a\u7279\u5f81\u5728\u6837\u672c\u77e9\u9635\u4e2d\u7684\u5217\u7d22\u5f15\u3002\u8fd9\u6837\u7684\u505a\u6cd5\u4f7f\u5f97\u8ba1\u7b97\u901f\u5ea6\u63d0\u5347\u5e76\u4e14\u8282\u7701\u4e86\u5185\u5b58","title":"FeatureHasherDPy3"},{"location":"preprocessing_pyspark/#tag_2","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_2","text":"cols (string) : \u6307\u5b9a\u53d8\u91cf\u6216\u9009\u62e9\u51fa\u6807\u7b7e\u5916\u6240\u6709\u53d8\u91cf label (string) : \u6807\u7b7e\u5217","title":"Param:"},{"location":"preprocessing_pyspark/#input_2","text":"in1 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_2","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#fillnadpy3","text":"\u7528\u56fa\u5b9a\u503c\u586b\u5145\u7f3a\u5931\u503c","title":"FillNADPy3"},{"location":"preprocessing_pyspark/#tag_3","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_3","text":"value (int) : \u5c06\u7f3a\u5931\u503c\u66ff\u6362\u4e3a\u8be5\u6570\u503c cols (string) : \u6307\u5b9a\u8981\u586b\u5145\u7684\u5217","title":"Param:"},{"location":"preprocessing_pyspark/#input_3","text":"in1 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_3","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#imputerdpy3","text":"Imputer\u7528\u5747\u503c\u6216\u4e2d\u4f4d\u6570\u586b\u8865\u6570\u636e\u4e2d\u7f3a\u5931\u503c\uff0c\u8981\u586b\u8865\u7684\u5217\u5fc5\u987b\u662fDoubleType\u6216FloatType","title":"ImputerDPy3"},{"location":"preprocessing_pyspark/#tag_4","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_4","text":"strategy (string) : \u586b\u8865\u7f3a\u5931\u503c\u7b56\u7565","title":"Param:"},{"location":"preprocessing_pyspark/#input_4","text":"in1 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_4","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#indextostringdpy3","text":"\u5c06\u7ecf\u8fc7\u6570\u503c\u7f16\u7801\u540e\u7684\u53d8\u91cf\u8f6c\u56de\u539f\u6807\u7b7e","title":"IndexToStringDPy3"},{"location":"preprocessing_pyspark/#tag_5","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_5","text":"cols (string) : \u8981\u8f6c\u6362\u7684\u53d8\u91cf","title":"Param:"},{"location":"preprocessing_pyspark/#input_5","text":"in1 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_5","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#maxabsscalerdpy3","text":"MaxAbsScaler\u8f6c\u6362\u77e2\u91cf\u884c\u7684\u6570\u636e\u96c6\uff0c\u901a\u8fc7\u9664\u4ee5\u6bcf\u4e2a\u53d8\u91cf\u7684\u6700\u5927\u7edd\u5bf9\u503c\uff0c\u5c06\u6bcf\u4e2a\u53d8\u91cf\u91cd\u65b0\u7f29\u653e\u5230\u8303\u56f4[-1,1]\u3002 \u5b83\u4e0d\u4f1a\u4e2d\u5fc3\u5316\u6570\u636e\uff0c\u56e0\u6b64\u4e0d\u4f1a\u7834\u574f\u4efb\u4f55\u7a00\u758f\u6027\u3002","title":"MaxAbsScalerDPy3"},{"location":"preprocessing_pyspark/#tag_6","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_6","text":"None","title":"Param:"},{"location":"preprocessing_pyspark/#input_6","text":"in1 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_6","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#mergecolsdpy3","text":"\u901a\u8fc7\u5171\u6709\u5217\u7ec4\u5408\u6570\u636e","title":"MergeColsDPy3"},{"location":"preprocessing_pyspark/#tag_7","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_7","text":"method (string) : \u5408\u5e76\u65b9\u5f0f","title":"Param:"},{"location":"preprocessing_pyspark/#input_7","text":"in1 (any) in2 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_7","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#minmaxscalerdpy3","text":"MinMaxScaler\u8f6c\u6362\u6570\u636e\u96c6\u7684\u5411\u91cf\u884c\uff0c\u5c06\u6bcf\u4e2a\u7279\u5f81\u91cd\u65b0\u7f29\u653e\u5230\u7279\u5b9a\u8303\u56f4","title":"MinMaxScalerDPy3"},{"location":"preprocessing_pyspark/#tag_8","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_8","text":"None","title":"Param:"},{"location":"preprocessing_pyspark/#input_8","text":"in1 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_8","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#normalizerdpy3","text":"\u5c06\u6bcf\u4e2a\u5411\u91cf\u5f52\u4e00\u5316\u4e3a\u5355\u4f4d\u8303\u6570\uff0c\u4f7f\u7528\u4f55\u79cd\u8303\u6570\u8fdb\u884c\u5f52\u4e00\u5316\u53ef\u4ee5\u81ea\u884c\u8bbe\u5b9a","title":"NormalizerDPy3"},{"location":"preprocessing_pyspark/#tag_9","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_9","text":"p (int) :","title":"Param:"},{"location":"preprocessing_pyspark/#input_9","text":"in1 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_9","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#onehotencoderdpy3","text":"\u5bf9\u7c7b\u522b\u578b\u53d8\u91cf\u8fdb\u884c\u72ec\u70ed\u7f16\u7801","title":"OneHotEncoderDPy3"},{"location":"preprocessing_pyspark/#tag_10","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_10","text":"None","title":"Param:"},{"location":"preprocessing_pyspark/#input_10","text":"in1 (any) in2 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_10","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#pcadpy3","text":"PCA\u964d\u7ef4\u4f7f\u7528\u6b63\u4ea4\u53d8\u6362\u65b9\u6cd5\u5c06\u4e00\u7ec4\u4e92\u76f8\u76f8\u5173\u7684\u53d8\u91cf\u8f6c\u6362\u4e3a\u4e00\u7ec4\u7ebf\u6027\u975e\u76f8\u5173\u7684\u53d8\u91cf","title":"PCADPy3"},{"location":"preprocessing_pyspark/#tag_11","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_11","text":"k (int) : pca\u964d\u81f3\u7ef4\u6570","title":"Param:"},{"location":"preprocessing_pyspark/#input_11","text":"in1 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_11","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#polynomialexpansiondpy3","text":"\u7279\u5f81\u5de5\u7a0b\uff1a\u591a\u9879\u5f0f\u6269\u5c55\u53d8\u91cf","title":"PolynomialExpansionDPy3"},{"location":"preprocessing_pyspark/#tag_12","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_12","text":"degree (int) : \u6269\u5c55\u81f3\u7684\u7ef4\u5ea6","title":"Param:"},{"location":"preprocessing_pyspark/#input_12","text":"in1 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_12","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#quantilediscretizerdpy3","text":"\u5bf9\u8fde\u7eed\u53d8\u91cf\u8fdb\u884c\u5206\u7bb1\uff0c\u8f6c\u4e3a\u79bb\u6563\u578b\u53d8\u91cf\uff0c\u5206\u7bb1\u4e2a\u6570\u53ef\u4ee5\u81ea\u5df1\u8bbe\u5b9a","title":"QuantileDiscretizerDPy3"},{"location":"preprocessing_pyspark/#tag_13","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_13","text":"cols (string) : \u53ef\u4ee5\u9009\u62e9\u8981\u5904\u7406\u7684\u53d8\u91cf\uff0c\u5982\u679c#\u5219\u6839\u636e\u8f93\u5165\u7684\u975e\u5b57\u7b26\u4e32\u53d8\u91cf\u8fdb\u884c\u5904\u7406 handleInvalid (string) : \u9047\u5230\u7f3a\u5931\u503c\u7684\u5904\u7406\u65b9\u6cd5","title":"Param:"},{"location":"preprocessing_pyspark/#input_13","text":"in1 (any) in2 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_13","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#splitdpy3","text":"\u5206\u5272\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6","title":"SplitDPy3"},{"location":"preprocessing_pyspark/#tag_14","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_14","text":"testRate (double) : \u6d4b\u8bd5\u96c6\u6bd4\u4f8b","title":"Param:"},{"location":"preprocessing_pyspark/#input_14","text":"in1 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_14","text":"out1 (any) out2 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#stackrowsdpy3","text":"\u5bf9\u4e24\u4e2a\u6570\u636e\u96c6\u8fdb\u884c\u884c\u5806\u79ef","title":"StackRowsDPy3"},{"location":"preprocessing_pyspark/#tag_15","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_15","text":"None","title":"Param:"},{"location":"preprocessing_pyspark/#input_15","text":"in1 (any) in2 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_15","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#standardscalerdpy3","text":"StandardScaler\u8f6c\u6362\u6570\u636e\u96c6\u7684\u5411\u91cf\u884c\uff0c\u5c06\u6bcf\u4e2a\u53d8\u91cf\u6807\u51c6\u5316\u4e3a\u5177\u6709\u5355\u4f4d\u6807\u51c6\u5dee\u548c/\u6216\u96f6\u5747\u503c","title":"StandardScalerDPy3"},{"location":"preprocessing_pyspark/#tag_16","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_16","text":"withMean (string) : \u5728\u7f29\u653e\u4e4b\u524d\u662f\u5426\u4f7f\u7528\u5747\u503c\u5c06\u6570\u636e\u5c45\u4e2d\u3002 \u5b83\u4f1a\u5efa\u7acb\u4e00\u4e2a\u5bc6\u96c6\u7684\u8f93\u51fa\uff0c\u6240\u4ee5\u5728\u5e94\u7528\u7a00\u758f\u8f93\u5165\u65f6\u8981\u5c0f\u5fc3\u3002","title":"Param:"},{"location":"preprocessing_pyspark/#input_16","text":"in1 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_16","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#stringindexerdpy3","text":"\u5c06\u5b57\u7b26\u4e32\u5217\u7f16\u7801\u4e3a\u6807\u7b7e\u7d22\u5f15\u5217","title":"StringIndexerDPy3"},{"location":"preprocessing_pyspark/#tag_17","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_17","text":"cols (string) : \u8981\u8f6c\u6362\u7684\u53d8\u91cf\uff0c\u5982\u679c#\uff0c\u5219\u5bf9\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53d8\u91cf\u8fdb\u884c\u8f6c\u6362 label (string) : \u6807\u7b7e","title":"Param:"},{"location":"preprocessing_pyspark/#input_17","text":"in1 (any) in2 (any) in3 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_17","text":"out1 (any) out2 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#vectorassemblerdpy3","text":"\u5c06\u7ed9\u5b9a\u7684\u591a\u5217\u8868\u7ec4\u5408\u6210\u4e00\u4e2a\u5355\u4e00\u7684\u76f8\u91cf\u5217","title":"VectorAssemblerDPy3"},{"location":"preprocessing_pyspark/#tag_18","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_18","text":"label (string) : \u6807\u7b7e\u53d8\u91cf cols (string) : \u5982\u679c\u4e3a#\uff0c\u5219\u7ec4\u5408\u9664\u6807\u7b7e\u5916\u6240\u6709\u53d8\u91cf method (string) : \u9009\u62e9\u53d8\u91cf\u65b9\u6cd5","title":"Param:"},{"location":"preprocessing_pyspark/#input_18","text":"in1 (any) in2 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_18","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#vectorindexerdpy3","text":"\u6839\u636e\u6700\u5927\u7c7b\u522b\u6570\u8bc6\u522b\u7c7b\u522b\u53d8\u91cf\uff0c\u7136\u540e\u5bf9\u5411\u91cf\u4e2d\u7684\u7c7b\u522b\u53d8\u91cf\u7d22\u5f15\u5316\uff0c\u4e3b\u8981\u4f5c\u7528\u662f\u63d0\u9ad8\u51b3\u7b56\u6811\u6216\u968f\u673a\u68ee\u6797\u7b97\u6cd5\u7684\u5206\u7c7b\u6548\u679c","title":"VectorIndexerDPy3"},{"location":"preprocessing_pyspark/#tag_19","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_19","text":"maxCategories (int) : \u5b9a\u4e49\u7c7b\u522b\u578b\u53d8\u91cf\u7684\u6700\u5927\u7c7b\u522b\u6570","title":"Param:"},{"location":"preprocessing_pyspark/#input_19","text":"in1 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_19","text":"out1 (any)","title":"Output:"},{"location":"preprocessing_pyspark/#vectorslicerdpy3","text":"VectorSlicer\u662f\u4e00\u4e2a\u53d8\u6362\u5668\uff0c\u5b83\u91c7\u7528\u4e00\u4e2a\u7279\u5f81\u5411\u91cf\u5e76\u8f93\u51fa\u4e00\u4e2a\u5e26\u6709\u539f\u59cb\u7279\u5f81\u5b50\u9635\u5217\u7684\u65b0\u7279\u5f81\u5411\u91cf\u3002 \u5b83\u5bf9\u4e8e\u4ece\u5411\u91cf\u5217\u4e2d\u63d0\u53d6\u53d8\u91cf\u975e\u5e38\u6709\u7528\u3002","title":"VectorSlicerDPy3"},{"location":"preprocessing_pyspark/#tag_20","text":"\u6570\u636e\u9884\u5904\u7406_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"preprocessing_pyspark/#param_20","text":"indices (string) : \u9009\u62e9\u6307\u5b9a\u53d8\u91cf\u7684index","title":"Param:"},{"location":"preprocessing_pyspark/#input_20","text":"in1 (any)","title":"Input:"},{"location":"preprocessing_pyspark/#output_20","text":"out1 (any)","title":"Output:"},{"location":"regressor/","text":"AdaboostRegrSPy3 \u4e00\u79cd\u5bf9\u540c\u4e00\u4e2a\u8bad\u7ec3\u96c6\u8bad\u7ec3\u4e0d\u540c\u7684\u56de\u5f52\u5668(\u5f31\u56de\u5f52\u5668)\uff0c\u7136\u540e\u628a\u8fd9\u4e9b\u5f31\u56de\u5f52\u5668\u96c6\u5408\u8d77\u6765\u6784\u6210\u4e00\u4e2a\u66f4\u5f3a\u7684\u6700\u7ec8\u56de\u5f52\u5668(\u5f3a\u56de\u5f52\u5668)\u7684\u8fed\u4ee3\u7b97\u6cd5\u3002\u5176\u7b97\u6cd5\u672c\u8eab\u662f\u901a\u8fc7\u6539\u53d8\u6570\u636e\u5206\u5e03\u6765\u5b9e\u73b0\u7684\uff0c\u5b83\u6839\u636e\u6bcf\u6b21\u8bad\u7ec3\u96c6\u4e4b\u4e2d\u6bcf\u4e2a\u6837\u672c\u7684\u9884\u6d4b\u662f\u5426\u6b63\u786e\uff0c\u4ee5\u53ca\u4e0a\u6b21\u7684\u603b\u4f53\u7684\u51c6\u786e\u7387\uff0c\u6765\u786e\u5b9a\u6bcf\u4e2a\u6837\u672c\u7684\u6743\u503c\u3002\u5c06\u4fee\u6539\u8fc7\u6743\u503c\u7684\u65b0\u6570\u636e\u96c6\u9001\u7ed9\u4e0b\u5c42\u56de\u5f52\u5668\u8fdb\u884c\u8bad\u7ec3\uff0c\u6700\u540e\u5c06\u6bcf\u6b21\u8bad\u7ec3\u5f97\u5230\u7684\u56de\u5f52\u5668\u6700\u540e\u878d\u5408\u8d77\u6765\uff0c\u4f5c\u4e3a\u6700\u540e\u7684\u51b3\u7b56\u56de\u5f52\u5668\u3002\u4f7f\u7528adaboost\u56de\u5f52\u5668\u53ef\u4ee5\u6392\u9664\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u8bad\u7ec3\u6570\u636e\u7279\u5f81\uff0c\u5e76\u653e\u5728\u5173\u952e\u7684\u8bad\u7ec3\u6570\u636e\u4e0a\u9762\u3002 Tag: \u56de\u5f52\u6a21\u578b Param: n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf learning_rate (double) : \u6536\u655b\u901f\u5ea6 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) o_import_feat (csv) m_fitted_model (py3pkl) BaggingRegrSPy3 bagging\u662f\u4e00\u79cd\u7528\u6765\u63d0\u9ad8\u5b66\u4e60\u7b97\u6cd5\u51c6\u786e\u5ea6\u7684\u65b9\u6cd5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u901a\u8fc7\u6784\u9020\u4e00\u4e2a\u9884\u6d4b\u51fd\u6570\u7cfb\u5217\uff0c\u7136\u540e\u4ee5\u4e00\u5b9a\u7684\u65b9\u5f0f\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u4e00\u4e2a\u9884\u6d4b\u51fd\u6570\u3002Bagging\u8981\u6c42\u201c\u4e0d\u7a33\u5b9a\u201d\uff08\u4e0d\u7a33\u5b9a\u662f\u6307\u6570\u636e\u96c6\u7684\u5c0f\u7684\u53d8\u52a8\u80fd\u591f\u4f7f\u5f97\u5206\u7c7b\u7ed3\u679c\u7684\u663e\u8457\u7684\u53d8\u52a8\uff09\u7684\u5206\u7c7b\u65b9\u6cd5\u3002\u6bd4\u5982\uff1a\u51b3\u7b56\u6811\uff0c\u795e\u7ecf\u7f51\u7edc\u7b97\u6cd5\u3002 Tag: \u56de\u5f52\u6a21\u578b Param: n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf max_samples (double) : \u62bd\u53d6\u7684\u6837\u672c\u6570\u91cf Input: d_feature (csv) d_label (csv) Output: d_pred (csv) m_fitted_model (py3pkl) DecisionTreeRegSPy3 \u51b3\u7b56\u6811(decision tree)\u662f\u4e00\u79cd\u57fa\u672c\u7684\u5206\u7c7b\u4e0e\u56de\u5f52\u65b9\u6cd5\u3002\u51b3\u7b56\u6811\u6a21\u578b\u5448\u6811\u5f62\u7ed3\u6784\uff0c\u5728\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u8868\u793a\u57fa\u4e8e\u7279\u5f81\u5bf9\u5b9e\u4f8b\u8fdb\u884c\u5206\u7c7b\u7684\u8fc7\u7a0b\u3002\u5b83\u53ef\u4ee5\u8ba4\u4e3a\u662fif-then\u89c4\u5219\u7684\u96c6\u5408\uff0c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5b9a\u4e49\u5728\u7279\u5f81\u7a7a\u95f4\u4e0e\u7c7b\u7a7a\u95f4\u4e0a\u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\u3002\u5176\u4e3b\u8981\u4f18\u70b9\u662f\u6a21\u578b\u5177\u6709\u53ef\u8bfb\u6027\uff0c\u5206\u7c7b\u901f\u5ea6\u5feb\u3002\u5b66\u4e60\u65f6\uff0c\u5229\u7528\u8bad\u7ec3\u6570\u636e\uff0c\u6839\u636e\u635f\u5931\u51fd\u6570\u6700\u5c0f\u5316\u7684\u539f\u5219\u5efa\u7acb\u51b3\u7b56\u6811\u6a21\u578b\u3002\u9884\u6d4b\u65f6\uff0c\u5bf9\u65b0\u7684\u6570\u636e\uff0c\u5229\u7528\u51b3\u7b56\u6811\u6a21\u578b\u8fdb\u884c\u5206\u7c7b\u3002 \u51b3\u7b56\u6811\u5b66\u4e60\u901a\u5e38\u5305\u62ec3\u4e2a\u6b65\u9aa4\uff1a\u7279\u5f81\u9009\u62e9\u3001\u51b3\u7b56\u6811\u7684\u751f\u6210\u548c\u51b3\u7b56\u6811\u7684\u4fee\u526a\u3002 Tag: \u56de\u5f52\u6a21\u578b Param: min_impurity_split (double) : \u9884\u526a\u679d\u65f6\u8282\u70b9\u7684\u4e0d\u7eaf\u5ea6(gini\u6216\u8005entropy)\u4f4e\u4e8e\u6b64\u9608\u503c\u5c31\u4e0d\u518d\u5206\u88c2; \u6ce8\uff1a9999.0\u8868\u793a\u9ed8\u8ba4\u503cNone max_depth (int) : \u6811\u7684\u6700\u5927\u6df1\u5ea6\u3002\u9ed8\u8ba4\u503c\u4e0d\u9650\u5236\uff0c\u5f53\u4e0d\u8bbe\u7f6e\u7684\u65f6\u5019\uff0c\u6811\u4e0d\u80fd\u65e0\u9650\u751f\u957f\uff0c\u5b83\u4f1a\u7531\u5176\u4ed6\u53c2\u6570\u6765\u63a7\u5236\u5b83\u7684\u751f\u957f\uff1b9999.0\u8868\u793a\u9ed8\u8ba4\u503cNone min_samples_split (int) : \u8282\u70b9\u7ee7\u7eed\u5f80\u4e0b\u5206\u88c2\u7684\u6700\u5c0f\u6837\u672c\u6570\u8981\u6c42 min_samples_leaf (int) : \u53f6\u5b50\u8282\u70b9\u7684\u6700\u5c0f\u6837\u672c\u6570\u8981\u6c42 max_features (double) : \u8282\u70b9\u5206\u88c2\u65f6\u4f7f\u7528\u7684\u6700\u5927\u7279\u5f81\u6570\uff0c\u6570\u636e\u96c6\u6bd4\u8f83\u5927\u7684\u65f6\u5019\uff0c\u5bf9\u7279\u5f81\u8fdb\u884c\u62bd\u6837\uff0c\u63d0\u9ad8\u901f\u5ea6\uff1b\u6ce8\uff1a\u6ce8\uff1a9999.0\u8868\u793a\u9ed8\u8ba4\u503cNone criterion (string) : \u8282\u70b9\u6700\u4f73\u5206\u88c2\u7684\u5224\u65ad\u6807\u51c6\uff0c\u53ef\u9009\u503c'gini'\u548c'entropy'\uff0c\u9ed8\u8ba4\u503c'gini' Input: d_feature_test (csv) d_label_test (csv) Output: None ExtratreesRegrSPy3 \u8fd9\u4e2a\u7c7b\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5143\u4f30\u8ba1\u5668\uff0c\u8be5\u4f30\u8ba1\u5668\u9002\u5408\u4e8e\u6570\u636e\u96c6\u7684\u5404\u4e2a\u5b50\u6837\u672c\u4e0a\u7684\u591a\u4e2a\u968f\u673a\u51b3\u7b56\u6811\uff08\u53c8\u540dextra-trees\uff09\uff0c\u5e76\u4f7f\u7528\u5e73\u5747\u503c\u6765\u63d0\u9ad8\u9884\u6d4b\u51c6\u786e\u5ea6\u548c\u63a7\u5236\u8fc7\u5ea6\u62df\u5408\u3002 Tag: \u56de\u5f52\u6a21\u578b Param: n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf criterion (string) : \u8bc4\u4f30\u7b97\u6cd5 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) m_fitted_model (py3pkl) o_importance_feat (csv) GradientboostingRegrSPy3 Gradient Boosting \u5728\u8fed\u4ee3\u7684\u65f6\u5019\u9009\u62e9\u68af\u5ea6\u4e0b\u964d\u7684\u65b9\u5411\u6765\u4fdd\u8bc1\u6700\u540e\u7684\u7ed3\u679c\u6700\u597d\u3002 \u635f\u5931\u51fd\u6570\u7528\u6765\u63cf\u8ff0\u6a21\u578b\u7684\u201c\u9760\u8c31\u201d\u7a0b\u5ea6\uff0c\u5047\u8bbe\u6a21\u578b\u6ca1\u6709\u8fc7\u62df\u5408\uff0c\u635f\u5931\u51fd\u6570\u8d8a\u5927\uff0c\u6a21\u578b\u7684\u9519\u8bef\u7387\u8d8a\u9ad8 \u5982\u679c\u6211\u4eec\u7684\u6a21\u578b\u80fd\u591f\u8ba9\u635f\u5931\u51fd\u6570\u6301\u7eed\u7684\u4e0b\u964d\uff0c\u5219\u8bf4\u660e\u6211\u4eec\u7684\u6a21\u578b\u5728\u4e0d\u505c\u7684\u6539\u8fdb\uff0c\u800c\u6700\u597d\u7684\u65b9\u5f0f\u5c31\u662f\u8ba9\u635f\u5931\u51fd\u6570\u5728\u5176\u68af\u5ea6\u65b9\u5411\u4e0a\u4e0b\u964d\u3002 Tag: \u56de\u5f52\u6a21\u578b Param: n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf loss (string) : \u635f\u5931\u51fd\u6570 learning_rate (double) : \u6536\u655b\u901f\u5ea6 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) o_importance_feat (csv) m_fitted_model (py3pkl) RandomforestRegrSPy3 \u968f\u673a\u68ee\u6797\u662f\u5229\u7528\u591a\u68f5\u6811\u5bf9\u6837\u672c\u8fdb\u884c\u8bad\u7ec3\u5e76\u9884\u6d4b\u7684\u4e00\u79cd\u5206\u7c7b\u5668\uff0c\u5b83\u662f\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u51b3\u7b56\u6811\u7684\u5206\u7c7b\u5668\uff0c \u5e76\u4e14\u5176\u8f93\u51fa\u7684\u7c7b\u522b\u662f\u7531\u4e2a\u522b\u6811\u8f93\u51fa\u7684\u7c7b\u522b\u7684\u4f17\u6570\u800c\u5b9a\u3002 Tag: \u56de\u5f52\u6a21\u578b Param: n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf criterion (string) : \u7279\u5f81\u9009\u62e9\u65b9\u6cd5 Input: d_feature (csv) d_label (csv) Output: d_pred (csv) o_importance_feat (csv) m_fitted_model (py3pkl)","title":"\u56de\u5f52\u6a21\u578b"},{"location":"regressor/#adaboostregrspy3","text":"\u4e00\u79cd\u5bf9\u540c\u4e00\u4e2a\u8bad\u7ec3\u96c6\u8bad\u7ec3\u4e0d\u540c\u7684\u56de\u5f52\u5668(\u5f31\u56de\u5f52\u5668)\uff0c\u7136\u540e\u628a\u8fd9\u4e9b\u5f31\u56de\u5f52\u5668\u96c6\u5408\u8d77\u6765\u6784\u6210\u4e00\u4e2a\u66f4\u5f3a\u7684\u6700\u7ec8\u56de\u5f52\u5668(\u5f3a\u56de\u5f52\u5668)\u7684\u8fed\u4ee3\u7b97\u6cd5\u3002\u5176\u7b97\u6cd5\u672c\u8eab\u662f\u901a\u8fc7\u6539\u53d8\u6570\u636e\u5206\u5e03\u6765\u5b9e\u73b0\u7684\uff0c\u5b83\u6839\u636e\u6bcf\u6b21\u8bad\u7ec3\u96c6\u4e4b\u4e2d\u6bcf\u4e2a\u6837\u672c\u7684\u9884\u6d4b\u662f\u5426\u6b63\u786e\uff0c\u4ee5\u53ca\u4e0a\u6b21\u7684\u603b\u4f53\u7684\u51c6\u786e\u7387\uff0c\u6765\u786e\u5b9a\u6bcf\u4e2a\u6837\u672c\u7684\u6743\u503c\u3002\u5c06\u4fee\u6539\u8fc7\u6743\u503c\u7684\u65b0\u6570\u636e\u96c6\u9001\u7ed9\u4e0b\u5c42\u56de\u5f52\u5668\u8fdb\u884c\u8bad\u7ec3\uff0c\u6700\u540e\u5c06\u6bcf\u6b21\u8bad\u7ec3\u5f97\u5230\u7684\u56de\u5f52\u5668\u6700\u540e\u878d\u5408\u8d77\u6765\uff0c\u4f5c\u4e3a\u6700\u540e\u7684\u51b3\u7b56\u56de\u5f52\u5668\u3002\u4f7f\u7528adaboost\u56de\u5f52\u5668\u53ef\u4ee5\u6392\u9664\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u8bad\u7ec3\u6570\u636e\u7279\u5f81\uff0c\u5e76\u653e\u5728\u5173\u952e\u7684\u8bad\u7ec3\u6570\u636e\u4e0a\u9762\u3002","title":"AdaboostRegrSPy3"},{"location":"regressor/#tag","text":"\u56de\u5f52\u6a21\u578b","title":"Tag:"},{"location":"regressor/#param","text":"n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf learning_rate (double) : \u6536\u655b\u901f\u5ea6","title":"Param:"},{"location":"regressor/#input","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"regressor/#output","text":"d_pred (csv) o_import_feat (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"regressor/#baggingregrspy3","text":"bagging\u662f\u4e00\u79cd\u7528\u6765\u63d0\u9ad8\u5b66\u4e60\u7b97\u6cd5\u51c6\u786e\u5ea6\u7684\u65b9\u6cd5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u901a\u8fc7\u6784\u9020\u4e00\u4e2a\u9884\u6d4b\u51fd\u6570\u7cfb\u5217\uff0c\u7136\u540e\u4ee5\u4e00\u5b9a\u7684\u65b9\u5f0f\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u4e00\u4e2a\u9884\u6d4b\u51fd\u6570\u3002Bagging\u8981\u6c42\u201c\u4e0d\u7a33\u5b9a\u201d\uff08\u4e0d\u7a33\u5b9a\u662f\u6307\u6570\u636e\u96c6\u7684\u5c0f\u7684\u53d8\u52a8\u80fd\u591f\u4f7f\u5f97\u5206\u7c7b\u7ed3\u679c\u7684\u663e\u8457\u7684\u53d8\u52a8\uff09\u7684\u5206\u7c7b\u65b9\u6cd5\u3002\u6bd4\u5982\uff1a\u51b3\u7b56\u6811\uff0c\u795e\u7ecf\u7f51\u7edc\u7b97\u6cd5\u3002","title":"BaggingRegrSPy3"},{"location":"regressor/#tag_1","text":"\u56de\u5f52\u6a21\u578b","title":"Tag:"},{"location":"regressor/#param_1","text":"n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf max_samples (double) : \u62bd\u53d6\u7684\u6837\u672c\u6570\u91cf","title":"Param:"},{"location":"regressor/#input_1","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"regressor/#output_1","text":"d_pred (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"regressor/#decisiontreeregspy3","text":"\u51b3\u7b56\u6811(decision tree)\u662f\u4e00\u79cd\u57fa\u672c\u7684\u5206\u7c7b\u4e0e\u56de\u5f52\u65b9\u6cd5\u3002\u51b3\u7b56\u6811\u6a21\u578b\u5448\u6811\u5f62\u7ed3\u6784\uff0c\u5728\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u8868\u793a\u57fa\u4e8e\u7279\u5f81\u5bf9\u5b9e\u4f8b\u8fdb\u884c\u5206\u7c7b\u7684\u8fc7\u7a0b\u3002\u5b83\u53ef\u4ee5\u8ba4\u4e3a\u662fif-then\u89c4\u5219\u7684\u96c6\u5408\uff0c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5b9a\u4e49\u5728\u7279\u5f81\u7a7a\u95f4\u4e0e\u7c7b\u7a7a\u95f4\u4e0a\u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\u3002\u5176\u4e3b\u8981\u4f18\u70b9\u662f\u6a21\u578b\u5177\u6709\u53ef\u8bfb\u6027\uff0c\u5206\u7c7b\u901f\u5ea6\u5feb\u3002\u5b66\u4e60\u65f6\uff0c\u5229\u7528\u8bad\u7ec3\u6570\u636e\uff0c\u6839\u636e\u635f\u5931\u51fd\u6570\u6700\u5c0f\u5316\u7684\u539f\u5219\u5efa\u7acb\u51b3\u7b56\u6811\u6a21\u578b\u3002\u9884\u6d4b\u65f6\uff0c\u5bf9\u65b0\u7684\u6570\u636e\uff0c\u5229\u7528\u51b3\u7b56\u6811\u6a21\u578b\u8fdb\u884c\u5206\u7c7b\u3002 \u51b3\u7b56\u6811\u5b66\u4e60\u901a\u5e38\u5305\u62ec3\u4e2a\u6b65\u9aa4\uff1a\u7279\u5f81\u9009\u62e9\u3001\u51b3\u7b56\u6811\u7684\u751f\u6210\u548c\u51b3\u7b56\u6811\u7684\u4fee\u526a\u3002","title":"DecisionTreeRegSPy3"},{"location":"regressor/#tag_2","text":"\u56de\u5f52\u6a21\u578b","title":"Tag:"},{"location":"regressor/#param_2","text":"min_impurity_split (double) : \u9884\u526a\u679d\u65f6\u8282\u70b9\u7684\u4e0d\u7eaf\u5ea6(gini\u6216\u8005entropy)\u4f4e\u4e8e\u6b64\u9608\u503c\u5c31\u4e0d\u518d\u5206\u88c2; \u6ce8\uff1a9999.0\u8868\u793a\u9ed8\u8ba4\u503cNone max_depth (int) : \u6811\u7684\u6700\u5927\u6df1\u5ea6\u3002\u9ed8\u8ba4\u503c\u4e0d\u9650\u5236\uff0c\u5f53\u4e0d\u8bbe\u7f6e\u7684\u65f6\u5019\uff0c\u6811\u4e0d\u80fd\u65e0\u9650\u751f\u957f\uff0c\u5b83\u4f1a\u7531\u5176\u4ed6\u53c2\u6570\u6765\u63a7\u5236\u5b83\u7684\u751f\u957f\uff1b9999.0\u8868\u793a\u9ed8\u8ba4\u503cNone min_samples_split (int) : \u8282\u70b9\u7ee7\u7eed\u5f80\u4e0b\u5206\u88c2\u7684\u6700\u5c0f\u6837\u672c\u6570\u8981\u6c42 min_samples_leaf (int) : \u53f6\u5b50\u8282\u70b9\u7684\u6700\u5c0f\u6837\u672c\u6570\u8981\u6c42 max_features (double) : \u8282\u70b9\u5206\u88c2\u65f6\u4f7f\u7528\u7684\u6700\u5927\u7279\u5f81\u6570\uff0c\u6570\u636e\u96c6\u6bd4\u8f83\u5927\u7684\u65f6\u5019\uff0c\u5bf9\u7279\u5f81\u8fdb\u884c\u62bd\u6837\uff0c\u63d0\u9ad8\u901f\u5ea6\uff1b\u6ce8\uff1a\u6ce8\uff1a9999.0\u8868\u793a\u9ed8\u8ba4\u503cNone criterion (string) : \u8282\u70b9\u6700\u4f73\u5206\u88c2\u7684\u5224\u65ad\u6807\u51c6\uff0c\u53ef\u9009\u503c'gini'\u548c'entropy'\uff0c\u9ed8\u8ba4\u503c'gini'","title":"Param:"},{"location":"regressor/#input_2","text":"d_feature_test (csv) d_label_test (csv)","title":"Input:"},{"location":"regressor/#output_2","text":"None","title":"Output:"},{"location":"regressor/#extratreesregrspy3","text":"\u8fd9\u4e2a\u7c7b\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5143\u4f30\u8ba1\u5668\uff0c\u8be5\u4f30\u8ba1\u5668\u9002\u5408\u4e8e\u6570\u636e\u96c6\u7684\u5404\u4e2a\u5b50\u6837\u672c\u4e0a\u7684\u591a\u4e2a\u968f\u673a\u51b3\u7b56\u6811\uff08\u53c8\u540dextra-trees\uff09\uff0c\u5e76\u4f7f\u7528\u5e73\u5747\u503c\u6765\u63d0\u9ad8\u9884\u6d4b\u51c6\u786e\u5ea6\u548c\u63a7\u5236\u8fc7\u5ea6\u62df\u5408\u3002","title":"ExtratreesRegrSPy3"},{"location":"regressor/#tag_3","text":"\u56de\u5f52\u6a21\u578b","title":"Tag:"},{"location":"regressor/#param_3","text":"n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf criterion (string) : \u8bc4\u4f30\u7b97\u6cd5","title":"Param:"},{"location":"regressor/#input_3","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"regressor/#output_3","text":"d_pred (csv) m_fitted_model (py3pkl) o_importance_feat (csv)","title":"Output:"},{"location":"regressor/#gradientboostingregrspy3","text":"Gradient Boosting \u5728\u8fed\u4ee3\u7684\u65f6\u5019\u9009\u62e9\u68af\u5ea6\u4e0b\u964d\u7684\u65b9\u5411\u6765\u4fdd\u8bc1\u6700\u540e\u7684\u7ed3\u679c\u6700\u597d\u3002 \u635f\u5931\u51fd\u6570\u7528\u6765\u63cf\u8ff0\u6a21\u578b\u7684\u201c\u9760\u8c31\u201d\u7a0b\u5ea6\uff0c\u5047\u8bbe\u6a21\u578b\u6ca1\u6709\u8fc7\u62df\u5408\uff0c\u635f\u5931\u51fd\u6570\u8d8a\u5927\uff0c\u6a21\u578b\u7684\u9519\u8bef\u7387\u8d8a\u9ad8 \u5982\u679c\u6211\u4eec\u7684\u6a21\u578b\u80fd\u591f\u8ba9\u635f\u5931\u51fd\u6570\u6301\u7eed\u7684\u4e0b\u964d\uff0c\u5219\u8bf4\u660e\u6211\u4eec\u7684\u6a21\u578b\u5728\u4e0d\u505c\u7684\u6539\u8fdb\uff0c\u800c\u6700\u597d\u7684\u65b9\u5f0f\u5c31\u662f\u8ba9\u635f\u5931\u51fd\u6570\u5728\u5176\u68af\u5ea6\u65b9\u5411\u4e0a\u4e0b\u964d\u3002","title":"GradientboostingRegrSPy3"},{"location":"regressor/#tag_4","text":"\u56de\u5f52\u6a21\u578b","title":"Tag:"},{"location":"regressor/#param_4","text":"n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf loss (string) : \u635f\u5931\u51fd\u6570 learning_rate (double) : \u6536\u655b\u901f\u5ea6","title":"Param:"},{"location":"regressor/#input_4","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"regressor/#output_4","text":"d_pred (csv) o_importance_feat (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"regressor/#randomforestregrspy3","text":"\u968f\u673a\u68ee\u6797\u662f\u5229\u7528\u591a\u68f5\u6811\u5bf9\u6837\u672c\u8fdb\u884c\u8bad\u7ec3\u5e76\u9884\u6d4b\u7684\u4e00\u79cd\u5206\u7c7b\u5668\uff0c\u5b83\u662f\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u51b3\u7b56\u6811\u7684\u5206\u7c7b\u5668\uff0c \u5e76\u4e14\u5176\u8f93\u51fa\u7684\u7c7b\u522b\u662f\u7531\u4e2a\u522b\u6811\u8f93\u51fa\u7684\u7c7b\u522b\u7684\u4f17\u6570\u800c\u5b9a\u3002","title":"RandomforestRegrSPy3"},{"location":"regressor/#tag_5","text":"\u56de\u5f52\u6a21\u578b","title":"Tag:"},{"location":"regressor/#param_5","text":"n_estimators (int) : \u8bc4\u4f30\u5668\u6570\u91cf criterion (string) : \u7279\u5f81\u9009\u62e9\u65b9\u6cd5","title":"Param:"},{"location":"regressor/#input_5","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"regressor/#output_5","text":"d_pred (csv) o_importance_feat (csv) m_fitted_model (py3pkl)","title":"Output:"},{"location":"regressor_pyspark/","text":"DecisionTreeRegressorDPy3 \u5206\u5e03\u5f0f\u51b3\u7b56\u6811\u56de\u5f52\u6a21\u578b Tag: \u56de\u5f52\u6a21\u578b_\u5206\u5e03\u5f0f Param: testRate (double) : \u8bad\u7ec3\u96c6\u3001\u6d4b\u8bd5\u96c6\u5207\u5206\u6bd4\u4f8b label (string) : \u6570\u636e\u96c6\u6807\u7b7e maxDepth (int) : \u6700\u5927\u6df1\u5ea6 maxBins (int) : \u6bcf\u4e2a\u7279\u5f81\u5206\u88c2\u65f6\u6700\u5927\u5212\u5206\u6570\u91cf minInstancesPerNode (int) : \u843d\u5728\u67d0\u4e00\u51b3\u7b56\u70b9\u4e0a\u7684\u6700\u5c11\u5b9e\u4f8b\u6570\u76ee minInfoGain (double) : \u6700\u5c0f\u4fe1\u606f\u589e\u76ca impurity (string) : \u4e0d\u7eaf\u5ea6 seed (double) : \u968f\u673a\u79cd\u5b50 varianceCol (string) : \u9884\u6d4b\u4e2d\u504f\u7f6e\u6837\u672c\u65b9\u5dee\u7684\u5217\u540d Input: in1 (any) Output: out1 (any) GBTRegressorDPy2 \u5206\u5e03\u5f0f\u63d0\u5347\u56de\u5f52\u6811 Tag: \u56de\u5f52\u6a21\u578b_\u5206\u5e03\u5f0f Param: testRate (double) : \u8bad\u7ec3\u96c6\u3001\u6d4b\u8bd5\u96c6\u5207\u5206\u6bd4\u4f8b label (string) : \u6570\u636e\u96c6\u6807\u7b7e maxDepth (int) : \u6700\u5927\u6df1\u5ea6 maxBins (int) : \u6bcf\u4e2a\u7279\u5f81\u5206\u88c2\u65f6\u6700\u5927\u5212\u5206\u6570 minInstancesPerNode (int) : \u843d\u5728\u67d0\u4e00\u51b3\u7b56\u70b9\u4e0a\u7684\u5b9e\u4f8b\u6700\u5c11\u6570\u76ee minInfoGain (double) : \u6700\u5c0f\u4fe1\u606f\u589e\u76ca subsamplingRate (double) : \u7528\u4e8e\u5b66\u4e60\u6bcf\u68f5\u6811\u7684\u8bad\u7ec3\u96c6\u6bd4\u4f8b lossType (string) : \u635f\u5931\u51fd\u6570 maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 stepSize (double) : \u5b66\u4e60\u6b65\u957f seed (double) : \u968f\u673a\u79cd\u5b50 Input: in1 (any) Output: out1 (any) GeneralizedLinearRegressionDPy2 \u5206\u5e03\u5f0f\u5e7f\u4e49\u7ebf\u6027\u56de\u5f52\u6a21\u578b Tag: \u56de\u5f52\u6a21\u578b_\u5206\u5e03\u5f0f Param: family (string) : \u6307\u6570\u65cf link (string) : \u5173\u8054\u51fd\u6570 fitIntercept (string) : \u662f\u5426\u8003\u8651\u622a\u8ddd maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 tol (double) : \u6536\u655b\u5224\u636e regParam (double) : \u6b63\u5219\u5316\u53c2\u6570 weightCol (string) : \u5c06\u67d0\u5217\u6240\u6709\u6743\u91cd\u8bbe\u7f6e\u4e3a1.0 solver (string) : \u4f18\u5316\u7b97\u6cd5 linkPredictionCol (string) : \u94fe\u8def\u9884\u6d4b\u5217\u540d Input: in1 (any) Output: out1 (any) LinearRegressionDPy3 \u5206\u5e03\u5f0f\u7ebf\u6027\u56de\u5f52\u6a21\u578b Tag: \u56de\u5f52\u6a21\u578b_\u5206\u5e03\u5f0f Param: maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 regParam (double) : \u6b63\u5219\u5316\u53c2\u6570 elasticNetParam (double) : \u56de\u5f52\u6df7\u5408\u53c2\u6570\uff0c\u7b49\u4e8e0\u65f6\u4e3al2\u60e9\u7f5a\uff0c\u7b49\u4e8e1\u65f6\u4e3al1\u60e9\u7f5a tol (double) : \u6536\u655b\u5224\u636e fitIntercept (string) : \u662f\u5426\u8003\u8651\u622a\u8ddd standardization (string) : \u662f\u5426\u6807\u51c6\u5316 solver (string) : \u4f18\u5316\u7b97\u6cd5 weightCol (string) : \u5c06\u8be5\u5217\u6240\u6709\u5b9e\u4f8b\u6743\u91cd\u8bbe\u7f6e\u4e3a1.0 aggregationDepth (int) : \u805a\u96c6\u6811\u65f6\u7684\u5efa\u8bae\u6df1\u5ea6 Input: in1 (any) Output: out1 (any) RandomForestRegressorDPy3 \u5206\u5e03\u5f0f\u968f\u673a\u68ee\u6797\u56de\u5f52\u6a21\u578b Tag: \u56de\u5f52\u6a21\u578b_\u5206\u5e03\u5f0f Param: maxDepth (int) : \u6700\u5927\u6df1\u5ea6 maxBins (int) : \u6bcf\u4e2a\u7279\u5f81\u5206\u88c2\u65f6\u5212\u5206\u7684\u6700\u5927\u6570\u91cf minInstancesPerNode (int) : \u843d\u5728\u67d0\u4e2a\u51b3\u7b56\u70b9\u4e0a\u7684\u5b9e\u4f8b\u6700\u5c11\u6570\u76ee minInfoGain (double) : \u6700\u5c0f\u4fe1\u606f\u589e\u76ca impurity (string) : \u4e0d\u7eaf\u5ea6 subsamplingRate (double) : \u7528\u4e8e\u5b66\u4e60\u6bcf\u68f5\u6811\u7684\u8bad\u7ec3\u6570\u636e\u7684\u6bd4\u4f8b seed (double) : \u968f\u673a\u79cd\u5b50 numTrees (int) : \u6811\u7684\u4e2a\u6570 featureSubsetStrategy (string) : \u5207\u5206\u6bcf\u4e2a\u7ed3\u70b9\u65f6\u8003\u8651\u7684\u7279\u5f81\u6570\u76ee Input: in1 (any) Output: out1 (any)","title":"\u56de\u5f52\u6a21\u578b"},{"location":"regressor_pyspark/#decisiontreeregressordpy3","text":"\u5206\u5e03\u5f0f\u51b3\u7b56\u6811\u56de\u5f52\u6a21\u578b","title":"DecisionTreeRegressorDPy3"},{"location":"regressor_pyspark/#tag","text":"\u56de\u5f52\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"regressor_pyspark/#param","text":"testRate (double) : \u8bad\u7ec3\u96c6\u3001\u6d4b\u8bd5\u96c6\u5207\u5206\u6bd4\u4f8b label (string) : \u6570\u636e\u96c6\u6807\u7b7e maxDepth (int) : \u6700\u5927\u6df1\u5ea6 maxBins (int) : \u6bcf\u4e2a\u7279\u5f81\u5206\u88c2\u65f6\u6700\u5927\u5212\u5206\u6570\u91cf minInstancesPerNode (int) : \u843d\u5728\u67d0\u4e00\u51b3\u7b56\u70b9\u4e0a\u7684\u6700\u5c11\u5b9e\u4f8b\u6570\u76ee minInfoGain (double) : \u6700\u5c0f\u4fe1\u606f\u589e\u76ca impurity (string) : \u4e0d\u7eaf\u5ea6 seed (double) : \u968f\u673a\u79cd\u5b50 varianceCol (string) : \u9884\u6d4b\u4e2d\u504f\u7f6e\u6837\u672c\u65b9\u5dee\u7684\u5217\u540d","title":"Param:"},{"location":"regressor_pyspark/#input","text":"in1 (any)","title":"Input:"},{"location":"regressor_pyspark/#output","text":"out1 (any)","title":"Output:"},{"location":"regressor_pyspark/#gbtregressordpy2","text":"\u5206\u5e03\u5f0f\u63d0\u5347\u56de\u5f52\u6811","title":"GBTRegressorDPy2"},{"location":"regressor_pyspark/#tag_1","text":"\u56de\u5f52\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"regressor_pyspark/#param_1","text":"testRate (double) : \u8bad\u7ec3\u96c6\u3001\u6d4b\u8bd5\u96c6\u5207\u5206\u6bd4\u4f8b label (string) : \u6570\u636e\u96c6\u6807\u7b7e maxDepth (int) : \u6700\u5927\u6df1\u5ea6 maxBins (int) : \u6bcf\u4e2a\u7279\u5f81\u5206\u88c2\u65f6\u6700\u5927\u5212\u5206\u6570 minInstancesPerNode (int) : \u843d\u5728\u67d0\u4e00\u51b3\u7b56\u70b9\u4e0a\u7684\u5b9e\u4f8b\u6700\u5c11\u6570\u76ee minInfoGain (double) : \u6700\u5c0f\u4fe1\u606f\u589e\u76ca subsamplingRate (double) : \u7528\u4e8e\u5b66\u4e60\u6bcf\u68f5\u6811\u7684\u8bad\u7ec3\u96c6\u6bd4\u4f8b lossType (string) : \u635f\u5931\u51fd\u6570 maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 stepSize (double) : \u5b66\u4e60\u6b65\u957f seed (double) : \u968f\u673a\u79cd\u5b50","title":"Param:"},{"location":"regressor_pyspark/#input_1","text":"in1 (any)","title":"Input:"},{"location":"regressor_pyspark/#output_1","text":"out1 (any)","title":"Output:"},{"location":"regressor_pyspark/#generalizedlinearregressiondpy2","text":"\u5206\u5e03\u5f0f\u5e7f\u4e49\u7ebf\u6027\u56de\u5f52\u6a21\u578b","title":"GeneralizedLinearRegressionDPy2"},{"location":"regressor_pyspark/#tag_2","text":"\u56de\u5f52\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"regressor_pyspark/#param_2","text":"family (string) : \u6307\u6570\u65cf link (string) : \u5173\u8054\u51fd\u6570 fitIntercept (string) : \u662f\u5426\u8003\u8651\u622a\u8ddd maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 tol (double) : \u6536\u655b\u5224\u636e regParam (double) : \u6b63\u5219\u5316\u53c2\u6570 weightCol (string) : \u5c06\u67d0\u5217\u6240\u6709\u6743\u91cd\u8bbe\u7f6e\u4e3a1.0 solver (string) : \u4f18\u5316\u7b97\u6cd5 linkPredictionCol (string) : \u94fe\u8def\u9884\u6d4b\u5217\u540d","title":"Param:"},{"location":"regressor_pyspark/#input_2","text":"in1 (any)","title":"Input:"},{"location":"regressor_pyspark/#output_2","text":"out1 (any)","title":"Output:"},{"location":"regressor_pyspark/#linearregressiondpy3","text":"\u5206\u5e03\u5f0f\u7ebf\u6027\u56de\u5f52\u6a21\u578b","title":"LinearRegressionDPy3"},{"location":"regressor_pyspark/#tag_3","text":"\u56de\u5f52\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"regressor_pyspark/#param_3","text":"maxIter (int) : \u6700\u5927\u8fed\u4ee3\u6b21\u6570 regParam (double) : \u6b63\u5219\u5316\u53c2\u6570 elasticNetParam (double) : \u56de\u5f52\u6df7\u5408\u53c2\u6570\uff0c\u7b49\u4e8e0\u65f6\u4e3al2\u60e9\u7f5a\uff0c\u7b49\u4e8e1\u65f6\u4e3al1\u60e9\u7f5a tol (double) : \u6536\u655b\u5224\u636e fitIntercept (string) : \u662f\u5426\u8003\u8651\u622a\u8ddd standardization (string) : \u662f\u5426\u6807\u51c6\u5316 solver (string) : \u4f18\u5316\u7b97\u6cd5 weightCol (string) : \u5c06\u8be5\u5217\u6240\u6709\u5b9e\u4f8b\u6743\u91cd\u8bbe\u7f6e\u4e3a1.0 aggregationDepth (int) : \u805a\u96c6\u6811\u65f6\u7684\u5efa\u8bae\u6df1\u5ea6","title":"Param:"},{"location":"regressor_pyspark/#input_3","text":"in1 (any)","title":"Input:"},{"location":"regressor_pyspark/#output_3","text":"out1 (any)","title":"Output:"},{"location":"regressor_pyspark/#randomforestregressordpy3","text":"\u5206\u5e03\u5f0f\u968f\u673a\u68ee\u6797\u56de\u5f52\u6a21\u578b","title":"RandomForestRegressorDPy3"},{"location":"regressor_pyspark/#tag_4","text":"\u56de\u5f52\u6a21\u578b_\u5206\u5e03\u5f0f","title":"Tag:"},{"location":"regressor_pyspark/#param_4","text":"maxDepth (int) : \u6700\u5927\u6df1\u5ea6 maxBins (int) : \u6bcf\u4e2a\u7279\u5f81\u5206\u88c2\u65f6\u5212\u5206\u7684\u6700\u5927\u6570\u91cf minInstancesPerNode (int) : \u843d\u5728\u67d0\u4e2a\u51b3\u7b56\u70b9\u4e0a\u7684\u5b9e\u4f8b\u6700\u5c11\u6570\u76ee minInfoGain (double) : \u6700\u5c0f\u4fe1\u606f\u589e\u76ca impurity (string) : \u4e0d\u7eaf\u5ea6 subsamplingRate (double) : \u7528\u4e8e\u5b66\u4e60\u6bcf\u68f5\u6811\u7684\u8bad\u7ec3\u6570\u636e\u7684\u6bd4\u4f8b seed (double) : \u968f\u673a\u79cd\u5b50 numTrees (int) : \u6811\u7684\u4e2a\u6570 featureSubsetStrategy (string) : \u5207\u5206\u6bcf\u4e2a\u7ed3\u70b9\u65f6\u8003\u8651\u7684\u7279\u5f81\u6570\u76ee","title":"Param:"},{"location":"regressor_pyspark/#input_4","text":"in1 (any)","title":"Input:"},{"location":"regressor_pyspark/#output_4","text":"out1 (any)","title":"Output:"},{"location":"utils_py/","text":"CSV2PKLUnivSPy3 \u5c06csv\u8f6c\u6362\u4e3apkl\u683c\u5f0f Tag: \u901a\u7528\u6a21\u5757 Param: None Input: d_data1 (csv) Output: d_data2 (py3pkl) DataDownloaderUnivSPy3 \u89e3\u6790\u6570\u636e\u6a21\u5757\u8868\u793a\u7684\u8d44\u6e90\u5f15\u7528\uff0c\u7136\u540e\u5bfc\u5165\u5de5\u4f5c\u6d41\u3002 Tag: \u901a\u7528\u6a21\u5757 Param: None Input: data_source (datasource.file) Output: data (any) DataInfoUnivSPy3 \u6570\u636e\u7edf\u8ba1\uff1a\u6570\u636e\u7c7b\u578b\uff0c\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\uff0c\u4e2d\u4f4d\u6570 Tag: \u901a\u7528\u6a21\u5757 Param: None Input: d_data (py3pkl) Output: o_data_type_null (html) o_data_describe (html) HDFSdownloaderUnivSPy3 \u4eceHDFS\u8def\u5f84\u83b7\u53d6\u6570\u636e Tag: \u901a\u7528\u6a21\u5757 Param: None Input: o_path (any) Output: d_data (any) HiveDownloaderUnivSPy3 \u4eceHive\u5bf9\u5e94\u6570\u636e\u5e93\u83b7\u53d6\u6570\u636e Tag: \u901a\u7528\u6a21\u5757 Param: script (string) : Input: o_path (any) Output: d_data (csv) JDBCdownloaderUnivSPy3 \u901a\u8fc7JDBC\u65b9\u5f0f\uff0c\u8bbf\u95ee\u6570\u636e\u5e93\u3002 Tag: \u901a\u7528\u6a21\u5757 Param: jdbc_url (string) : \u6570\u636e\u5e93JDBC\u8fde\u63a5\u4e32 driver_jar (string) : \u6570\u636e\u5e93\u9a71\u52a8\u8def\u5f84 query (string) : SQL\u8bed\u53e5 driver_name (string) : \u9a71\u52a8\u7c7b\u540d delimiter (string) : \u6570\u636e\u7684\u5206\u9694\u7b26 Input: None Output: output_file (any) PKL2CSVUnivSPy3 \u5c06pkl\u8f6c\u6362\u4e3acsv\u683c\u5f0f Tag: \u901a\u7528\u6a21\u5757 Param: None Input: d_data1 (py3pkl) Output: d_data2 (csv) PKLfromStorage \u4ece\u4e2a\u4eba\u5b58\u50a8\u7a7a\u95f4\u4e2d\u8bfb\u5165PKL\u6587\u4ef6 Tag: \u901a\u7528\u6a21\u5757 Param: input_name (string) : \u4ece\u4e2a\u4eba\u5b58\u50a8\u7a7a\u95f4\u8bfb\u5165\u6587\u4ef6\u540d Input: None Output: o_pkl_file (py3pkl) PKLtoStrorage \u5c06PKL\u6587\u4ef6\u5bfc\u5165\u4e2a\u4eba\u5b58\u50a8\u7a7a\u95f4\u4e2d Tag: \u901a\u7528\u6a21\u5757 Param: output_name (string) : \u586b\u5199\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u5b57 foldername (string) : Input: o_pkl_file (any) Output: None","title":"\u901a\u7528\u6a21\u5757"},{"location":"utils_py/#csv2pklunivspy3","text":"\u5c06csv\u8f6c\u6362\u4e3apkl\u683c\u5f0f","title":"CSV2PKLUnivSPy3"},{"location":"utils_py/#tag","text":"\u901a\u7528\u6a21\u5757","title":"Tag:"},{"location":"utils_py/#param","text":"None","title":"Param:"},{"location":"utils_py/#input","text":"d_data1 (csv)","title":"Input:"},{"location":"utils_py/#output","text":"d_data2 (py3pkl)","title":"Output:"},{"location":"utils_py/#datadownloaderunivspy3","text":"\u89e3\u6790\u6570\u636e\u6a21\u5757\u8868\u793a\u7684\u8d44\u6e90\u5f15\u7528\uff0c\u7136\u540e\u5bfc\u5165\u5de5\u4f5c\u6d41\u3002","title":"DataDownloaderUnivSPy3"},{"location":"utils_py/#tag_1","text":"\u901a\u7528\u6a21\u5757","title":"Tag:"},{"location":"utils_py/#param_1","text":"None","title":"Param:"},{"location":"utils_py/#input_1","text":"data_source (datasource.file)","title":"Input:"},{"location":"utils_py/#output_1","text":"data (any)","title":"Output:"},{"location":"utils_py/#datainfounivspy3","text":"\u6570\u636e\u7edf\u8ba1\uff1a\u6570\u636e\u7c7b\u578b\uff0c\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\uff0c\u4e2d\u4f4d\u6570","title":"DataInfoUnivSPy3"},{"location":"utils_py/#tag_2","text":"\u901a\u7528\u6a21\u5757","title":"Tag:"},{"location":"utils_py/#param_2","text":"None","title":"Param:"},{"location":"utils_py/#input_2","text":"d_data (py3pkl)","title":"Input:"},{"location":"utils_py/#output_2","text":"o_data_type_null (html) o_data_describe (html)","title":"Output:"},{"location":"utils_py/#hdfsdownloaderunivspy3","text":"\u4eceHDFS\u8def\u5f84\u83b7\u53d6\u6570\u636e","title":"HDFSdownloaderUnivSPy3"},{"location":"utils_py/#tag_3","text":"\u901a\u7528\u6a21\u5757","title":"Tag:"},{"location":"utils_py/#param_3","text":"None","title":"Param:"},{"location":"utils_py/#input_3","text":"o_path (any)","title":"Input:"},{"location":"utils_py/#output_3","text":"d_data (any)","title":"Output:"},{"location":"utils_py/#hivedownloaderunivspy3","text":"\u4eceHive\u5bf9\u5e94\u6570\u636e\u5e93\u83b7\u53d6\u6570\u636e","title":"HiveDownloaderUnivSPy3"},{"location":"utils_py/#tag_4","text":"\u901a\u7528\u6a21\u5757","title":"Tag:"},{"location":"utils_py/#param_4","text":"script (string) :","title":"Param:"},{"location":"utils_py/#input_4","text":"o_path (any)","title":"Input:"},{"location":"utils_py/#output_4","text":"d_data (csv)","title":"Output:"},{"location":"utils_py/#jdbcdownloaderunivspy3","text":"\u901a\u8fc7JDBC\u65b9\u5f0f\uff0c\u8bbf\u95ee\u6570\u636e\u5e93\u3002","title":"JDBCdownloaderUnivSPy3"},{"location":"utils_py/#tag_5","text":"\u901a\u7528\u6a21\u5757","title":"Tag:"},{"location":"utils_py/#param_5","text":"jdbc_url (string) : \u6570\u636e\u5e93JDBC\u8fde\u63a5\u4e32 driver_jar (string) : \u6570\u636e\u5e93\u9a71\u52a8\u8def\u5f84 query (string) : SQL\u8bed\u53e5 driver_name (string) : \u9a71\u52a8\u7c7b\u540d delimiter (string) : \u6570\u636e\u7684\u5206\u9694\u7b26","title":"Param:"},{"location":"utils_py/#input_5","text":"None","title":"Input:"},{"location":"utils_py/#output_5","text":"output_file (any)","title":"Output:"},{"location":"utils_py/#pkl2csvunivspy3","text":"\u5c06pkl\u8f6c\u6362\u4e3acsv\u683c\u5f0f","title":"PKL2CSVUnivSPy3"},{"location":"utils_py/#tag_6","text":"\u901a\u7528\u6a21\u5757","title":"Tag:"},{"location":"utils_py/#param_6","text":"None","title":"Param:"},{"location":"utils_py/#input_6","text":"d_data1 (py3pkl)","title":"Input:"},{"location":"utils_py/#output_6","text":"d_data2 (csv)","title":"Output:"},{"location":"utils_py/#pklfromstorage","text":"\u4ece\u4e2a\u4eba\u5b58\u50a8\u7a7a\u95f4\u4e2d\u8bfb\u5165PKL\u6587\u4ef6","title":"PKLfromStorage"},{"location":"utils_py/#tag_7","text":"\u901a\u7528\u6a21\u5757","title":"Tag:"},{"location":"utils_py/#param_7","text":"input_name (string) : \u4ece\u4e2a\u4eba\u5b58\u50a8\u7a7a\u95f4\u8bfb\u5165\u6587\u4ef6\u540d","title":"Param:"},{"location":"utils_py/#input_7","text":"None","title":"Input:"},{"location":"utils_py/#output_7","text":"o_pkl_file (py3pkl)","title":"Output:"},{"location":"utils_py/#pkltostrorage","text":"\u5c06PKL\u6587\u4ef6\u5bfc\u5165\u4e2a\u4eba\u5b58\u50a8\u7a7a\u95f4\u4e2d","title":"PKLtoStrorage"},{"location":"utils_py/#tag_8","text":"\u901a\u7528\u6a21\u5757","title":"Tag:"},{"location":"utils_py/#param_8","text":"output_name (string) : \u586b\u5199\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u5b57 foldername (string) :","title":"Param:"},{"location":"utils_py/#input_8","text":"o_pkl_file (any)","title":"Input:"},{"location":"utils_py/#output_8","text":"None","title":"Output:"},{"location":"visualization_py/","text":"ClasEvalNewSPy3 \u5bf9\u4e8c\u5206\u7c7b\u53ca\u591a\u5206\u7c7b\u6a21\u578b\u8fdb\u884c\u8bc4\u4f30\uff08\u5305\u62ecAUC\uff0cKappa\uff0c\u8bc4\u4f30\u62a5\u544a\u53ca\u6df7\u6dc6\u77e9\u9635\u7b49\uff09 Tag: \u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316 Param: None Input: d_true (csv) d_pred (csv) d_prob (csv) Output: o_metric (csv) o_classification_report (txt) o_confusion_matrix (jpg) ClasRocEvalSPy3a \u8f93\u51fa\u5206\u7c7b\u6a21\u578b\u7684ROC\u66f2\u7ebf Tag: \u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316 Param: None Input: d_feature (csv) d_label (csv) m_fitted_model (py3pkl) Output: o_roc_curve (jpg) FormShowCSVUnivSPy3 Tag: \u53ef\u89c6\u5316 Param: None Input: d_data (csv) Output: d_form (html) FormShowUnivSPy3 \u6570\u636e\u663e\u793a Tag: \u53ef\u89c6\u5316 Param: None Input: d_data (py3pkl) Output: d_form (html) KMeansVisuSPy3 \u805a\u7c7b\u4e2d\u5fc3\u96f7\u8fbe\u56fe\u548c\u8098\u90e8\u56fe Tag: \u805a\u7c7b\u6a21\u578b \u53ef\u89c6\u5316 Param: None Input: o_centers (py3pkl) o_distortions (py3pkl) Output: distortion_plot (html) centers_plot (html) PlotLearningCurveSPy3_BestModel \u753b\u51fa\u5b66\u4e60\u66f2\u7ebf\uff0c\u6839\u636e\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u5206\u6570\u5224\u65ad\u662f\u5426\u8fc7\u62df\u5408\u6216\u6b20\u62df\u5408\u3002 Tag: \u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316 Param: n_jobs (int) : Number of jobs to run in parallel n_splits (int) : \u4ea4\u53c9\u9a8c\u8bc1\u65f6\u4f7f\u7528\u6298\u6570 test_size (double) : \u9a8c\u8bc1\u96c6\u767e\u5206\u6bd4 Input: d_feature (csv) d_label (csv) best_model (py3pkl) Output: learning_curve (jpg) PlotLearningCurveSPy3 \u753b\u51fa\u5b66\u4e60\u66f2\u7ebf\uff0c\u6839\u636e\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u5206\u6570\u5224\u65ad\u662f\u5426\u8fc7\u62df\u5408\u6216\u6b20\u62df\u5408\u3002 Tag: \u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316 Param: n_jobs (int) : Number of jobs to run in parallel n_splits (int) : \u4ea4\u53c9\u9a8c\u8bc1\u65f6\u4f7f\u7528\u6298\u6570 test_size (double) : \u9a8c\u8bc1\u96c6\u767e\u5206\u6bd4 model (string) : \u8f93\u5165\u6a21\u578bestimator, \u4f8b\u5982GaussianNB() Input: d_feature (csv) d_label (csv) Output: learning_curve (jpg) ReportPDFClasEvalSPy3 \u8f93\u51fa\u5206\u7c7b\u8bc4\u4f30\u62a5\u544a Tag: \u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316 Param: None Input: o_metric (csv) o_classification_report (txt) o_confusion_matrix (jpg) o_roc_curve (jpg) o_metric_2 (csv) o_classification_report_2 (txt) o_confusion_matrix_2 (jpg) o_roc_curve_2 (jpg) Output: evaluation_report (pdf) WOE_IV_DataSPy3 IV\u7684\u5168\u79f0\u662fInformation Value\uff0c\u4e2d\u6587\u610f\u601d\u662f\u4fe1\u606f\u4ef7\u503c\uff0c\u6216\u8005\u4fe1\u606f\u91cf\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u5177\u4f53\u7684\u91cf\u5316\u6307\u6807\u6765\u8861\u91cf\u6bcf\u4e2a\u81ea\u53d8\u91cf\u7684\u9884\u6d4b\u80fd\u529b\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u91cf\u5316\u6307\u6807\u7684\u5927\u5c0f\uff0c\u6765\u786e\u5b9a\u54ea\u4e9b\u53d8\u91cf\u8fdb\u5165\u6a21\u578b\u3002IV\u5c31\u662f\u8fd9\u6837\u4e00\u79cd\u6307\u6807\uff0c\u4ed6\u53ef\u4ee5\u7528\u6765\u8861\u91cf\u81ea\u53d8\u91cf\u7684\u9884\u6d4b\u80fd\u529b\u3002\u7c7b\u4f3c\u7684\u6307\u6807\u8fd8\u6709\u4fe1\u606f\u589e\u76ca\u3001\u57fa\u5c3c\u7cfb\u6570\u7b49\u7b49\u3002\u9ad8IV\u8868\u793a\u8be5\u7279\u5f81\u548c\u76ee\u6807\u53d8\u91cf\u7684\u5173\u8054\u5ea6\u9ad8\uff1b\u76ee\u6807\u53d8\u91cf\u53ea\u80fd\u662f\u4e8c\u5206\u7c7b\uff1b\u7279\u5f81\u5206\u7bb1\u8d8a\u7ec6\uff0cIV\u8d8a\u9ad8\u3002 WOE\u7684\u5168\u79f0\u662f\u201cWeight of Evidence\u201d\uff0c\u5373\u8bc1\u636e\u6743\u91cd\u3002WOE\u662f\u5bf9\u539f\u59cb\u81ea\u53d8\u91cf\u7684\u4e00\u79cd\u7f16\u7801\u5f62\u5f0f\u3002WOE\u8868\u793a\u7684\u5b9e\u9645\u4e0a\u662f\u201c\u5f53\u524d\u5206\u7ec4\u4e2d\u54cd\u5e94\u5ba2\u6237\u5360\u6240\u6709\u54cd\u5e94\u5ba2\u6237\u7684\u6bd4\u4f8b\u201d\u548c\u201c\u5f53\u524d\u5206\u7ec4\u4e2d\u6ca1\u6709\u54cd\u5e94\u7684\u5ba2\u6237\u5360\u6240\u6709\u6ca1\u6709\u54cd\u5e94\u7684\u5ba2\u6237\u7684\u6bd4\u4f8b\u201d\u7684\u5dee\u5f02\u3002 Tag: \u53ef\u89c6\u5316 \u6570\u636e\u9884\u5904\u7406 Param: label (string) : \u6807\u7b7e\u53d8\u91cf Input: d_data1 (py3pkl) o_all_var (py3pkl) Output: o_IV_bar_plot (jpg) o_WOE_corr_plot (jpg) o_vars_after_corr (txt) o_vars_after_VIF (txt) d_data2 (py3pkl) o_vars_after_VIF_pkl (py3pkl)","title":"\u53ef\u89c6\u5316"},{"location":"visualization_py/#clasevalnewspy3","text":"\u5bf9\u4e8c\u5206\u7c7b\u53ca\u591a\u5206\u7c7b\u6a21\u578b\u8fdb\u884c\u8bc4\u4f30\uff08\u5305\u62ecAUC\uff0cKappa\uff0c\u8bc4\u4f30\u62a5\u544a\u53ca\u6df7\u6dc6\u77e9\u9635\u7b49\uff09","title":"ClasEvalNewSPy3"},{"location":"visualization_py/#tag","text":"\u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316","title":"Tag:"},{"location":"visualization_py/#param","text":"None","title":"Param:"},{"location":"visualization_py/#input","text":"d_true (csv) d_pred (csv) d_prob (csv)","title":"Input:"},{"location":"visualization_py/#output","text":"o_metric (csv) o_classification_report (txt) o_confusion_matrix (jpg)","title":"Output:"},{"location":"visualization_py/#clasrocevalspy3a","text":"\u8f93\u51fa\u5206\u7c7b\u6a21\u578b\u7684ROC\u66f2\u7ebf","title":"ClasRocEvalSPy3a"},{"location":"visualization_py/#tag_1","text":"\u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316","title":"Tag:"},{"location":"visualization_py/#param_1","text":"None","title":"Param:"},{"location":"visualization_py/#input_1","text":"d_feature (csv) d_label (csv) m_fitted_model (py3pkl)","title":"Input:"},{"location":"visualization_py/#output_1","text":"o_roc_curve (jpg)","title":"Output:"},{"location":"visualization_py/#formshowcsvunivspy3","text":"","title":"FormShowCSVUnivSPy3"},{"location":"visualization_py/#tag_2","text":"\u53ef\u89c6\u5316","title":"Tag:"},{"location":"visualization_py/#param_2","text":"None","title":"Param:"},{"location":"visualization_py/#input_2","text":"d_data (csv)","title":"Input:"},{"location":"visualization_py/#output_2","text":"d_form (html)","title":"Output:"},{"location":"visualization_py/#formshowunivspy3","text":"\u6570\u636e\u663e\u793a","title":"FormShowUnivSPy3"},{"location":"visualization_py/#tag_3","text":"\u53ef\u89c6\u5316","title":"Tag:"},{"location":"visualization_py/#param_3","text":"None","title":"Param:"},{"location":"visualization_py/#input_3","text":"d_data (py3pkl)","title":"Input:"},{"location":"visualization_py/#output_3","text":"d_form (html)","title":"Output:"},{"location":"visualization_py/#kmeansvisuspy3","text":"\u805a\u7c7b\u4e2d\u5fc3\u96f7\u8fbe\u56fe\u548c\u8098\u90e8\u56fe","title":"KMeansVisuSPy3"},{"location":"visualization_py/#tag_4","text":"\u805a\u7c7b\u6a21\u578b \u53ef\u89c6\u5316","title":"Tag:"},{"location":"visualization_py/#param_4","text":"None","title":"Param:"},{"location":"visualization_py/#input_4","text":"o_centers (py3pkl) o_distortions (py3pkl)","title":"Input:"},{"location":"visualization_py/#output_4","text":"distortion_plot (html) centers_plot (html)","title":"Output:"},{"location":"visualization_py/#plotlearningcurvespy3_bestmodel","text":"\u753b\u51fa\u5b66\u4e60\u66f2\u7ebf\uff0c\u6839\u636e\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u5206\u6570\u5224\u65ad\u662f\u5426\u8fc7\u62df\u5408\u6216\u6b20\u62df\u5408\u3002","title":"PlotLearningCurveSPy3_BestModel"},{"location":"visualization_py/#tag_5","text":"\u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316","title":"Tag:"},{"location":"visualization_py/#param_5","text":"n_jobs (int) : Number of jobs to run in parallel n_splits (int) : \u4ea4\u53c9\u9a8c\u8bc1\u65f6\u4f7f\u7528\u6298\u6570 test_size (double) : \u9a8c\u8bc1\u96c6\u767e\u5206\u6bd4","title":"Param:"},{"location":"visualization_py/#input_5","text":"d_feature (csv) d_label (csv) best_model (py3pkl)","title":"Input:"},{"location":"visualization_py/#output_5","text":"learning_curve (jpg)","title":"Output:"},{"location":"visualization_py/#plotlearningcurvespy3","text":"\u753b\u51fa\u5b66\u4e60\u66f2\u7ebf\uff0c\u6839\u636e\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u5206\u6570\u5224\u65ad\u662f\u5426\u8fc7\u62df\u5408\u6216\u6b20\u62df\u5408\u3002","title":"PlotLearningCurveSPy3"},{"location":"visualization_py/#tag_6","text":"\u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316","title":"Tag:"},{"location":"visualization_py/#param_6","text":"n_jobs (int) : Number of jobs to run in parallel n_splits (int) : \u4ea4\u53c9\u9a8c\u8bc1\u65f6\u4f7f\u7528\u6298\u6570 test_size (double) : \u9a8c\u8bc1\u96c6\u767e\u5206\u6bd4 model (string) : \u8f93\u5165\u6a21\u578bestimator, \u4f8b\u5982GaussianNB()","title":"Param:"},{"location":"visualization_py/#input_6","text":"d_feature (csv) d_label (csv)","title":"Input:"},{"location":"visualization_py/#output_6","text":"learning_curve (jpg)","title":"Output:"},{"location":"visualization_py/#reportpdfclasevalspy3","text":"\u8f93\u51fa\u5206\u7c7b\u8bc4\u4f30\u62a5\u544a","title":"ReportPDFClasEvalSPy3"},{"location":"visualization_py/#tag_7","text":"\u6a21\u578b\u8bc4\u4f30 \u53ef\u89c6\u5316","title":"Tag:"},{"location":"visualization_py/#param_7","text":"None","title":"Param:"},{"location":"visualization_py/#input_7","text":"o_metric (csv) o_classification_report (txt) o_confusion_matrix (jpg) o_roc_curve (jpg) o_metric_2 (csv) o_classification_report_2 (txt) o_confusion_matrix_2 (jpg) o_roc_curve_2 (jpg)","title":"Input:"},{"location":"visualization_py/#output_7","text":"evaluation_report (pdf)","title":"Output:"},{"location":"visualization_py/#woe_iv_dataspy3","text":"IV\u7684\u5168\u79f0\u662fInformation Value\uff0c\u4e2d\u6587\u610f\u601d\u662f\u4fe1\u606f\u4ef7\u503c\uff0c\u6216\u8005\u4fe1\u606f\u91cf\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u5177\u4f53\u7684\u91cf\u5316\u6307\u6807\u6765\u8861\u91cf\u6bcf\u4e2a\u81ea\u53d8\u91cf\u7684\u9884\u6d4b\u80fd\u529b\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u91cf\u5316\u6307\u6807\u7684\u5927\u5c0f\uff0c\u6765\u786e\u5b9a\u54ea\u4e9b\u53d8\u91cf\u8fdb\u5165\u6a21\u578b\u3002IV\u5c31\u662f\u8fd9\u6837\u4e00\u79cd\u6307\u6807\uff0c\u4ed6\u53ef\u4ee5\u7528\u6765\u8861\u91cf\u81ea\u53d8\u91cf\u7684\u9884\u6d4b\u80fd\u529b\u3002\u7c7b\u4f3c\u7684\u6307\u6807\u8fd8\u6709\u4fe1\u606f\u589e\u76ca\u3001\u57fa\u5c3c\u7cfb\u6570\u7b49\u7b49\u3002\u9ad8IV\u8868\u793a\u8be5\u7279\u5f81\u548c\u76ee\u6807\u53d8\u91cf\u7684\u5173\u8054\u5ea6\u9ad8\uff1b\u76ee\u6807\u53d8\u91cf\u53ea\u80fd\u662f\u4e8c\u5206\u7c7b\uff1b\u7279\u5f81\u5206\u7bb1\u8d8a\u7ec6\uff0cIV\u8d8a\u9ad8\u3002 WOE\u7684\u5168\u79f0\u662f\u201cWeight of Evidence\u201d\uff0c\u5373\u8bc1\u636e\u6743\u91cd\u3002WOE\u662f\u5bf9\u539f\u59cb\u81ea\u53d8\u91cf\u7684\u4e00\u79cd\u7f16\u7801\u5f62\u5f0f\u3002WOE\u8868\u793a\u7684\u5b9e\u9645\u4e0a\u662f\u201c\u5f53\u524d\u5206\u7ec4\u4e2d\u54cd\u5e94\u5ba2\u6237\u5360\u6240\u6709\u54cd\u5e94\u5ba2\u6237\u7684\u6bd4\u4f8b\u201d\u548c\u201c\u5f53\u524d\u5206\u7ec4\u4e2d\u6ca1\u6709\u54cd\u5e94\u7684\u5ba2\u6237\u5360\u6240\u6709\u6ca1\u6709\u54cd\u5e94\u7684\u5ba2\u6237\u7684\u6bd4\u4f8b\u201d\u7684\u5dee\u5f02\u3002","title":"WOE_IV_DataSPy3"},{"location":"visualization_py/#tag_8","text":"\u53ef\u89c6\u5316 \u6570\u636e\u9884\u5904\u7406","title":"Tag:"},{"location":"visualization_py/#param_8","text":"label (string) : \u6807\u7b7e\u53d8\u91cf","title":"Param:"},{"location":"visualization_py/#input_8","text":"d_data1 (py3pkl) o_all_var (py3pkl)","title":"Input:"},{"location":"visualization_py/#output_8","text":"o_IV_bar_plot (jpg) o_WOE_corr_plot (jpg) o_vars_after_corr (txt) o_vars_after_VIF (txt) d_data2 (py3pkl) o_vars_after_VIF_pkl (py3pkl)","title":"Output:"}]}